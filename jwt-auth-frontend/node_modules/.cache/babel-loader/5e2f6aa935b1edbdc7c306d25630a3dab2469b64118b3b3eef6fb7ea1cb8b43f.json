{"ast":null,"code":"var _jsxFileName = \"/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './Dashboard.css';\n// import PendingUsers from \"../components/PendingUser\";\n// import { Link } from 'react-router-dom';\n\n// const Dashboard = () => {\n//   const [clients, setClients] = useState([]);\n//   const [search, setSearch] = useState('');\n//   const [filters, setFilters] = useState({\n//     region: '',\n//     industry: '',\n//     status: '',\n//   });\n//   const [sortOrder, setSortOrder] = useState('asc');\n//   const [sortColumn, setSortColumn] = useState('client_name');\n//   const [authToken, setAuthToken] = useState(localStorage.getItem('token') || '');\n//   const [editingClient, setEditingClient] = useState(null); // Client being edited\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     fetchClients();\n//   }, [filters, sortColumn, sortOrder]);\n\n//   const fetchClients = () => {\n//     const query = new URLSearchParams({\n//       search,\n//       region: filters.region,\n//       industry: filters.industry,\n//       status: filters.status,\n//       sortColumn,\n//       sortOrder,\n//     });\n\n//     axios\n//       .get(`http://localhost:5005/api/users?${query.toString()}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then((response) => {\n//         setClients(response.data);\n//       })\n//       .catch((err) => {\n//         console.error('Error fetching clients:', err);\n//       });\n//   };\n\n//   const handleSearch = (e) => {\n//     setSearch(e.target.value);\n//   };\n\n//   const handleFilterChange = (e) => {\n//     const { name, value } = e.target;\n//     setFilters({ ...filters, [name]: value });\n//   };\n\n//   const handleSort = (column) => {\n//     const newSortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n//     setSortOrder(newSortOrder);\n//     setSortColumn(column);\n//   };\n\n//   const handleEditClick = (client) => {\n//     setEditingClient(client); // Set the client for editing\n//   };\n\n//   const handleEditChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditingClient({ ...editingClient, [name]: value });\n//   };\n\n//   const handleAddressChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditingClient({\n//       ...editingClient,\n//       address: {\n//         ...editingClient.address,\n//         [name]: value,\n//       },\n//     });\n//   };\n\n//   const handleEditSubmit = async () => {\n//     try {\n//       await axios.put(\n//         `http://localhost:5005/api/users/${editingClient._id}`,\n//         editingClient,\n//         {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         }\n//       );\n//       // Update client list with the new details\n//       setClients(\n//         clients.map((client) =>\n//           client._id === editingClient._id ? editingClient : client\n//         )\n//       );\n//       setEditingClient(null); // Close the editing form\n//     } catch (err) {\n//       console.error('Error updating client:', err);\n//       setError('Failed to update client. Please try again.');\n//     }\n//   };\n\n//   const handleDelete = (clientId) => {\n//     axios\n//       .delete(`http://localhost:5005/api/users/${clientId}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then(() => {\n//         setClients(clients.filter((client) => client._id !== clientId));\n//         alert('Client deleted successfully');\n//       })\n//       .catch((err) => {\n//         console.error('Error deleting client:', err);\n//       });\n//   };\n\n//   return (\n//     <div className=\"dashboard\">\n//       {/* <h1 className='Dash'>Client Dashboard</h1> */}\n//       <PendingUsers />\n//       <h1 className='Dash'>Clients</h1>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Search clients...\"\n//         value={search}\n//         onChange={handleSearch}\n//       />\n\n//       {/* Filter Options */}\n//       <select name=\"region\" onChange={handleFilterChange} value={filters.region}>\n//         <option value=\"\">All Regions</option>\n//         <option value=\"North America\">North America</option>\n//         <option value=\"Europe\">Europe</option>\n//         <option value=\"Asia\">Asia</option>\n//       </select>\n//       <select\n//         name=\"industry\"\n//         onChange={handleFilterChange}\n//         value={filters.industry}\n//       >\n//         <option value=\"\">All Industries</option>\n//         <option value=\"Finance\">Finance</option>\n//         <option value=\"Technology\">Technology</option>\n//         <option value=\"Healthcare\">Healthcare</option>\n//       </select>\n//       <select\n//         name=\"status\"\n//         onChange={handleFilterChange}\n//         value={filters.status}\n//       >\n//         <option value=\"\">All Statuses</option>\n//         <option value=\"Active\">Active</option>\n//         <option value=\"Inactive\">Inactive</option>\n//       </select>\n\n//       <table>\n//         <thead>\n//           <tr>\n//             <th onClick={() => handleSort('client_name')}>Client Name</th>\n//             <th onClick={() => handleSort('status')}>Status</th>\n//             <th onClick={() => handleSort('industry')}>Industry</th>\n\n//             <th>Email</th>\n//             <th>Phone</th>\n//             <th>Contact Person</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {clients.map((client) => (\n//             <tr key={client._id}>\n//                 <td>\n//                   <Link to={`/client/${client._id}`}>{client.client_name}</Link>\n//                 </td>\n\n//             <td>{client.status}</td>\n//               <td>{client.industry}</td>\n//               <td>{client.email}</td>\n//               <td>{client.phone}</td>\n//               <td>{client.contact_person}</td>\n//               <td>\n//                 <button onClick={() => handleEditClick(client)}>Edit</button>\n//                 <button onClick={() => handleDelete(client._id)}>Delete</button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n\n//       {editingClient && (\n//         <div className=\"edit-modal\">\n//           <h3>Edit Client</h3>\n//           <input\n//             type=\"text\"\n//             name=\"client_name\"\n//             value={editingClient.client_name}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"contact_person\"\n//             value={editingClient.contact_person}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"email\"\n//             value={editingClient.email}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"phone\"\n//             value={editingClient.phone}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"industry\"\n//             value={editingClient.industry}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <h3>Address</h3>\n//           <input\n//             type=\"text\"\n//             name=\"street\"\n//             value={editingClient.address?.street}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"city\"\n//             value={editingClient.address?.city}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"state\"\n//             value={editingClient.address?.state}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"postal_code\"\n//             value={editingClient.address?.postal_code}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"country\"\n//             value={editingClient.address?.country}\n//             onChange={handleAddressChange}\n//           />\n//           <button onClick={handleEditSubmit}>Save</button>\n//           <button onClick={() => setEditingClient(null)}>Cancel</button>\n//           {error && <p>{error}</p>}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { Container, TextField, Select, MenuItem, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button, Typography, Modal, Box } from \"@mui/material\";\nimport PendingUsers from \"../components/PendingUser\";\nimport \"./Dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [clients, setClients] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [filters, setFilters] = useState({\n    region: \"\",\n    industry: \"\",\n    status: \"\"\n  });\n  const [sortOrder, setSortOrder] = useState(\"asc\");\n  const [sortColumn, setSortColumn] = useState(\"client_name\");\n  const [authToken] = useState(localStorage.getItem(\"token\") || \"\");\n  const [editingClient, setEditingClient] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [modalOpen, setModalOpen] = useState(false);\n  useEffect(() => {\n    fetchClients();\n  }, [filters, sortColumn, sortOrder]);\n  const fetchClients = () => {\n    const query = new URLSearchParams({\n      search,\n      ...filters,\n      sortColumn,\n      sortOrder\n    }).toString();\n    axios.get(`http://localhost:5005/api/users?${query}`, {\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    }).then(response => setClients(response.data)).catch(err => console.error(\"Error fetching clients:\", err));\n  };\n  const handleSort = column => {\n    setSortOrder(sortOrder === \"asc\" ? \"desc\" : \"asc\");\n    setSortColumn(column);\n  };\n  const handleEditClick = client => {\n    setEditingClient(client);\n    setModalOpen(true);\n  };\n  const handleEditChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditingClient({\n      ...editingClient,\n      [name]: value\n    });\n  };\n  const handleEditSubmit = async () => {\n    try {\n      await axios.put(`http://localhost:5005/api/users/${editingClient._id}`, editingClient, {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      });\n      setClients(clients.map(client => client._id === editingClient._id ? editingClient : client));\n      setModalOpen(false);\n    } catch (err) {\n      console.error(\"Error updating client:\", err);\n      setError(\"Failed to update client. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(PendingUsers, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Clients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Search clients\",\n      variant: \"outlined\",\n      fullWidth: true,\n      margin: \"normal\",\n      value: search,\n      onChange: e => setSearch(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      gap: 2,\n      mb: 3,\n      children: [/*#__PURE__*/_jsxDEV(Select, {\n        name: \"region\",\n        value: filters.region,\n        onChange: e => setFilters({\n          ...filters,\n          region: e.target.value\n        }),\n        displayEmpty: true,\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"\",\n          children: \"All Regions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"North America\",\n          children: \"North America\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Europe\",\n          children: \"Europe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Asia\",\n          children: \"Asia\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        name: \"industry\",\n        value: filters.industry,\n        onChange: e => setFilters({\n          ...filters,\n          industry: e.target.value\n        }),\n        displayEmpty: true,\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"\",\n          children: \"All Industries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Finance\",\n          children: \"Finance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Technology\",\n          children: \"Technology\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Healthcare\",\n          children: \"Healthcare\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              onClick: () => handleSort(\"client_name\"),\n              children: \"Client Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Industry\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: clients.map(client => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/client/${client._id}`,\n                children: client.client_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: client.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: client.industry\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: client.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: client.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: () => handleEditClick(client),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 17\n            }, this)]\n          }, client._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: modalOpen,\n      onClose: () => setModalOpen(false),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: \"modal-box\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Edit Client\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Client Name\",\n          name: \"client_name\",\n          fullWidth: true,\n          value: (editingClient === null || editingClient === void 0 ? void 0 : editingClient.client_name) || \"\",\n          onChange: handleEditChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleEditSubmit,\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 371,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"UCfn6mBPkIKgOAXz3yjKUEoe3bQ=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","Container","TextField","Select","MenuItem","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","Typography","Modal","Box","PendingUsers","jsxDEV","_jsxDEV","Dashboard","_s","clients","setClients","search","setSearch","filters","setFilters","region","industry","status","sortOrder","setSortOrder","sortColumn","setSortColumn","authToken","localStorage","getItem","editingClient","setEditingClient","error","setError","modalOpen","setModalOpen","fetchClients","query","URLSearchParams","toString","get","headers","Authorization","then","response","data","catch","err","console","handleSort","column","handleEditClick","client","handleEditChange","e","name","value","target","handleEditSubmit","put","_id","map","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","gutterBottom","label","fullWidth","margin","onChange","display","gap","mb","displayEmpty","component","onClick","to","client_name","email","phone","color","open","onClose","className","_c","$RefreshReg$"],"sources":["/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/Dashboard.js"],"sourcesContent":["\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './Dashboard.css';\n// import PendingUsers from \"../components/PendingUser\";\n// import { Link } from 'react-router-dom';\n\n// const Dashboard = () => {\n//   const [clients, setClients] = useState([]);\n//   const [search, setSearch] = useState('');\n//   const [filters, setFilters] = useState({\n//     region: '',\n//     industry: '',\n//     status: '',\n//   });\n//   const [sortOrder, setSortOrder] = useState('asc');\n//   const [sortColumn, setSortColumn] = useState('client_name');\n//   const [authToken, setAuthToken] = useState(localStorage.getItem('token') || '');\n//   const [editingClient, setEditingClient] = useState(null); // Client being edited\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     fetchClients();\n//   }, [filters, sortColumn, sortOrder]);\n\n//   const fetchClients = () => {\n//     const query = new URLSearchParams({\n//       search,\n//       region: filters.region,\n//       industry: filters.industry,\n//       status: filters.status,\n//       sortColumn,\n//       sortOrder,\n//     });\n\n//     axios\n//       .get(`http://localhost:5005/api/users?${query.toString()}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then((response) => {\n//         setClients(response.data);\n//       })\n//       .catch((err) => {\n//         console.error('Error fetching clients:', err);\n//       });\n//   };\n\n//   const handleSearch = (e) => {\n//     setSearch(e.target.value);\n//   };\n\n//   const handleFilterChange = (e) => {\n//     const { name, value } = e.target;\n//     setFilters({ ...filters, [name]: value });\n//   };\n\n//   const handleSort = (column) => {\n//     const newSortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n//     setSortOrder(newSortOrder);\n//     setSortColumn(column);\n//   };\n\n//   const handleEditClick = (client) => {\n//     setEditingClient(client); // Set the client for editing\n//   };\n\n//   const handleEditChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditingClient({ ...editingClient, [name]: value });\n//   };\n\n//   const handleAddressChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditingClient({\n//       ...editingClient,\n//       address: {\n//         ...editingClient.address,\n//         [name]: value,\n//       },\n//     });\n//   };\n\n//   const handleEditSubmit = async () => {\n//     try {\n//       await axios.put(\n//         `http://localhost:5005/api/users/${editingClient._id}`,\n//         editingClient,\n//         {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         }\n//       );\n//       // Update client list with the new details\n//       setClients(\n//         clients.map((client) =>\n//           client._id === editingClient._id ? editingClient : client\n//         )\n//       );\n//       setEditingClient(null); // Close the editing form\n//     } catch (err) {\n//       console.error('Error updating client:', err);\n//       setError('Failed to update client. Please try again.');\n//     }\n//   };\n\n//   const handleDelete = (clientId) => {\n//     axios\n//       .delete(`http://localhost:5005/api/users/${clientId}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then(() => {\n//         setClients(clients.filter((client) => client._id !== clientId));\n//         alert('Client deleted successfully');\n//       })\n//       .catch((err) => {\n//         console.error('Error deleting client:', err);\n//       });\n//   };\n\n//   return (\n//     <div className=\"dashboard\">\n//       {/* <h1 className='Dash'>Client Dashboard</h1> */}\n//       <PendingUsers />\n//       <h1 className='Dash'>Clients</h1>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Search clients...\"\n//         value={search}\n//         onChange={handleSearch}\n//       />\n\n//       {/* Filter Options */}\n//       <select name=\"region\" onChange={handleFilterChange} value={filters.region}>\n//         <option value=\"\">All Regions</option>\n//         <option value=\"North America\">North America</option>\n//         <option value=\"Europe\">Europe</option>\n//         <option value=\"Asia\">Asia</option>\n//       </select>\n//       <select\n//         name=\"industry\"\n//         onChange={handleFilterChange}\n//         value={filters.industry}\n//       >\n//         <option value=\"\">All Industries</option>\n//         <option value=\"Finance\">Finance</option>\n//         <option value=\"Technology\">Technology</option>\n//         <option value=\"Healthcare\">Healthcare</option>\n//       </select>\n//       <select\n//         name=\"status\"\n//         onChange={handleFilterChange}\n//         value={filters.status}\n//       >\n//         <option value=\"\">All Statuses</option>\n//         <option value=\"Active\">Active</option>\n//         <option value=\"Inactive\">Inactive</option>\n//       </select>\n\n//       <table>\n//         <thead>\n//           <tr>\n//             <th onClick={() => handleSort('client_name')}>Client Name</th>\n//             <th onClick={() => handleSort('status')}>Status</th>\n//             <th onClick={() => handleSort('industry')}>Industry</th>\n            \n//             <th>Email</th>\n//             <th>Phone</th>\n//             <th>Contact Person</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {clients.map((client) => (\n//             <tr key={client._id}>\n//                 <td>\n//                   <Link to={`/client/${client._id}`}>{client.client_name}</Link>\n//                 </td>\n              \n              \n//             <td>{client.status}</td>\n//               <td>{client.industry}</td>\n//               <td>{client.email}</td>\n//               <td>{client.phone}</td>\n//               <td>{client.contact_person}</td>\n//               <td>\n//                 <button onClick={() => handleEditClick(client)}>Edit</button>\n//                 <button onClick={() => handleDelete(client._id)}>Delete</button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n\n//       {editingClient && (\n//         <div className=\"edit-modal\">\n//           <h3>Edit Client</h3>\n//           <input\n//             type=\"text\"\n//             name=\"client_name\"\n//             value={editingClient.client_name}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"contact_person\"\n//             value={editingClient.contact_person}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"email\"\n//             value={editingClient.email}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"phone\"\n//             value={editingClient.phone}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"industry\"\n//             value={editingClient.industry}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <h3>Address</h3>\n//           <input\n//             type=\"text\"\n//             name=\"street\"\n//             value={editingClient.address?.street}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"city\"\n//             value={editingClient.address?.city}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"state\"\n//             value={editingClient.address?.state}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"postal_code\"\n//             value={editingClient.address?.postal_code}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"country\"\n//             value={editingClient.address?.country}\n//             onChange={handleAddressChange}\n//           />\n//           <button onClick={handleEditSubmit}>Save</button>\n//           <button onClick={() => setEditingClient(null)}>Cancel</button>\n//           {error && <p>{error}</p>}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Container,\n  TextField,\n  Select,\n  MenuItem,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Button,\n  Typography,\n  Modal,\n  Box,\n} from \"@mui/material\";\nimport PendingUsers from \"../components/PendingUser\";\nimport \"./Dashboard.css\";\n\nconst Dashboard = () => {\n  const [clients, setClients] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [filters, setFilters] = useState({\n    region: \"\",\n    industry: \"\",\n    status: \"\",\n  });\n  const [sortOrder, setSortOrder] = useState(\"asc\");\n  const [sortColumn, setSortColumn] = useState(\"client_name\");\n  const [authToken] = useState(localStorage.getItem(\"token\") || \"\");\n  const [editingClient, setEditingClient] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [modalOpen, setModalOpen] = useState(false);\n\n  useEffect(() => {\n    fetchClients();\n  }, [filters, sortColumn, sortOrder]);\n\n  const fetchClients = () => {\n    const query = new URLSearchParams({\n      search,\n      ...filters,\n      sortColumn,\n      sortOrder,\n    }).toString();\n\n    axios\n      .get(`http://localhost:5005/api/users?${query}`, {\n        headers: { Authorization: `Bearer ${authToken}` },\n      })\n      .then((response) => setClients(response.data))\n      .catch((err) => console.error(\"Error fetching clients:\", err));\n  };\n\n  const handleSort = (column) => {\n    setSortOrder(sortOrder === \"asc\" ? \"desc\" : \"asc\");\n    setSortColumn(column);\n  };\n\n  const handleEditClick = (client) => {\n    setEditingClient(client);\n    setModalOpen(true);\n  };\n\n  const handleEditChange = (e) => {\n    const { name, value } = e.target;\n    setEditingClient({ ...editingClient, [name]: value });\n  };\n\n  const handleEditSubmit = async () => {\n    try {\n      await axios.put(\n        `http://localhost:5005/api/users/${editingClient._id}`,\n        editingClient,\n        { headers: { Authorization: `Bearer ${authToken}` } }\n      );\n      setClients(\n        clients.map((client) =>\n          client._id === editingClient._id ? editingClient : client\n        )\n      );\n      setModalOpen(false);\n    } catch (err) {\n      console.error(\"Error updating client:\", err);\n      setError(\"Failed to update client. Please try again.\");\n    }\n  };\n\n  return (\n    <Container>\n      <PendingUsers />\n      <Typography variant=\"h4\" gutterBottom>\n        Clients\n      </Typography>\n\n      <TextField\n        label=\"Search clients\"\n        variant=\"outlined\"\n        fullWidth\n        margin=\"normal\"\n        value={search}\n        onChange={(e) => setSearch(e.target.value)}\n      />\n\n      <Box display=\"flex\" gap={2} mb={3}>\n        <Select\n          name=\"region\"\n          value={filters.region}\n          onChange={(e) => setFilters({ ...filters, region: e.target.value })}\n          displayEmpty\n          fullWidth\n        >\n          <MenuItem value=\"\">All Regions</MenuItem>\n          <MenuItem value=\"North America\">North America</MenuItem>\n          <MenuItem value=\"Europe\">Europe</MenuItem>\n          <MenuItem value=\"Asia\">Asia</MenuItem>\n        </Select>\n\n        <Select\n          name=\"industry\"\n          value={filters.industry}\n          onChange={(e) => setFilters({ ...filters, industry: e.target.value })}\n          displayEmpty\n          fullWidth\n        >\n          <MenuItem value=\"\">All Industries</MenuItem>\n          <MenuItem value=\"Finance\">Finance</MenuItem>\n          <MenuItem value=\"Technology\">Technology</MenuItem>\n          <MenuItem value=\"Healthcare\">Healthcare</MenuItem>\n        </Select>\n      </Box>\n\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell onClick={() => handleSort(\"client_name\")}>\n                Client Name\n              </TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell>Industry</TableCell>\n              <TableCell>Email</TableCell>\n              <TableCell>Phone</TableCell>\n              <TableCell>Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {clients.map((client) => (\n              <TableRow key={client._id}>\n                <TableCell>\n                  <Link to={`/client/${client._id}`}>{client.client_name}</Link>\n                </TableCell>\n                <TableCell>{client.status}</TableCell>\n                <TableCell>{client.industry}</TableCell>\n                <TableCell>{client.email}</TableCell>\n                <TableCell>{client.phone}</TableCell>\n                <TableCell>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => handleEditClick(client)}\n                  >\n                    Edit\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      {/* Edit Modal */}\n      <Modal open={modalOpen} onClose={() => setModalOpen(false)}>\n        <Box className=\"modal-box\">\n          <Typography variant=\"h6\">Edit Client</Typography>\n          <TextField\n            label=\"Client Name\"\n            name=\"client_name\"\n            fullWidth\n            value={editingClient?.client_name || \"\"}\n            onChange={handleEditChange}\n          />\n          <Button onClick={handleEditSubmit} variant=\"contained\" color=\"primary\">\n            Save\n          </Button>\n        </Box>\n      </Modal>\n    </Container>\n  );\n};\n\nexport default Dashboard;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}