{"ast":null,"code":"var _jsxFileName = \"/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/ProjectPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectsPage = () => {\n  _s();\n  const [pendingProjects, setPendingProjects] = useState([]);\n  const [approvedProjects, setApprovedProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [editProject, setEditProject] = useState(null);\n  const [formData, setFormData] = useState({\n    project_name: '',\n    description: '',\n    start_date: '',\n    end_date: '',\n    status: 'Pending',\n    budget: '',\n    team_members: ''\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5005/api/projects\");\n        const allProjects = response.data;\n        setPendingProjects(allProjects.filter(project => !project.isApproved));\n        setApprovedProjects(allProjects.filter(project => project.isApproved));\n        setLoading(false);\n      } catch (err) {\n        setError(\"Failed to fetch projects. Please try again later.\");\n        setLoading(false);\n      }\n    };\n    fetchProjects();\n  }, []);\n  const handleViewDetails = projectId => {\n    navigate(`/project/${projectId}`);\n  };\n  const handleApprove = async projectId => {\n    try {\n      await axios.put(`http://localhost:5005/api/projects/${projectId}/approve`);\n      alert(\"Project approved successfully\");\n      setPendingProjects(prev => prev.filter(project => project._id !== projectId));\n      const approvedProject = pendingProjects.find(project => project._id === projectId);\n      setApprovedProjects(prev => [...prev, {\n        ...approvedProject,\n        isApproved: true\n      }]);\n    } catch (err) {\n      console.error(\"Error approving project:\", err);\n      alert(\"Failed to approve project\");\n    }\n  };\n  const handleReject = async projectId => {\n    try {\n      await axios.put(`http://localhost:5005/api/projects/${projectId}/reject`);\n      alert(\"Project rejected successfully\");\n      setPendingProjects(prev => prev.filter(project => project._id !== projectId));\n    } catch (err) {\n      console.error(\"Error rejecting project:\", err);\n      alert(\"Failed to reject project\");\n    }\n  };\n  const handleStatusChange = async (projectId, status) => {\n    try {\n      await axios.put(`http://localhost:5005/api/projects/${projectId}`, {\n        status\n      });\n      alert(\"Project status updated successfully\");\n      setApprovedProjects(prevProjects => prevProjects.map(project => project._id === projectId ? {\n        ...project,\n        status: status\n      } : project));\n    } catch (err) {\n      console.error(\"Error updating project status:\", err);\n      alert(\"Failed to update project status\");\n    }\n  };\n  const handleEdit = project => {\n    setEditProject(project);\n    setFormData({\n      project_name: project.project_name,\n      description: project.description,\n      start_date: project.start_date,\n      end_date: project.end_date,\n      status: project.status,\n      budget: project.budget,\n      team_members: project.team_members.join(', ') // Assuming team_members is an array of names\n    });\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleSubmitEdit = async e => {\n    e.preventDefault();\n    try {\n      const updatedProject = {\n        ...formData,\n        team_members: formData.team_members.split(',').map(member => member.trim()) // Convert to an array\n      };\n      await axios.put(`http://localhost:5005/api/projects/${editProject._id}`, updatedProject);\n      alert(\"Project updated successfully\");\n      setApprovedProjects(prev => prev.map(project => project._id === editProject._id ? {\n        ...project,\n        ...updatedProject\n      } : project));\n      setEditProject(null);\n      setFormData({\n        project_name: '',\n        description: '',\n        start_date: '',\n        end_date: '',\n        status: 'Pending',\n        budget: '',\n        team_members: ''\n      });\n    } catch (err) {\n      console.error(\"Error updating project:\", err);\n      alert(\"Failed to update project\");\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: pageStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pending Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), pendingProjects.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No pending projects found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      style: tableStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Project ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Project Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: pendingProjects.map(project => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: project._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: project.project_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: project.client_id.client_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleApprove(project._id),\n              style: {\n                ...buttonStyle,\n                backgroundColor: \"#28a745\"\n              },\n              children: \"Approve\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleReject(project._id),\n              style: {\n                ...buttonStyle,\n                backgroundColor: \"#dc3545\"\n              },\n              children: \"Reject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this)]\n        }, project._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Approved Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), approvedProjects.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No approved projects found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      style: tableStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Project ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Project Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: approvedProjects.map(project => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: project._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: project.project_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: project.client_id.client_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: project.status,\n              onChange: e => handleStatusChange(project._id, e.target.value),\n              style: selectStyle,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Pending\",\n                children: \"Pending\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Ongoing\",\n                children: \"Ongoing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Completed\",\n                children: \"Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleViewDetails(project._id),\n              style: buttonStyle,\n              children: \"View Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(project),\n              style: {\n                ...buttonStyle,\n                backgroundColor: \"#ffc107\"\n              },\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 17\n          }, this)]\n        }, project._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this), editProject && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: editFormStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmitEdit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Project Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"project_name\",\n            value: formData.project_name,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"description\",\n            value: formData.description,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Start Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"start_date\",\n            value: formData.start_date,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"End Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"end_date\",\n            value: formData.end_date,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Status:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"status\",\n            value: formData.status,\n            onChange: handleInputChange,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Pending\",\n              children: \"Pending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Ongoing\",\n              children: \"Ongoing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Completed\",\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Budget:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"budget\",\n            value: formData.budget,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Team Members (comma separated):\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"team_members\",\n            value: formData.team_members,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            ...buttonStyle,\n            backgroundColor: \"#007bff\"\n          },\n          children: \"Update Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setEditProject(null),\n          style: buttonStyle,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectsPage, \"xU9nkcSxdsLI4UsAUo27X8CHXj0=\", false, function () {\n  return [useNavigate];\n});\n_c = ProjectsPage;\nconst pageStyle = {\n  padding: \"20px\",\n  fontFamily: \"Arial, sans-serif\"\n};\nconst tableStyle = {\n  width: \"100%\",\n  borderCollapse: \"collapse\",\n  marginTop: \"20px\",\n  border: \"1px solid #ccc\"\n};\nconst buttonStyle = {\n  padding: \"10px 20px\",\n  margin: \"10px 5px\",\n  border: \"none\",\n  borderRadius: \"4px\",\n  backgroundColor: \"#739ea7\",\n  color: \"white\",\n  cursor: \"pointer\",\n  fontSize: \"14px\"\n};\nconst selectStyle = {\n  padding: \"5px 10px\",\n  border: \"1px solid #ccc\",\n  borderRadius: \"4px\",\n  backgroundColor: \"#fff\"\n};\nconst editFormStyle = {\n  padding: \"20px\",\n  border: \"1px solid #ccc\",\n  marginTop: \"20px\",\n  borderRadius: \"4px\",\n  backgroundColor: \"#f8f9fa\"\n};\nexport default ProjectsPage;\n// import React, { useEffect, useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n// import {\n//   Button,\n//   Table,\n//   Select,\n//   Modal,\n//   Input,\n//   Form,\n//   Typography,\n//   message,\n//   Spin,\n//   Card,\n//   Space,\n//   Alert,\n// } from \"antd\";\n// import { EditOutlined, EyeOutlined, CheckOutlined, CloseOutlined } from \"@ant-design/icons\";\n// import \"antd/dist/reset.css\";\n\n// const { Title } = Typography;\n// const { Option } = Select;\n\n// const ProjectsPage = () => {\n//   const [pendingProjects, setPendingProjects] = useState([]);\n//   const [approvedProjects, setApprovedProjects] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [editProject, setEditProject] = useState(null);\n//   const [form] = Form.useForm();\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const fetchProjects = async () => {\n//       try {\n//         const response = await axios.get(\"http://localhost:5005/api/projects\");\n//         const allProjects = response.data;\n//         setPendingProjects(allProjects.filter((project) => !project.isApproved));\n//         setApprovedProjects(allProjects.filter((project) => project.isApproved));\n//       } catch (err) {\n//         setError(\"Failed to fetch projects. Please try again later.\");\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n//     fetchProjects();\n//   }, []);\n\n//   const handleViewDetails = (projectId) => navigate(`/project/${projectId}`);\n\n//   const handleApprove = async (projectId) => {\n//     try {\n//       await axios.put(`http://localhost:5005/api/projects/${projectId}/approve`);\n//       message.success(\"Project approved successfully\");\n//       setPendingProjects((prev) => prev.filter((project) => project._id !== projectId));\n//       const approvedProject = pendingProjects.find((project) => project._id === projectId);\n//       setApprovedProjects((prev) => [...prev, { ...approvedProject, isApproved: true }]);\n//     } catch (err) {\n//       message.error(\"Failed to approve project\");\n//     }\n//   };\n\n//   const handleReject = async (projectId) => {\n//     try {\n//       await axios.put(`http://localhost:5005/api/projects/${projectId}/reject`);\n//       message.success(\"Project rejected successfully\");\n//       setPendingProjects((prev) => prev.filter((project) => project._id !== projectId));\n//     } catch (err) {\n//       message.error(\"Failed to reject project\");\n//     }\n//   };\n\n//   const handleStatusChange = async (projectId, status) => {\n//     try {\n//       await axios.put(`http://localhost:5005/api/projects/${projectId}`, { status });\n//       message.success(\"Project status updated successfully\");\n//       setApprovedProjects((prevProjects) =>\n//         prevProjects.map((project) =>\n//           project._id === projectId ? { ...project, status } : project\n//         )\n//       );\n//     } catch (err) {\n//       message.error(\"Failed to update project status\");\n//     }\n//   };\n\n//   const handleEdit = (project) => {\n//     setEditProject(project);\n//     form.setFieldsValue({ ...project, team_members: project.team_members.join(\", \") });\n//   };\n\n//   const handleEditSubmit = async () => {\n//     try {\n//       const updatedProject = {\n//         ...form.getFieldsValue(),\n//         team_members: form.getFieldValue(\"team_members\").split(\", \"),\n//       };\n//       await axios.put(`http://localhost:5005/api/projects/${editProject._id}`, updatedProject);\n//       message.success(\"Project updated successfully\");\n//       setApprovedProjects((prev) =>\n//         prev.map((p) => (p._id === editProject._id ? updatedProject : p))\n//       );\n//       setEditProject(null);\n//     } catch (err) {\n//       message.error(\"Failed to update project\");\n//     }\n//   };\n\n//   return (\n//     <div style={{ padding: \"24px\" }}>\n//       <Title level={2} style={{ textAlign: \"center\", marginBottom: \"24px\" }}>\n//         Projects Management\n//       </Title>\n\n//       {loading ? (\n//         <Spin size=\"large\" style={{ display: \"block\", margin: \"auto\" }} />\n//       ) : error ? (\n//         <Alert message={error} type=\"error\" showIcon />\n//       ) : (\n//         <>\n//           {/* Pending Projects Section */}\n//           <Card title=\"Pending Projects\" bordered={false} style={{ marginBottom: \"20px\" }}>\n//             <Table\n//               dataSource={pendingProjects}\n//               rowKey=\"_id\"\n//               columns={[\n//                 { title: \"Project ID\", dataIndex: \"_id\" },\n//                 { title: \"Project Name\", dataIndex: \"project_name\" },\n//                 { title: \"Client\", dataIndex: [\"client_id\", \"client_name\"] },\n//                 {\n//                   title: \"Actions\",\n//                   render: (_, project) => (\n//                     <Space>\n//                       <Button type=\"primary\" icon={<CheckOutlined />} onClick={() => handleApprove(project._id)}>\n//                         Approve\n//                       </Button>\n//                       <Button danger icon={<CloseOutlined />} onClick={() => handleReject(project._id)}>\n//                         Reject\n//                       </Button>\n//                     </Space>\n//                   ),\n//                 },\n//               ]}\n//             />\n//           </Card>\n\n//           {/* Approved Projects Section */}\n//           <Card title=\"Approved Projects\" bordered={false}>\n//             <Table\n//               dataSource={approvedProjects}\n//               rowKey=\"_id\"\n//               columns={[\n//                 { title: \"Project ID\", dataIndex: \"_id\" },\n//                 { title: \"Project Name\", dataIndex: \"project_name\" },\n//                 { title: \"Client\", dataIndex: [\"client_id\", \"client_name\"] },\n//                 {\n//                   title: \"Status\",\n//                   render: (_, project) => (\n//                     <Select\n//                       defaultValue={project.status}\n//                       onChange={(value) => handleStatusChange(project._id, value)}\n//                     >\n//                       <Option value=\"Pending\">Pending</Option>\n//                       <Option value=\"Ongoing\">Ongoing</Option>\n//                       <Option value=\"Completed\">Completed</Option>\n//                     </Select>\n//                   ),\n//                 },\n//                 {\n//                   title: \"Actions\",\n//                   render: (_, project) => (\n//                     <Space>\n//                       <Button icon={<EyeOutlined />} onClick={() => handleViewDetails(project._id)}>\n//                         View\n//                       </Button>\n//                       <Button icon={<EditOutlined />} onClick={() => handleEdit(project)}>\n//                         Edit\n//                       </Button>\n//                     </Space>\n//                   ),\n//                 },\n//               ]}\n//             />\n//           </Card>\n//         </>\n//       )}\n\n//       {/* Edit Modal */}\n//       <Modal\n//         title=\"Edit Project\"\n//         open={!!editProject}\n//         onCancel={() => setEditProject(null)}\n//         onOk={handleEditSubmit}\n//         okText=\"Save\"\n//       >\n//         <Form form={form} layout=\"vertical\">\n//           <Form.Item name=\"project_name\" label=\"Project Name\" rules={[{ required: true, message: \"Please enter a project name\" }]}>\n//             <Input />\n//           </Form.Item>\n//           <Form.Item name=\"description\" label=\"Description\">\n//             <Input.TextArea />\n//           </Form.Item>\n//           <Form.Item name=\"status\" label=\"Status\">\n//             <Select>\n//               <Option value=\"Pending\">Pending</Option>\n//               <Option value=\"Ongoing\">Ongoing</Option>\n//               <Option value=\"Completed\">Completed</Option>\n//             </Select>\n//           </Form.Item>\n//           <Form.Item name=\"team_members\" label=\"Team Members\">\n//             <Input />\n//           </Form.Item>\n//         </Form>\n//       </Modal>\n//     </div>\n//   );\n// };\n\n// export default ProjectsPage;\nvar _c;\n$RefreshReg$(_c, \"ProjectsPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","jsxDEV","_jsxDEV","ProjectsPage","_s","pendingProjects","setPendingProjects","approvedProjects","setApprovedProjects","loading","setLoading","error","setError","editProject","setEditProject","formData","setFormData","project_name","description","start_date","end_date","status","budget","team_members","navigate","fetchProjects","response","get","allProjects","data","filter","project","isApproved","err","handleViewDetails","projectId","handleApprove","put","alert","prev","_id","approvedProject","find","console","handleReject","handleStatusChange","prevProjects","map","handleEdit","join","handleInputChange","e","name","value","target","prevData","handleSubmitEdit","preventDefault","updatedProject","split","member","trim","children","fileName","_jsxFileName","lineNumber","columnNumber","style","pageStyle","length","tableStyle","client_id","client_name","onClick","buttonStyle","backgroundColor","onChange","selectStyle","editFormStyle","onSubmit","type","required","_c","padding","fontFamily","width","borderCollapse","marginTop","border","margin","borderRadius","color","cursor","fontSize","$RefreshReg$"],"sources":["/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/ProjectPage.js"],"sourcesContent":["\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst ProjectsPage = () => {\n  const [pendingProjects, setPendingProjects] = useState([]);\n  const [approvedProjects, setApprovedProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [editProject, setEditProject] = useState(null);\n  const [formData, setFormData] = useState({\n    project_name: '',\n    description: '',\n    start_date: '',\n    end_date: '',\n    status: 'Pending',\n    budget: '',\n    team_members: '',\n  });\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5005/api/projects\");\n        const allProjects = response.data;\n\n        setPendingProjects(allProjects.filter(project => !project.isApproved));\n        setApprovedProjects(allProjects.filter(project => project.isApproved));\n\n        setLoading(false);\n      } catch (err) {\n        setError(\"Failed to fetch projects. Please try again later.\");\n        setLoading(false);\n      }\n    };\n\n    fetchProjects();\n  }, []);\n\n  const handleViewDetails = (projectId) => {\n    navigate(`/project/${projectId}`);\n  };\n\n  const handleApprove = async (projectId) => {\n    try {\n      await axios.put(`http://localhost:5005/api/projects/${projectId}/approve`);\n      alert(\"Project approved successfully\");\n      setPendingProjects(prev => prev.filter(project => project._id !== projectId));\n      const approvedProject = pendingProjects.find(project => project._id === projectId);\n      setApprovedProjects(prev => [...prev, { ...approvedProject, isApproved: true }]);\n    } catch (err) {\n      console.error(\"Error approving project:\", err);\n      alert(\"Failed to approve project\");\n    }\n  };\n\n  const handleReject = async (projectId) => {\n    try {\n      await axios.put(`http://localhost:5005/api/projects/${projectId}/reject`);\n      alert(\"Project rejected successfully\");\n      setPendingProjects(prev => prev.filter(project => project._id !== projectId));\n    } catch (err) {\n      console.error(\"Error rejecting project:\", err);\n      alert(\"Failed to reject project\");\n    }\n  };\n\n  const handleStatusChange = async (projectId, status) => {\n    try {\n      await axios.put(`http://localhost:5005/api/projects/${projectId}`, { status });\n      alert(\"Project status updated successfully\");\n      setApprovedProjects(prevProjects =>\n        prevProjects.map(project =>\n          project._id === projectId ? { ...project, status: status } : project\n        )\n      );\n    } catch (err) {\n      console.error(\"Error updating project status:\", err);\n      alert(\"Failed to update project status\");\n    }\n  };\n\n  const handleEdit = (project) => {\n    setEditProject(project);\n    setFormData({\n      project_name: project.project_name,\n      description: project.description,\n      start_date: project.start_date,\n      end_date: project.end_date,\n      status: project.status,\n      budget: project.budget,\n      team_members: project.team_members.join(', '), // Assuming team_members is an array of names\n    });\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmitEdit = async (e) => {\n    e.preventDefault();\n    try {\n      const updatedProject = {\n        ...formData,\n        team_members: formData.team_members.split(',').map(member => member.trim()), // Convert to an array\n      };\n      await axios.put(`http://localhost:5005/api/projects/${editProject._id}`, updatedProject);\n      alert(\"Project updated successfully\");\n      setApprovedProjects(prev =>\n        prev.map(project =>\n          project._id === editProject._id ? { ...project, ...updatedProject } : project\n        )\n      );\n      setEditProject(null);\n      setFormData({ project_name: '', description: '', start_date: '', end_date: '', status: 'Pending', budget: '', team_members: '' });\n    } catch (err) {\n      console.error(\"Error updating project:\", err);\n      alert(\"Failed to update project\");\n    }\n  };\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>{error}</div>;\n\n  return (\n    <div style={pageStyle}>\n      <h2>Pending Projects</h2>\n      {pendingProjects.length === 0 ? (\n        <p>No pending projects found.</p>\n      ) : (\n        <table style={tableStyle}>\n          <thead>\n            <tr>\n              <th>Project ID</th>\n              <th>Project Name</th>\n              <th>Client</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {pendingProjects.map((project) => (\n              <tr key={project._id}>\n                <td>{project._id}</td>\n                <td>{project.project_name}</td>\n                <td>{project.client_id.client_name}</td>\n                <td>\n                  <button onClick={() => handleApprove(project._id)} style={{ ...buttonStyle, backgroundColor: \"#28a745\" }}>\n                    Approve\n                  </button>\n                  <button onClick={() => handleReject(project._id)} style={{ ...buttonStyle, backgroundColor: \"#dc3545\" }}>\n                    Reject\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n\n      <h2>Approved Projects</h2>\n      {approvedProjects.length === 0 ? (\n        <p>No approved projects found.</p>\n      ) : (\n        <table style={tableStyle}>\n          <thead>\n            <tr>\n              <th>Project ID</th>\n              <th>Project Name</th>\n              <th>Client</th>\n              <th>Status</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {approvedProjects.map((project) => (\n              <tr key={project._id}>\n                <td>{project._id}</td>\n                <td>{project.project_name}</td>\n                <td>{project.client_id.client_name}</td>\n                <td>\n                  <select\n                    value={project.status}\n                    onChange={(e) => handleStatusChange(project._id, e.target.value)}\n                    style={selectStyle}\n                  >\n                    <option value=\"Pending\">Pending</option>\n                    <option value=\"Ongoing\">Ongoing</option>\n                    <option value=\"Completed\">Completed</option>\n                  </select>\n                </td>\n                <td>\n                  <button onClick={() => handleViewDetails(project._id)} style={buttonStyle}>\n                    View Details\n                  </button>\n                  <button onClick={() => handleEdit(project)} style={{ ...buttonStyle, backgroundColor: \"#ffc107\" }}>\n                    Edit\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n\n      {/* Edit Project Form */}\n      {editProject && (\n        <div style={editFormStyle}>\n          <h3>Edit Project</h3>\n          <form onSubmit={handleSubmitEdit}>\n            <label>\n              Project Name:\n              <input\n                type=\"text\"\n                name=\"project_name\"\n                value={formData.project_name}\n                onChange={handleInputChange}\n                required\n              />\n            </label>\n            <label>\n              Description:\n              <textarea\n                name=\"description\"\n                value={formData.description}\n                onChange={handleInputChange}\n                required\n              />\n            </label>\n            <label>\n              Start Date:\n              <input\n                type=\"date\"\n                name=\"start_date\"\n                value={formData.start_date}\n                onChange={handleInputChange}\n                required\n              />\n            </label>\n            <label>\n              End Date:\n              <input\n                type=\"date\"\n                name=\"end_date\"\n                value={formData.end_date}\n                onChange={handleInputChange}\n                required\n              />\n            </label>\n            <label>\n              Status:\n              <select\n                name=\"status\"\n                value={formData.status}\n                onChange={handleInputChange}\n                required\n              >\n                <option value=\"Pending\">Pending</option>\n                <option value=\"Ongoing\">Ongoing</option>\n                <option value=\"Completed\">Completed</option>\n              </select>\n            </label>\n            <label>\n              Budget:\n              <input\n                type=\"number\"\n                name=\"budget\"\n                value={formData.budget}\n                onChange={handleInputChange}\n                required\n              />\n            </label>\n            <label>\n              Team Members (comma separated):\n              <input\n                type=\"text\"\n                name=\"team_members\"\n                value={formData.team_members}\n                onChange={handleInputChange}\n                required\n              />\n            </label>\n            <button type=\"submit\" style={{ ...buttonStyle, backgroundColor: \"#007bff\" }}>\n              Update Project\n            </button>\n            <button type=\"button\" onClick={() => setEditProject(null)} style={buttonStyle}>\n              Cancel\n            </button>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst pageStyle = {\n  padding: \"20px\",\n  fontFamily: \"Arial, sans-serif\",\n};\n\nconst tableStyle = {\n  width: \"100%\",\n  borderCollapse: \"collapse\",\n  marginTop: \"20px\",\n  border: \"1px solid #ccc\",\n};\n\nconst buttonStyle = {\n  padding: \"10px 20px\",\n  margin: \"10px 5px\",\n  border: \"none\",\n  borderRadius: \"4px\",\n  backgroundColor: \"#739ea7\",\n  color: \"white\",\n  cursor: \"pointer\",\n  fontSize: \"14px\",\n};\n\nconst selectStyle = {\n  padding: \"5px 10px\",\n  border: \"1px solid #ccc\",\n  borderRadius: \"4px\",\n  backgroundColor: \"#fff\",\n};\n\nconst editFormStyle = {\n  padding: \"20px\",\n  border: \"1px solid #ccc\",\n  marginTop: \"20px\",\n  borderRadius: \"4px\",\n  backgroundColor: \"#f8f9fa\",\n};\n\nexport default ProjectsPage;\n// import React, { useEffect, useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n// import {\n//   Button,\n//   Table,\n//   Select,\n//   Modal,\n//   Input,\n//   Form,\n//   Typography,\n//   message,\n//   Spin,\n//   Card,\n//   Space,\n//   Alert,\n// } from \"antd\";\n// import { EditOutlined, EyeOutlined, CheckOutlined, CloseOutlined } from \"@ant-design/icons\";\n// import \"antd/dist/reset.css\";\n\n// const { Title } = Typography;\n// const { Option } = Select;\n\n// const ProjectsPage = () => {\n//   const [pendingProjects, setPendingProjects] = useState([]);\n//   const [approvedProjects, setApprovedProjects] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [editProject, setEditProject] = useState(null);\n//   const [form] = Form.useForm();\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const fetchProjects = async () => {\n//       try {\n//         const response = await axios.get(\"http://localhost:5005/api/projects\");\n//         const allProjects = response.data;\n//         setPendingProjects(allProjects.filter((project) => !project.isApproved));\n//         setApprovedProjects(allProjects.filter((project) => project.isApproved));\n//       } catch (err) {\n//         setError(\"Failed to fetch projects. Please try again later.\");\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n//     fetchProjects();\n//   }, []);\n\n//   const handleViewDetails = (projectId) => navigate(`/project/${projectId}`);\n\n//   const handleApprove = async (projectId) => {\n//     try {\n//       await axios.put(`http://localhost:5005/api/projects/${projectId}/approve`);\n//       message.success(\"Project approved successfully\");\n//       setPendingProjects((prev) => prev.filter((project) => project._id !== projectId));\n//       const approvedProject = pendingProjects.find((project) => project._id === projectId);\n//       setApprovedProjects((prev) => [...prev, { ...approvedProject, isApproved: true }]);\n//     } catch (err) {\n//       message.error(\"Failed to approve project\");\n//     }\n//   };\n\n//   const handleReject = async (projectId) => {\n//     try {\n//       await axios.put(`http://localhost:5005/api/projects/${projectId}/reject`);\n//       message.success(\"Project rejected successfully\");\n//       setPendingProjects((prev) => prev.filter((project) => project._id !== projectId));\n//     } catch (err) {\n//       message.error(\"Failed to reject project\");\n//     }\n//   };\n\n//   const handleStatusChange = async (projectId, status) => {\n//     try {\n//       await axios.put(`http://localhost:5005/api/projects/${projectId}`, { status });\n//       message.success(\"Project status updated successfully\");\n//       setApprovedProjects((prevProjects) =>\n//         prevProjects.map((project) =>\n//           project._id === projectId ? { ...project, status } : project\n//         )\n//       );\n//     } catch (err) {\n//       message.error(\"Failed to update project status\");\n//     }\n//   };\n\n//   const handleEdit = (project) => {\n//     setEditProject(project);\n//     form.setFieldsValue({ ...project, team_members: project.team_members.join(\", \") });\n//   };\n\n//   const handleEditSubmit = async () => {\n//     try {\n//       const updatedProject = {\n//         ...form.getFieldsValue(),\n//         team_members: form.getFieldValue(\"team_members\").split(\", \"),\n//       };\n//       await axios.put(`http://localhost:5005/api/projects/${editProject._id}`, updatedProject);\n//       message.success(\"Project updated successfully\");\n//       setApprovedProjects((prev) =>\n//         prev.map((p) => (p._id === editProject._id ? updatedProject : p))\n//       );\n//       setEditProject(null);\n//     } catch (err) {\n//       message.error(\"Failed to update project\");\n//     }\n//   };\n\n//   return (\n//     <div style={{ padding: \"24px\" }}>\n//       <Title level={2} style={{ textAlign: \"center\", marginBottom: \"24px\" }}>\n//         Projects Management\n//       </Title>\n\n//       {loading ? (\n//         <Spin size=\"large\" style={{ display: \"block\", margin: \"auto\" }} />\n//       ) : error ? (\n//         <Alert message={error} type=\"error\" showIcon />\n//       ) : (\n//         <>\n//           {/* Pending Projects Section */}\n//           <Card title=\"Pending Projects\" bordered={false} style={{ marginBottom: \"20px\" }}>\n//             <Table\n//               dataSource={pendingProjects}\n//               rowKey=\"_id\"\n//               columns={[\n//                 { title: \"Project ID\", dataIndex: \"_id\" },\n//                 { title: \"Project Name\", dataIndex: \"project_name\" },\n//                 { title: \"Client\", dataIndex: [\"client_id\", \"client_name\"] },\n//                 {\n//                   title: \"Actions\",\n//                   render: (_, project) => (\n//                     <Space>\n//                       <Button type=\"primary\" icon={<CheckOutlined />} onClick={() => handleApprove(project._id)}>\n//                         Approve\n//                       </Button>\n//                       <Button danger icon={<CloseOutlined />} onClick={() => handleReject(project._id)}>\n//                         Reject\n//                       </Button>\n//                     </Space>\n//                   ),\n//                 },\n//               ]}\n//             />\n//           </Card>\n\n//           {/* Approved Projects Section */}\n//           <Card title=\"Approved Projects\" bordered={false}>\n//             <Table\n//               dataSource={approvedProjects}\n//               rowKey=\"_id\"\n//               columns={[\n//                 { title: \"Project ID\", dataIndex: \"_id\" },\n//                 { title: \"Project Name\", dataIndex: \"project_name\" },\n//                 { title: \"Client\", dataIndex: [\"client_id\", \"client_name\"] },\n//                 {\n//                   title: \"Status\",\n//                   render: (_, project) => (\n//                     <Select\n//                       defaultValue={project.status}\n//                       onChange={(value) => handleStatusChange(project._id, value)}\n//                     >\n//                       <Option value=\"Pending\">Pending</Option>\n//                       <Option value=\"Ongoing\">Ongoing</Option>\n//                       <Option value=\"Completed\">Completed</Option>\n//                     </Select>\n//                   ),\n//                 },\n//                 {\n//                   title: \"Actions\",\n//                   render: (_, project) => (\n//                     <Space>\n//                       <Button icon={<EyeOutlined />} onClick={() => handleViewDetails(project._id)}>\n//                         View\n//                       </Button>\n//                       <Button icon={<EditOutlined />} onClick={() => handleEdit(project)}>\n//                         Edit\n//                       </Button>\n//                     </Space>\n//                   ),\n//                 },\n//               ]}\n//             />\n//           </Card>\n//         </>\n//       )}\n\n//       {/* Edit Modal */}\n//       <Modal\n//         title=\"Edit Project\"\n//         open={!!editProject}\n//         onCancel={() => setEditProject(null)}\n//         onOk={handleEditSubmit}\n//         okText=\"Save\"\n//       >\n//         <Form form={form} layout=\"vertical\">\n//           <Form.Item name=\"project_name\" label=\"Project Name\" rules={[{ required: true, message: \"Please enter a project name\" }]}>\n//             <Input />\n//           </Form.Item>\n//           <Form.Item name=\"description\" label=\"Description\">\n//             <Input.TextArea />\n//           </Form.Item>\n//           <Form.Item name=\"status\" label=\"Status\">\n//             <Select>\n//               <Option value=\"Pending\">Pending</Option>\n//               <Option value=\"Ongoing\">Ongoing</Option>\n//               <Option value=\"Completed\">Completed</Option>\n//             </Select>\n//           </Form.Item>\n//           <Form.Item name=\"team_members\" label=\"Team Members\">\n//             <Input />\n//           </Form.Item>\n//         </Form>\n//       </Modal>\n//     </div>\n//   );\n// };\n\n// export default ProjectsPage;\n"],"mappings":"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AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA+E,EAAA;AAAAY,YAAA,CAAAZ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}