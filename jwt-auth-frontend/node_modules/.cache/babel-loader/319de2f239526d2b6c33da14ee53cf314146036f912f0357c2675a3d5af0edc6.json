{"ast":null,"code":"var _jsxFileName = \"/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/ContractManagement.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { useParams } from \"react-router-dom\";\n// import axios from \"axios\";\n// import \"../App.css\";\n\n// const ClientProfile = () => {\n//   const { clientId } = useParams(); // Get the clientId from the URL params\n//   const [client, setClient] = useState(null);\n//   const [projects, setProjects] = useState([]); // State to store projects\n//   const [error, setError] = useState(\"\");\n//   const [showForm, setShowForm] = useState(false); // Toggle form visibility\n//   const [formData, setFormData] = useState({\n//     project_name: \"\",\n//     description: \"\",\n//     start_date: \"\",\n//     end_date: \"\",\n//     budget: \"\",\n//     client_id: clientId,\n//   });\n\n//   useEffect(() => {\n//     const fetchClientDetails = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5005/api/client/${clientId}`);\n//         setClient(response.data);\n//       } catch (err) {\n//         setError(\"Failed to load client details.\");\n//       }\n//     };\n\n//     const fetchClientProjects = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5005/api/projects/${clientId}`);\n//         // Make sure team_members is always an array\n//         const updatedProjects = response.data.map((project) => ({\n//           ...project,\n//           team_members: Array.isArray(project.team_members) ? project.team_members : [],\n//         }));\n//         setProjects(updatedProjects);\n//       } catch (err) {\n//         setError(\"Failed to load projects.\");\n//       }\n//     };\n\n//     fetchClientDetails();\n//     fetchClientProjects();\n//   }, [clientId]);\n\n//   const handleFormChange = (e) => {\n//     const { name, value } = e.target;\n\n//     setFormData({\n//       ...formData,\n//       [name]: value,\n//     });\n//   };\n\n//   const handleFormSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await axios.post(\"http://localhost:5005/api/projects\", formData);\n//       setProjects([...projects, response.data]); // Add new project to the list\n//       setShowForm(false); // Hide form after submission\n//       console.log(response.data); // Handle the response data (e.g., display success message)\n//     } catch (error) {\n//       console.error(\"Error submitting form:\", error);\n//     }\n//   };\n\n//   if (error) {\n//     return <div>{error}</div>;\n//   }\n\n//   if (!client) {\n//     return <div>Loading...</div>;\n//   }\n\n//   return (\n//     <div>\n//       <h1 style={{ textAlign: \"center\" }}>Projects for {client.client_name}</h1>\n\n//       {/* Display Projects in Table Format */}\n//       <h2>Projects</h2>\n//       {projects.length === 0 ? (\n//         <p>No projects found for this client.</p>\n//       ) : (\n//         <table className=\"project-table\">\n//           <thead>\n//             <tr>\n//               <th>Project Name</th>\n//               <th>Description</th>\n//               <th>Start Date</th>\n//               <th>End Date</th>\n//               <th>Budget</th>\n//               <th>Team Members</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {projects.map((project) => (\n//               <tr key={project._id}>\n//                 <td>{project.project_name}</td>\n//                 <td>{project.description}</td>\n//                 <td>{new Date(project.start_date).toLocaleDateString()}</td>\n//                 <td>{new Date(project.end_date).toLocaleDateString()}</td>\n//                 <td>{project.budget}</td>\n//                 <td>{(project.team_members || []).join(\", \")}</td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       )}\n\n//       <div className=\"client-profile-card\">\n//         {/* Button to Show/Hide Form */}\n//         <button onClick={() => setShowForm(!showForm)}>\n//           {showForm ? \"Cancel\" : \"Add New Project\"}\n//         </button>\n\n//         {/* Project Creation Form */}\n//         {showForm && (\n//           <div className=\"project-form\">\n//           <h2>Create a New Project</h2>\n//           <form onSubmit={handleFormSubmit}>\n//             <div>\n//               <label>Project Name</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"project_name\"\n//                 value={formData.project_name}\n//                 onChange={handleFormChange}\n//                 required\n//               />\n//             </div>\n//             <div>\n//               <label>Description</label>\n//               <textarea\n//                 name=\"description\"\n//                 value={formData.description}\n//                 onChange={handleFormChange}\n//                 className=\"description-input\"\n//               />\n//             </div>\n//             <div>\n//               <label>Start Date</label>\n//               <input\n//                 type=\"date\"\n//                 name=\"start_date\"\n//                 value={formData.start_date}\n//                 onChange={handleFormChange}\n//                 className=\"date-input\"\n//               />\n//             </div>\n//             <div>\n//               <label>End Date</label>\n//               <input\n//                 type=\"date\"\n//                 name=\"end_date\"\n//                 value={formData.end_date}\n//                 onChange={handleFormChange}\n//                 className=\"date-input\"\n//               />\n//             </div>\n//             <div>\n//               <label>Budget</label>\n//               <input\n//                 type=\"number\"\n//                 name=\"budget\"\n//                 value={formData.budget}\n//                 onChange={handleFormChange}\n//               />\n//             </div>\n//             <div>\n//               <button type=\"submit\">Create Project</button>\n//             </div>\n//           </form>\n//         </div>\n\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ClientProfile;\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { TextField, Card, Button, Typography, Table, TableHead, TableBody, TableRow, TableCell, TableContainer, Paper } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClientProfile = () => {\n  _s();\n  const {\n    clientId\n  } = useParams();\n  const [client, setClient] = useState(null);\n  const [projects, setProjects] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [showForm, setShowForm] = useState(false);\n  const [formData, setFormData] = useState({\n    project_name: \"\",\n    description: \"\",\n    start_date: \"\",\n    end_date: \"\",\n    budget: \"\",\n    client_id: clientId\n  });\n  useEffect(() => {\n    const fetchClientDetails = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5005/api/client/${clientId}`);\n        setClient(response.data);\n      } catch (err) {\n        setError(\"Failed to load client details.\");\n      }\n    };\n    const fetchClientProjects = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5005/api/projects/${clientId}`);\n        setProjects(response.data);\n      } catch (err) {\n        setError(\"Failed to load projects.\");\n      }\n    };\n    fetchClientDetails();\n    fetchClientProjects();\n  }, [clientId]);\n  const handleFormChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:5005/api/projects\", formData);\n      setProjects([...projects, response.data]);\n      setShowForm(false);\n    } catch (error) {\n      console.error(\"Error submitting form:\", error);\n    }\n  };\n  if (error) return /*#__PURE__*/_jsxDEV(Typography, {\n    color: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 21\n  }, this);\n  if (!client) return /*#__PURE__*/_jsxDEV(Typography, {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      padding: 3,\n      margin: 3,\n      boxShadow: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      gutterBottom: true,\n      children: [\"Projects for \", client.client_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      sx: {\n        marginBottom: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Project Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"End Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Budget\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: projects.length === 0 ? /*#__PURE__*/_jsxDEV(TableRow, {\n            children: /*#__PURE__*/_jsxDEV(TableCell, {\n              colSpan: 5,\n              align: \"center\",\n              children: \"No projects found.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this) : projects.map(project => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: project.project_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: project.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: new Date(project.start_date).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: new Date(project.end_date).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: project.budget\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 19\n            }, this)]\n          }, project._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => setShowForm(!showForm),\n      children: showForm ? \"Cancel\" : \"Add New Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        padding: 3,\n        marginTop: 2,\n        boxShadow: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Create a New Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          margin: \"normal\",\n          label: \"Project Name\",\n          name: \"project_name\",\n          value: formData.project_name,\n          onChange: handleFormChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          margin: \"normal\",\n          label: \"Description\",\n          name: \"description\",\n          multiline: true,\n          rows: 3,\n          value: formData.description,\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          margin: \"normal\",\n          label: \"Start Date\",\n          name: \"start_date\",\n          type: \"date\",\n          InputLabelProps: {\n            shrink: true\n          },\n          value: formData.start_date,\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          margin: \"normal\",\n          label: \"End Date\",\n          name: \"end_date\",\n          type: \"date\",\n          InputLabelProps: {\n            shrink: true\n          },\n          value: formData.end_date,\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          margin: \"normal\",\n          label: \"Budget\",\n          name: \"budget\",\n          type: \"number\",\n          value: formData.budget,\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"secondary\",\n          fullWidth: true,\n          sx: {\n            marginTop: 2\n          },\n          children: \"Create Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this);\n};\n_s(ClientProfile, \"F9UIPMZ4uOsEyznTnMDvT2CCuJw=\", false, function () {\n  return [useParams];\n});\n_c = ClientProfile;\nexport default ClientProfile;\nvar _c;\n$RefreshReg$(_c, \"ClientProfile\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","TextField","Card","Button","Typography","Table","TableHead","TableBody","TableRow","TableCell","TableContainer","Paper","jsxDEV","_jsxDEV","ClientProfile","_s","clientId","client","setClient","projects","setProjects","error","setError","showForm","setShowForm","formData","setFormData","project_name","description","start_date","end_date","budget","client_id","fetchClientDetails","response","get","data","err","fetchClientProjects","handleFormChange","e","name","value","target","handleFormSubmit","preventDefault","post","console","color","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","padding","margin","boxShadow","variant","align","gutterBottom","client_name","component","marginBottom","length","colSpan","map","project","Date","toLocaleDateString","_id","onClick","marginTop","onSubmit","fullWidth","label","onChange","required","multiline","rows","type","InputLabelProps","shrink","_c","$RefreshReg$"],"sources":["/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/ContractManagement.js"],"sourcesContent":["\n// import React, { useState, useEffect } from \"react\";\n// import { useParams } from \"react-router-dom\";\n// import axios from \"axios\";\n// import \"../App.css\";\n\n// const ClientProfile = () => {\n//   const { clientId } = useParams(); // Get the clientId from the URL params\n//   const [client, setClient] = useState(null);\n//   const [projects, setProjects] = useState([]); // State to store projects\n//   const [error, setError] = useState(\"\");\n//   const [showForm, setShowForm] = useState(false); // Toggle form visibility\n//   const [formData, setFormData] = useState({\n//     project_name: \"\",\n//     description: \"\",\n//     start_date: \"\",\n//     end_date: \"\",\n//     budget: \"\",\n//     client_id: clientId,\n//   });\n\n//   useEffect(() => {\n//     const fetchClientDetails = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5005/api/client/${clientId}`);\n//         setClient(response.data);\n//       } catch (err) {\n//         setError(\"Failed to load client details.\");\n//       }\n//     };\n\n//     const fetchClientProjects = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5005/api/projects/${clientId}`);\n//         // Make sure team_members is always an array\n//         const updatedProjects = response.data.map((project) => ({\n//           ...project,\n//           team_members: Array.isArray(project.team_members) ? project.team_members : [],\n//         }));\n//         setProjects(updatedProjects);\n//       } catch (err) {\n//         setError(\"Failed to load projects.\");\n//       }\n//     };\n\n//     fetchClientDetails();\n//     fetchClientProjects();\n//   }, [clientId]);\n\n//   const handleFormChange = (e) => {\n//     const { name, value } = e.target;\n\n//     setFormData({\n//       ...formData,\n//       [name]: value,\n//     });\n//   };\n\n//   const handleFormSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await axios.post(\"http://localhost:5005/api/projects\", formData);\n//       setProjects([...projects, response.data]); // Add new project to the list\n//       setShowForm(false); // Hide form after submission\n//       console.log(response.data); // Handle the response data (e.g., display success message)\n//     } catch (error) {\n//       console.error(\"Error submitting form:\", error);\n//     }\n//   };\n\n//   if (error) {\n//     return <div>{error}</div>;\n//   }\n\n//   if (!client) {\n//     return <div>Loading...</div>;\n//   }\n\n//   return (\n//     <div>\n//       <h1 style={{ textAlign: \"center\" }}>Projects for {client.client_name}</h1>\n\n//       {/* Display Projects in Table Format */}\n//       <h2>Projects</h2>\n//       {projects.length === 0 ? (\n//         <p>No projects found for this client.</p>\n//       ) : (\n//         <table className=\"project-table\">\n//           <thead>\n//             <tr>\n//               <th>Project Name</th>\n//               <th>Description</th>\n//               <th>Start Date</th>\n//               <th>End Date</th>\n//               <th>Budget</th>\n//               <th>Team Members</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {projects.map((project) => (\n//               <tr key={project._id}>\n//                 <td>{project.project_name}</td>\n//                 <td>{project.description}</td>\n//                 <td>{new Date(project.start_date).toLocaleDateString()}</td>\n//                 <td>{new Date(project.end_date).toLocaleDateString()}</td>\n//                 <td>{project.budget}</td>\n//                 <td>{(project.team_members || []).join(\", \")}</td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       )}\n\n//       <div className=\"client-profile-card\">\n//         {/* Button to Show/Hide Form */}\n//         <button onClick={() => setShowForm(!showForm)}>\n//           {showForm ? \"Cancel\" : \"Add New Project\"}\n//         </button>\n\n//         {/* Project Creation Form */}\n//         {showForm && (\n//           <div className=\"project-form\">\n//           <h2>Create a New Project</h2>\n//           <form onSubmit={handleFormSubmit}>\n//             <div>\n//               <label>Project Name</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"project_name\"\n//                 value={formData.project_name}\n//                 onChange={handleFormChange}\n//                 required\n//               />\n//             </div>\n//             <div>\n//               <label>Description</label>\n//               <textarea\n//                 name=\"description\"\n//                 value={formData.description}\n//                 onChange={handleFormChange}\n//                 className=\"description-input\"\n//               />\n//             </div>\n//             <div>\n//               <label>Start Date</label>\n//               <input\n//                 type=\"date\"\n//                 name=\"start_date\"\n//                 value={formData.start_date}\n//                 onChange={handleFormChange}\n//                 className=\"date-input\"\n//               />\n//             </div>\n//             <div>\n//               <label>End Date</label>\n//               <input\n//                 type=\"date\"\n//                 name=\"end_date\"\n//                 value={formData.end_date}\n//                 onChange={handleFormChange}\n//                 className=\"date-input\"\n//               />\n//             </div>\n//             <div>\n//               <label>Budget</label>\n//               <input\n//                 type=\"number\"\n//                 name=\"budget\"\n//                 value={formData.budget}\n//                 onChange={handleFormChange}\n//               />\n//             </div>\n//             <div>\n//               <button type=\"submit\">Create Project</button>\n//             </div>\n//           </form>\n//         </div>\n        \n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ClientProfile;\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { TextField, Card, Button, Typography, Table, TableHead, TableBody, TableRow, TableCell, TableContainer, Paper } from \"@mui/material\";\n\nconst ClientProfile = () => {\n  const { clientId } = useParams();\n  const [client, setClient] = useState(null);\n  const [projects, setProjects] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [showForm, setShowForm] = useState(false);\n  const [formData, setFormData] = useState({\n    project_name: \"\",\n    description: \"\",\n    start_date: \"\",\n    end_date: \"\",\n    budget: \"\",\n    client_id: clientId,\n  });\n\n  useEffect(() => {\n    const fetchClientDetails = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5005/api/client/${clientId}`);\n        setClient(response.data);\n      } catch (err) {\n        setError(\"Failed to load client details.\");\n      }\n    };\n\n    const fetchClientProjects = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5005/api/projects/${clientId}`);\n        setProjects(response.data);\n      } catch (err) {\n        setError(\"Failed to load projects.\");\n      }\n    };\n\n    fetchClientDetails();\n    fetchClientProjects();\n  }, [clientId]);\n\n  const handleFormChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:5005/api/projects\", formData);\n      setProjects([...projects, response.data]);\n      setShowForm(false);\n    } catch (error) {\n      console.error(\"Error submitting form:\", error);\n    }\n  };\n\n  if (error) return <Typography color=\"error\">{error}</Typography>;\n  if (!client) return <Typography>Loading...</Typography>;\n\n  return (\n    <Card sx={{ padding: 3, margin: 3, boxShadow: 3 }}>\n      <Typography variant=\"h4\" align=\"center\" gutterBottom>\n        Projects for {client.client_name}\n      </Typography>\n      <TableContainer component={Paper} sx={{ marginBottom: 3 }}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Project Name</TableCell>\n              <TableCell>Description</TableCell>\n              <TableCell>Start Date</TableCell>\n              <TableCell>End Date</TableCell>\n              <TableCell>Budget</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {projects.length === 0 ? (\n              <TableRow>\n                <TableCell colSpan={5} align=\"center\">No projects found.</TableCell>\n              </TableRow>\n            ) : (\n              projects.map((project) => (\n                <TableRow key={project._id}>\n                  <TableCell>{project.project_name}</TableCell>\n                  <TableCell>{project.description}</TableCell>\n                  <TableCell>{new Date(project.start_date).toLocaleDateString()}</TableCell>\n                  <TableCell>{new Date(project.end_date).toLocaleDateString()}</TableCell>\n                  <TableCell>{project.budget}</TableCell>\n                </TableRow>\n              ))\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Button variant=\"contained\" color=\"primary\" onClick={() => setShowForm(!showForm)}>\n        {showForm ? \"Cancel\" : \"Add New Project\"}\n      </Button>\n      {showForm && (\n        <Card sx={{ padding: 3, marginTop: 2, boxShadow: 2 }}>\n          <Typography variant=\"h5\" gutterBottom>Create a New Project</Typography>\n          <form onSubmit={handleFormSubmit}>\n            <TextField fullWidth margin=\"normal\" label=\"Project Name\" name=\"project_name\" value={formData.project_name} onChange={handleFormChange} required />\n            <TextField fullWidth margin=\"normal\" label=\"Description\" name=\"description\" multiline rows={3} value={formData.description} onChange={handleFormChange} />\n            <TextField fullWidth margin=\"normal\" label=\"Start Date\" name=\"start_date\" type=\"date\" InputLabelProps={{ shrink: true }} value={formData.start_date} onChange={handleFormChange} />\n            <TextField fullWidth margin=\"normal\" label=\"End Date\" name=\"end_date\" type=\"date\" InputLabelProps={{ shrink: true }} value={formData.end_date} onChange={handleFormChange} />\n            <TextField fullWidth margin=\"normal\" label=\"Budget\" name=\"budget\" type=\"number\" value={formData.budget} onChange={handleFormChange} />\n            <Button type=\"submit\" variant=\"contained\" color=\"secondary\" fullWidth sx={{ marginTop: 2 }}>Create Project</Button>\n          </form>\n        </Card>\n      )}\n    </Card>\n  );\n};\n\nexport default ClientProfile;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}