{"ast":null,"code":"var _jsxFileName = \"/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/ContractManagement.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { useParams } from \"react-router-dom\";\n// import axios from \"axios\";\n// import \"../App.css\";\n\n// const ClientProfile = () => {\n//   const { clientId } = useParams(); // Get the clientId from the URL params\n//   const [client, setClient] = useState(null);\n//   const [projects, setProjects] = useState([]); // State to store projects\n//   const [error, setError] = useState(\"\");\n//   const [showForm, setShowForm] = useState(false); // Toggle form visibility\n//   const [formData, setFormData] = useState({\n//     project_name: \"\",\n//     description: \"\",\n//     start_date: \"\",\n//     end_date: \"\",\n//     budget: \"\",\n//     client_id: clientId,\n//   });\n\n//   useEffect(() => {\n//     const fetchClientDetails = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5005/api/client/${clientId}`);\n//         setClient(response.data);\n//       } catch (err) {\n//         setError(\"Failed to load client details.\");\n//       }\n//     };\n\n//     const fetchClientProjects = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5005/api/projects/${clientId}`);\n//         // Make sure team_members is always an array\n//         const updatedProjects = response.data.map((project) => ({\n//           ...project,\n//           team_members: Array.isArray(project.team_members) ? project.team_members : [],\n//         }));\n//         setProjects(updatedProjects);\n//       } catch (err) {\n//         setError(\"Failed to load projects.\");\n//       }\n//     };\n\n//     fetchClientDetails();\n//     fetchClientProjects();\n//   }, [clientId]);\n\n//   const handleFormChange = (e) => {\n//     const { name, value } = e.target;\n\n//     setFormData({\n//       ...formData,\n//       [name]: value,\n//     });\n//   };\n\n//   const handleFormSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await axios.post(\"http://localhost:5005/api/projects\", formData);\n//       setProjects([...projects, response.data]); // Add new project to the list\n//       setShowForm(false); // Hide form after submission\n//       console.log(response.data); // Handle the response data (e.g., display success message)\n//     } catch (error) {\n//       console.error(\"Error submitting form:\", error);\n//     }\n//   };\n\n//   if (error) {\n//     return <div>{error}</div>;\n//   }\n\n//   if (!client) {\n//     return <div>Loading...</div>;\n//   }\n\n//   return (\n//     <div>\n//       <h1 style={{ textAlign: \"center\" }}>Projects for {client.client_name}</h1>\n\n//       {/* Display Projects in Table Format */}\n//       <h2>Projects</h2>\n//       {projects.length === 0 ? (\n//         <p>No projects found for this client.</p>\n//       ) : (\n//         <table className=\"project-table\">\n//           <thead>\n//             <tr>\n//               <th>Project Name</th>\n//               <th>Description</th>\n//               <th>Start Date</th>\n//               <th>End Date</th>\n//               <th>Budget</th>\n//               <th>Team Members</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {projects.map((project) => (\n//               <tr key={project._id}>\n//                 <td>{project.project_name}</td>\n//                 <td>{project.description}</td>\n//                 <td>{new Date(project.start_date).toLocaleDateString()}</td>\n//                 <td>{new Date(project.end_date).toLocaleDateString()}</td>\n//                 <td>{project.budget}</td>\n//                 <td>{(project.team_members || []).join(\", \")}</td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       )}\n\n//       <div className=\"client-profile-card\">\n//         {/* Button to Show/Hide Form */}\n//         <button onClick={() => setShowForm(!showForm)}>\n//           {showForm ? \"Cancel\" : \"Add New Project\"}\n//         </button>\n\n//         {/* Project Creation Form */}\n//         {showForm && (\n//           <div className=\"project-form\">\n//           <h2>Create a New Project</h2>\n//           <form onSubmit={handleFormSubmit}>\n//             <div>\n//               <label>Project Name</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"project_name\"\n//                 value={formData.project_name}\n//                 onChange={handleFormChange}\n//                 required\n//               />\n//             </div>\n//             <div>\n//               <label>Description</label>\n//               <textarea\n//                 name=\"description\"\n//                 value={formData.description}\n//                 onChange={handleFormChange}\n//                 className=\"description-input\"\n//               />\n//             </div>\n//             <div>\n//               <label>Start Date</label>\n//               <input\n//                 type=\"date\"\n//                 name=\"start_date\"\n//                 value={formData.start_date}\n//                 onChange={handleFormChange}\n//                 className=\"date-input\"\n//               />\n//             </div>\n//             <div>\n//               <label>End Date</label>\n//               <input\n//                 type=\"date\"\n//                 name=\"end_date\"\n//                 value={formData.end_date}\n//                 onChange={handleFormChange}\n//                 className=\"date-input\"\n//               />\n//             </div>\n//             <div>\n//               <label>Budget</label>\n//               <input\n//                 type=\"number\"\n//                 name=\"budget\"\n//                 value={formData.budget}\n//                 onChange={handleFormChange}\n//               />\n//             </div>\n//             <div>\n//               <button type=\"submit\">Create Project</button>\n//             </div>\n//           </form>\n//         </div>\n\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ClientProfile;\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Container, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button, TextField, Dialog, DialogActions, DialogContent, DialogTitle, CircularProgress, Alert } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClientProfile = () => {\n  _s();\n  const {\n    clientId\n  } = useParams();\n  const [client, setClient] = useState(null);\n  const [projects, setProjects] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [openForm, setOpenForm] = useState(false);\n  const [formData, setFormData] = useState({\n    project_name: \"\",\n    description: \"\",\n    start_date: \"\",\n    end_date: \"\",\n    budget: \"\",\n    client_id: clientId\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [clientRes, projectsRes] = await Promise.all([axios.get(`http://localhost:5005/api/client/${clientId}`), axios.get(`http://localhost:5005/api/projects/${clientId}`)]);\n        setClient(clientRes.data);\n        setProjects(projectsRes.data.map(project => ({\n          ...project,\n          team_members: Array.isArray(project.team_members) ? project.team_members : []\n        })));\n      } catch (err) {\n        setError(\"Failed to load data.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [clientId]);\n  const handleFormChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:5005/api/projects\", formData);\n      setProjects([...projects, response.data]);\n      setOpenForm(false);\n    } catch (error) {\n      console.error(\"Error submitting form:\", error);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(CircularProgress, {\n    sx: {\n      display: \"block\",\n      margin: \"20px auto\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(Alert, {\n    severity: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 21\n  }, this);\n  if (!client) return /*#__PURE__*/_jsxDEV(Alert, {\n    severity: \"warning\",\n    children: \"Client not found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 251,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      mt: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      gutterBottom: true,\n      children: [client.client_name, \"'s Projects\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      sx: {\n        mt: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Project Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"End Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Budget\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Team Members\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: projects.length === 0 ? /*#__PURE__*/_jsxDEV(TableRow, {\n            children: /*#__PURE__*/_jsxDEV(TableCell, {\n              colSpan: 6,\n              align: \"center\",\n              children: \"No projects found.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this) : projects.map(project => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: project.project_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: project.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: new Date(project.start_date).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: new Date(project.end_date).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [\"$\", project.budget]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: project.team_members.join(\", \")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 19\n            }, this)]\n          }, project._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      sx: {\n        mt: 3\n      },\n      onClick: () => setOpenForm(true),\n      children: \"Add New Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openForm,\n      onClose: () => setOpenForm(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Create a New Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          margin: \"dense\",\n          label: \"Project Name\",\n          name: \"project_name\",\n          value: formData.project_name,\n          onChange: handleFormChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          margin: \"dense\",\n          label: \"Description\",\n          name: \"description\",\n          value: formData.description,\n          onChange: handleFormChange,\n          multiline: true,\n          rows: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          margin: \"dense\",\n          label: \"Start Date\",\n          name: \"start_date\",\n          type: \"date\",\n          value: formData.start_date,\n          onChange: handleFormChange,\n          InputLabelProps: {\n            shrink: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          margin: \"dense\",\n          label: \"End Date\",\n          name: \"end_date\",\n          type: \"date\",\n          value: formData.end_date,\n          onChange: handleFormChange,\n          InputLabelProps: {\n            shrink: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          margin: \"dense\",\n          label: \"Budget\",\n          name: \"budget\",\n          type: \"number\",\n          value: formData.budget,\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setOpenForm(false),\n          color: \"secondary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleFormSubmit,\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n};\n_s(ClientProfile, \"F5M+bkDfEEBR93agssaIBfv/F/w=\", false, function () {\n  return [useParams];\n});\n_c = ClientProfile;\nexport default ClientProfile;\nvar _c;\n$RefreshReg$(_c, \"ClientProfile\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","Container","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","CircularProgress","Alert","jsxDEV","_jsxDEV","ClientProfile","_s","clientId","client","setClient","projects","setProjects","error","setError","loading","setLoading","openForm","setOpenForm","formData","setFormData","project_name","description","start_date","end_date","budget","client_id","fetchData","clientRes","projectsRes","Promise","all","get","data","map","project","team_members","Array","isArray","err","handleFormChange","e","target","name","value","handleFormSubmit","preventDefault","response","post","console","sx","display","margin","fileName","_jsxFileName","lineNumber","columnNumber","severity","children","maxWidth","mt","variant","align","gutterBottom","client_name","component","length","colSpan","Date","toLocaleDateString","join","_id","color","onClick","open","onClose","fullWidth","label","onChange","required","multiline","rows","type","InputLabelProps","shrink","_c","$RefreshReg$"],"sources":["/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/ContractManagement.js"],"sourcesContent":["\n// import React, { useState, useEffect } from \"react\";\n// import { useParams } from \"react-router-dom\";\n// import axios from \"axios\";\n// import \"../App.css\";\n\n// const ClientProfile = () => {\n//   const { clientId } = useParams(); // Get the clientId from the URL params\n//   const [client, setClient] = useState(null);\n//   const [projects, setProjects] = useState([]); // State to store projects\n//   const [error, setError] = useState(\"\");\n//   const [showForm, setShowForm] = useState(false); // Toggle form visibility\n//   const [formData, setFormData] = useState({\n//     project_name: \"\",\n//     description: \"\",\n//     start_date: \"\",\n//     end_date: \"\",\n//     budget: \"\",\n//     client_id: clientId,\n//   });\n\n//   useEffect(() => {\n//     const fetchClientDetails = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5005/api/client/${clientId}`);\n//         setClient(response.data);\n//       } catch (err) {\n//         setError(\"Failed to load client details.\");\n//       }\n//     };\n\n//     const fetchClientProjects = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5005/api/projects/${clientId}`);\n//         // Make sure team_members is always an array\n//         const updatedProjects = response.data.map((project) => ({\n//           ...project,\n//           team_members: Array.isArray(project.team_members) ? project.team_members : [],\n//         }));\n//         setProjects(updatedProjects);\n//       } catch (err) {\n//         setError(\"Failed to load projects.\");\n//       }\n//     };\n\n//     fetchClientDetails();\n//     fetchClientProjects();\n//   }, [clientId]);\n\n//   const handleFormChange = (e) => {\n//     const { name, value } = e.target;\n\n//     setFormData({\n//       ...formData,\n//       [name]: value,\n//     });\n//   };\n\n//   const handleFormSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await axios.post(\"http://localhost:5005/api/projects\", formData);\n//       setProjects([...projects, response.data]); // Add new project to the list\n//       setShowForm(false); // Hide form after submission\n//       console.log(response.data); // Handle the response data (e.g., display success message)\n//     } catch (error) {\n//       console.error(\"Error submitting form:\", error);\n//     }\n//   };\n\n//   if (error) {\n//     return <div>{error}</div>;\n//   }\n\n//   if (!client) {\n//     return <div>Loading...</div>;\n//   }\n\n//   return (\n//     <div>\n//       <h1 style={{ textAlign: \"center\" }}>Projects for {client.client_name}</h1>\n\n//       {/* Display Projects in Table Format */}\n//       <h2>Projects</h2>\n//       {projects.length === 0 ? (\n//         <p>No projects found for this client.</p>\n//       ) : (\n//         <table className=\"project-table\">\n//           <thead>\n//             <tr>\n//               <th>Project Name</th>\n//               <th>Description</th>\n//               <th>Start Date</th>\n//               <th>End Date</th>\n//               <th>Budget</th>\n//               <th>Team Members</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {projects.map((project) => (\n//               <tr key={project._id}>\n//                 <td>{project.project_name}</td>\n//                 <td>{project.description}</td>\n//                 <td>{new Date(project.start_date).toLocaleDateString()}</td>\n//                 <td>{new Date(project.end_date).toLocaleDateString()}</td>\n//                 <td>{project.budget}</td>\n//                 <td>{(project.team_members || []).join(\", \")}</td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       )}\n\n//       <div className=\"client-profile-card\">\n//         {/* Button to Show/Hide Form */}\n//         <button onClick={() => setShowForm(!showForm)}>\n//           {showForm ? \"Cancel\" : \"Add New Project\"}\n//         </button>\n\n//         {/* Project Creation Form */}\n//         {showForm && (\n//           <div className=\"project-form\">\n//           <h2>Create a New Project</h2>\n//           <form onSubmit={handleFormSubmit}>\n//             <div>\n//               <label>Project Name</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"project_name\"\n//                 value={formData.project_name}\n//                 onChange={handleFormChange}\n//                 required\n//               />\n//             </div>\n//             <div>\n//               <label>Description</label>\n//               <textarea\n//                 name=\"description\"\n//                 value={formData.description}\n//                 onChange={handleFormChange}\n//                 className=\"description-input\"\n//               />\n//             </div>\n//             <div>\n//               <label>Start Date</label>\n//               <input\n//                 type=\"date\"\n//                 name=\"start_date\"\n//                 value={formData.start_date}\n//                 onChange={handleFormChange}\n//                 className=\"date-input\"\n//               />\n//             </div>\n//             <div>\n//               <label>End Date</label>\n//               <input\n//                 type=\"date\"\n//                 name=\"end_date\"\n//                 value={formData.end_date}\n//                 onChange={handleFormChange}\n//                 className=\"date-input\"\n//               />\n//             </div>\n//             <div>\n//               <label>Budget</label>\n//               <input\n//                 type=\"number\"\n//                 name=\"budget\"\n//                 value={formData.budget}\n//                 onChange={handleFormChange}\n//               />\n//             </div>\n//             <div>\n//               <button type=\"submit\">Create Project</button>\n//             </div>\n//           </form>\n//         </div>\n        \n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ClientProfile;\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { \n  Container, Typography, Table, TableBody, TableCell, TableContainer, \n  TableHead, TableRow, Paper, Button, TextField, Dialog, DialogActions, \n  DialogContent, DialogTitle, CircularProgress, Alert \n} from \"@mui/material\";\n\nconst ClientProfile = () => {\n  const { clientId } = useParams();\n  const [client, setClient] = useState(null);\n  const [projects, setProjects] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [openForm, setOpenForm] = useState(false);\n  const [formData, setFormData] = useState({\n    project_name: \"\",\n    description: \"\",\n    start_date: \"\",\n    end_date: \"\",\n    budget: \"\",\n    client_id: clientId,\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [clientRes, projectsRes] = await Promise.all([\n          axios.get(`http://localhost:5005/api/client/${clientId}`),\n          axios.get(`http://localhost:5005/api/projects/${clientId}`),\n        ]);\n        setClient(clientRes.data);\n        setProjects(\n          projectsRes.data.map(project => ({\n            ...project,\n            team_members: Array.isArray(project.team_members) ? project.team_members : [],\n          }))\n        );\n      } catch (err) {\n        setError(\"Failed to load data.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [clientId]);\n\n  const handleFormChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:5005/api/projects\", formData);\n      setProjects([...projects, response.data]);\n      setOpenForm(false);\n    } catch (error) {\n      console.error(\"Error submitting form:\", error);\n    }\n  };\n\n  if (loading) return <CircularProgress sx={{ display: \"block\", margin: \"20px auto\" }} />;\n  if (error) return <Alert severity=\"error\">{error}</Alert>;\n  if (!client) return <Alert severity=\"warning\">Client not found.</Alert>;\n\n  return (\n    <Container maxWidth=\"md\" sx={{ mt: 4 }}>\n      <Typography variant=\"h4\" align=\"center\" gutterBottom>\n        {client.client_name}'s Projects\n      </Typography>\n\n      <TableContainer component={Paper} sx={{ mt: 2 }}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Project Name</TableCell>\n              <TableCell>Description</TableCell>\n              <TableCell>Start Date</TableCell>\n              <TableCell>End Date</TableCell>\n              <TableCell>Budget</TableCell>\n              <TableCell>Team Members</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {projects.length === 0 ? (\n              <TableRow>\n                <TableCell colSpan={6} align=\"center\">No projects found.</TableCell>\n              </TableRow>\n            ) : (\n              projects.map((project) => (\n                <TableRow key={project._id}>\n                  <TableCell>{project.project_name}</TableCell>\n                  <TableCell>{project.description}</TableCell>\n                  <TableCell>{new Date(project.start_date).toLocaleDateString()}</TableCell>\n                  <TableCell>{new Date(project.end_date).toLocaleDateString()}</TableCell>\n                  <TableCell>${project.budget}</TableCell>\n                  <TableCell>{project.team_members.join(\", \")}</TableCell>\n                </TableRow>\n              ))\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <Button variant=\"contained\" color=\"primary\" sx={{ mt: 3 }} onClick={() => setOpenForm(true)}>\n        Add New Project\n      </Button>\n\n      <Dialog open={openForm} onClose={() => setOpenForm(false)}>\n        <DialogTitle>Create a New Project</DialogTitle>\n        <DialogContent>\n          <TextField fullWidth margin=\"dense\" label=\"Project Name\" name=\"project_name\" value={formData.project_name} onChange={handleFormChange} required />\n          <TextField fullWidth margin=\"dense\" label=\"Description\" name=\"description\" value={formData.description} onChange={handleFormChange} multiline rows={3} />\n          <TextField fullWidth margin=\"dense\" label=\"Start Date\" name=\"start_date\" type=\"date\" value={formData.start_date} onChange={handleFormChange} InputLabelProps={{ shrink: true }} />\n          <TextField fullWidth margin=\"dense\" label=\"End Date\" name=\"end_date\" type=\"date\" value={formData.end_date} onChange={handleFormChange} InputLabelProps={{ shrink: true }} />\n          <TextField fullWidth margin=\"dense\" label=\"Budget\" name=\"budget\" type=\"number\" value={formData.budget} onChange={handleFormChange} />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setOpenForm(false)} color=\"secondary\">Cancel</Button>\n          <Button onClick={handleFormSubmit} color=\"primary\" variant=\"contained\">Create</Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n};\n\nexport default ClientProfile;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}