{"ast":null,"code":"var _jsxFileName = \"/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './Dashboard.css';\n// import PendingUsers from \"../components/PendingUser\";\n// import { Link } from 'react-router-dom';\n\n// const Dashboard = () => {\n//   const [clients, setClients] = useState([]);\n//   const [search, setSearch] = useState('');\n//   const [filters, setFilters] = useState({\n//     region: '',\n//     industry: '',\n//     status: '',\n//   });\n//   const [sortOrder, setSortOrder] = useState('asc');\n//   const [sortColumn, setSortColumn] = useState('client_name');\n//   const [authToken, setAuthToken] = useState(localStorage.getItem('token') || '');\n//   const [editingClient, setEditingClient] = useState(null); // Client being edited\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     fetchClients();\n//   }, [filters, sortColumn, sortOrder]);\n\n//   const fetchClients = () => {\n//     const query = new URLSearchParams({\n//       search,\n//       region: filters.region,\n//       industry: filters.industry,\n//       status: filters.status,\n//       sortColumn,\n//       sortOrder,\n//     });\n\n//     axios\n//       .get(`http://localhost:5005/api/users?${query.toString()}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then((response) => {\n//         setClients(response.data);\n//       })\n//       .catch((err) => {\n//         console.error('Error fetching clients:', err);\n//       });\n//   };\n\n//   const handleSearch = (e) => {\n//     setSearch(e.target.value);\n//   };\n\n//   const handleFilterChange = (e) => {\n//     const { name, value } = e.target;\n//     setFilters({ ...filters, [name]: value });\n//   };\n\n//   const handleSort = (column) => {\n//     const newSortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n//     setSortOrder(newSortOrder);\n//     setSortColumn(column);\n//   };\n\n//   const handleEditClick = (client) => {\n//     setEditingClient(client); // Set the client for editing\n//   };\n\n//   const handleEditChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditingClient({ ...editingClient, [name]: value });\n//   };\n\n//   const handleAddressChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditingClient({\n//       ...editingClient,\n//       address: {\n//         ...editingClient.address,\n//         [name]: value,\n//       },\n//     });\n//   };\n\n//   const handleEditSubmit = async () => {\n//     try {\n//       await axios.put(\n//         `http://localhost:5005/api/users/${editingClient._id}`,\n//         editingClient,\n//         {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         }\n//       );\n//       // Update client list with the new details\n//       setClients(\n//         clients.map((client) =>\n//           client._id === editingClient._id ? editingClient : client\n//         )\n//       );\n//       setEditingClient(null); // Close the editing form\n//     } catch (err) {\n//       console.error('Error updating client:', err);\n//       setError('Failed to update client. Please try again.');\n//     }\n//   };\n\n//   const handleDelete = (clientId) => {\n//     axios\n//       .delete(`http://localhost:5005/api/users/${clientId}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then(() => {\n//         setClients(clients.filter((client) => client._id !== clientId));\n//         alert('Client deleted successfully');\n//       })\n//       .catch((err) => {\n//         console.error('Error deleting client:', err);\n//       });\n//   };\n\n//   return (\n//     <div className=\"dashboard\">\n//       {/* <h1 className='Dash'>Client Dashboard</h1> */}\n//       <PendingUsers />\n//       <h1 className='Dash'>Clients</h1>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Search clients...\"\n//         value={search}\n//         onChange={handleSearch}\n//       />\n\n//       {/* Filter Options */}\n//       <select name=\"region\" onChange={handleFilterChange} value={filters.region}>\n//         <option value=\"\">All Regions</option>\n//         <option value=\"North America\">North America</option>\n//         <option value=\"Europe\">Europe</option>\n//         <option value=\"Asia\">Asia</option>\n//       </select>\n//       <select\n//         name=\"industry\"\n//         onChange={handleFilterChange}\n//         value={filters.industry}\n//       >\n//         <option value=\"\">All Industries</option>\n//         <option value=\"Finance\">Finance</option>\n//         <option value=\"Technology\">Technology</option>\n//         <option value=\"Healthcare\">Healthcare</option>\n//       </select>\n//       <select\n//         name=\"status\"\n//         onChange={handleFilterChange}\n//         value={filters.status}\n//       >\n//         <option value=\"\">All Statuses</option>\n//         <option value=\"Active\">Active</option>\n//         <option value=\"Inactive\">Inactive</option>\n//       </select>\n\n//       <table>\n//         <thead>\n//           <tr>\n//             <th onClick={() => handleSort('client_name')}>Client Name</th>\n//             <th onClick={() => handleSort('status')}>Status</th>\n//             <th onClick={() => handleSort('industry')}>Industry</th>\n\n//             <th>Email</th>\n//             <th>Phone</th>\n//             <th>Contact Person</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {clients.map((client) => (\n//             <tr key={client._id}>\n//                 <td>\n//                   <Link to={`/client/${client._id}`}>{client.client_name}</Link>\n//                 </td>\n\n//             <td>{client.status}</td>\n//               <td>{client.industry}</td>\n//               <td>{client.email}</td>\n//               <td>{client.phone}</td>\n//               <td>{client.contact_person}</td>\n//               <td>\n//                 <button onClick={() => handleEditClick(client)}>Edit</button>\n//                 <button onClick={() => handleDelete(client._id)}>Delete</button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n\n//       {editingClient && (\n//         <div className=\"edit-modal\">\n//           <h3>Edit Client</h3>\n//           <input\n//             type=\"text\"\n//             name=\"client_name\"\n//             value={editingClient.client_name}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"contact_person\"\n//             value={editingClient.contact_person}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"email\"\n//             value={editingClient.email}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"phone\"\n//             value={editingClient.phone}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"industry\"\n//             value={editingClient.industry}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <h3>Address</h3>\n//           <input\n//             type=\"text\"\n//             name=\"street\"\n//             value={editingClient.address?.street}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"city\"\n//             value={editingClient.address?.city}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"state\"\n//             value={editingClient.address?.state}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"postal_code\"\n//             value={editingClient.address?.postal_code}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"country\"\n//             value={editingClient.address?.country}\n//             onChange={handleAddressChange}\n//           />\n//           <button onClick={handleEditSubmit}>Save</button>\n//           <button onClick={() => setEditingClient(null)}>Cancel</button>\n//           {error && <p>{error}</p>}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Card, CardContent, Typography, TextField, Select, MenuItem, Button, Dialog, DialogTitle, DialogContent, DialogActions, InputLabel, FormControl } from \"@mui/material\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { Link } from \"react-router-dom\";\nimport PendingUsers from \"../components/PendingUser\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [clients, setClients] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [filters, setFilters] = useState({\n    region: \"\",\n    industry: \"\",\n    status: \"\"\n  });\n  const [sortOrder, setSortOrder] = useState(\"asc\");\n  const [sortColumn, setSortColumn] = useState(\"client_name\");\n  const [authToken] = useState(localStorage.getItem(\"token\") || \"\");\n  const [editingClient, setEditingClient] = useState(null);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    fetchClients();\n  }, [filters, sortColumn, sortOrder]);\n  const fetchClients = () => {\n    const query = new URLSearchParams({\n      search,\n      region: filters.region,\n      industry: filters.industry,\n      status: filters.status,\n      sortColumn,\n      sortOrder\n    });\n    axios.get(`http://localhost:5005/api/users?${query.toString()}`, {\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    }).then(response => setClients(response.data)).catch(err => console.error(\"Error fetching clients:\", err));\n  };\n  const handleSearch = e => setSearch(e.target.value);\n  const handleFilterChange = e => setFilters({\n    ...filters,\n    [e.target.name]: e.target.value\n  });\n  const handleSort = column => setSortOrder(sortOrder === \"asc\" ? \"desc\" : \"asc\");\n  const handleEditClick = client => setEditingClient(client);\n  const handleEditChange = e => setEditingClient({\n    ...editingClient,\n    [e.target.name]: e.target.value\n  });\n  const handleEditSubmit = async () => {\n    try {\n      await axios.put(`http://localhost:5005/api/users/${editingClient._id}`, editingClient, {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      });\n      setClients(clients.map(c => c._id === editingClient._id ? editingClient : c));\n      setEditingClient(null);\n    } catch (err) {\n      console.error(\"Error updating client:\", err);\n      setError(\"Failed to update client. Please try again.\");\n    }\n  };\n  const handleDelete = clientId => {\n    axios.delete(`http://localhost:5005/api/users/${clientId}`, {\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    }).then(() => setClients(clients.filter(c => c._id !== clientId))).catch(err => console.error(\"Error deleting client:\", err));\n  };\n  const columns = [{\n    field: \"client_name\",\n    headerName: \"Client Name\",\n    flex: 1,\n    renderCell: params => /*#__PURE__*/_jsxDEV(Link, {\n      to: `/client/${params.row._id}`,\n      children: params.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 89\n    }, this)\n  }, {\n    field: \"status\",\n    headerName: \"Status\",\n    flex: 1\n  }, {\n    field: \"industry\",\n    headerName: \"Industry\",\n    flex: 1\n  }, {\n    field: \"email\",\n    headerName: \"Email\",\n    flex: 1\n  }, {\n    field: \"phone\",\n    headerName: \"Phone\",\n    flex: 1\n  }, {\n    field: \"contact_person\",\n    headerName: \"Contact Person\",\n    flex: 1\n  }, {\n    field: \"actions\",\n    headerName: \"Actions\",\n    flex: 1,\n    renderCell: params => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"small\",\n        onClick: () => handleEditClick(params.row),\n        style: {\n          marginRight: 8\n        },\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"error\",\n        size: \"small\",\n        onClick: () => handleDelete(params.row._id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }];\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      maxWidth: \"90%\",\n      margin: \"auto\",\n      mt: 4,\n      p: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(PendingUsers, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Clients Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          gap: \"10px\",\n          marginBottom: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Search Clients...\",\n          variant: \"outlined\",\n          value: search,\n          onChange: handleSearch,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Region\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            name: \"region\",\n            value: filters.region,\n            onChange: handleFilterChange,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: \"All Regions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"North America\",\n              children: \"North America\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Europe\",\n              children: \"Europe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Asia\",\n              children: \"Asia\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Industry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            name: \"industry\",\n            value: filters.industry,\n            onChange: handleFilterChange,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: \"All Industries\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Finance\",\n              children: \"Finance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Technology\",\n              children: \"Technology\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Healthcare\",\n              children: \"Healthcare\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            name: \"status\",\n            value: filters.status,\n            onChange: handleFilterChange,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: \"All Statuses\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Active\",\n              children: \"Active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Inactive\",\n              children: \"Inactive\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: clients,\n        columns: columns,\n        getRowId: row => row._id,\n        pageSize: 10,\n        autoHeight: true,\n        sx: {\n          background: \"#fff\",\n          borderRadius: \"8px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: !!editingClient,\n        onClose: () => setEditingClient(null),\n        maxWidth: \"sm\",\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Edit Client\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Client Name\",\n            name: \"client_name\",\n            value: (editingClient === null || editingClient === void 0 ? void 0 : editingClient.client_name) || \"\",\n            onChange: handleEditChange,\n            margin: \"dense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Contact Person\",\n            name: \"contact_person\",\n            value: (editingClient === null || editingClient === void 0 ? void 0 : editingClient.contact_person) || \"\",\n            onChange: handleEditChange,\n            margin: \"dense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Email\",\n            name: \"email\",\n            value: (editingClient === null || editingClient === void 0 ? void 0 : editingClient.email) || \"\",\n            onChange: handleEditChange,\n            margin: \"dense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Phone\",\n            name: \"phone\",\n            value: (editingClient === null || editingClient === void 0 ? void 0 : editingClient.phone) || \"\",\n            onChange: handleEditChange,\n            margin: \"dense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Industry\",\n            name: \"industry\",\n            value: (editingClient === null || editingClient === void 0 ? void 0 : editingClient.industry) || \"\",\n            onChange: handleEditChange,\n            margin: \"dense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleEditSubmit,\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setEditingClient(null),\n            variant: \"contained\",\n            color: \"secondary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 382,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"1zLrW11HP+4RKJepmz3FeXRXiT4=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","Card","CardContent","Typography","TextField","Select","MenuItem","Button","Dialog","DialogTitle","DialogContent","DialogActions","InputLabel","FormControl","DataGrid","Link","PendingUsers","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","clients","setClients","search","setSearch","filters","setFilters","region","industry","status","sortOrder","setSortOrder","sortColumn","setSortColumn","authToken","localStorage","getItem","editingClient","setEditingClient","error","setError","fetchClients","query","URLSearchParams","get","toString","headers","Authorization","then","response","data","catch","err","console","handleSearch","e","target","value","handleFilterChange","name","handleSort","column","handleEditClick","client","handleEditChange","handleEditSubmit","put","_id","map","c","handleDelete","clientId","delete","filter","columns","field","headerName","flex","renderCell","params","to","row","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","color","size","onClick","style","marginRight","sx","maxWidth","margin","mt","p","gutterBottom","display","gap","marginBottom","label","onChange","fullWidth","rows","getRowId","pageSize","autoHeight","background","borderRadius","open","onClose","client_name","contact_person","email","phone","_c","$RefreshReg$"],"sources":["/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/Dashboard.js"],"sourcesContent":["\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './Dashboard.css';\n// import PendingUsers from \"../components/PendingUser\";\n// import { Link } from 'react-router-dom';\n\n// const Dashboard = () => {\n//   const [clients, setClients] = useState([]);\n//   const [search, setSearch] = useState('');\n//   const [filters, setFilters] = useState({\n//     region: '',\n//     industry: '',\n//     status: '',\n//   });\n//   const [sortOrder, setSortOrder] = useState('asc');\n//   const [sortColumn, setSortColumn] = useState('client_name');\n//   const [authToken, setAuthToken] = useState(localStorage.getItem('token') || '');\n//   const [editingClient, setEditingClient] = useState(null); // Client being edited\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     fetchClients();\n//   }, [filters, sortColumn, sortOrder]);\n\n//   const fetchClients = () => {\n//     const query = new URLSearchParams({\n//       search,\n//       region: filters.region,\n//       industry: filters.industry,\n//       status: filters.status,\n//       sortColumn,\n//       sortOrder,\n//     });\n\n//     axios\n//       .get(`http://localhost:5005/api/users?${query.toString()}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then((response) => {\n//         setClients(response.data);\n//       })\n//       .catch((err) => {\n//         console.error('Error fetching clients:', err);\n//       });\n//   };\n\n//   const handleSearch = (e) => {\n//     setSearch(e.target.value);\n//   };\n\n//   const handleFilterChange = (e) => {\n//     const { name, value } = e.target;\n//     setFilters({ ...filters, [name]: value });\n//   };\n\n//   const handleSort = (column) => {\n//     const newSortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n//     setSortOrder(newSortOrder);\n//     setSortColumn(column);\n//   };\n\n//   const handleEditClick = (client) => {\n//     setEditingClient(client); // Set the client for editing\n//   };\n\n//   const handleEditChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditingClient({ ...editingClient, [name]: value });\n//   };\n\n//   const handleAddressChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditingClient({\n//       ...editingClient,\n//       address: {\n//         ...editingClient.address,\n//         [name]: value,\n//       },\n//     });\n//   };\n\n//   const handleEditSubmit = async () => {\n//     try {\n//       await axios.put(\n//         `http://localhost:5005/api/users/${editingClient._id}`,\n//         editingClient,\n//         {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         }\n//       );\n//       // Update client list with the new details\n//       setClients(\n//         clients.map((client) =>\n//           client._id === editingClient._id ? editingClient : client\n//         )\n//       );\n//       setEditingClient(null); // Close the editing form\n//     } catch (err) {\n//       console.error('Error updating client:', err);\n//       setError('Failed to update client. Please try again.');\n//     }\n//   };\n\n//   const handleDelete = (clientId) => {\n//     axios\n//       .delete(`http://localhost:5005/api/users/${clientId}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then(() => {\n//         setClients(clients.filter((client) => client._id !== clientId));\n//         alert('Client deleted successfully');\n//       })\n//       .catch((err) => {\n//         console.error('Error deleting client:', err);\n//       });\n//   };\n\n//   return (\n//     <div className=\"dashboard\">\n//       {/* <h1 className='Dash'>Client Dashboard</h1> */}\n//       <PendingUsers />\n//       <h1 className='Dash'>Clients</h1>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Search clients...\"\n//         value={search}\n//         onChange={handleSearch}\n//       />\n\n//       {/* Filter Options */}\n//       <select name=\"region\" onChange={handleFilterChange} value={filters.region}>\n//         <option value=\"\">All Regions</option>\n//         <option value=\"North America\">North America</option>\n//         <option value=\"Europe\">Europe</option>\n//         <option value=\"Asia\">Asia</option>\n//       </select>\n//       <select\n//         name=\"industry\"\n//         onChange={handleFilterChange}\n//         value={filters.industry}\n//       >\n//         <option value=\"\">All Industries</option>\n//         <option value=\"Finance\">Finance</option>\n//         <option value=\"Technology\">Technology</option>\n//         <option value=\"Healthcare\">Healthcare</option>\n//       </select>\n//       <select\n//         name=\"status\"\n//         onChange={handleFilterChange}\n//         value={filters.status}\n//       >\n//         <option value=\"\">All Statuses</option>\n//         <option value=\"Active\">Active</option>\n//         <option value=\"Inactive\">Inactive</option>\n//       </select>\n\n//       <table>\n//         <thead>\n//           <tr>\n//             <th onClick={() => handleSort('client_name')}>Client Name</th>\n//             <th onClick={() => handleSort('status')}>Status</th>\n//             <th onClick={() => handleSort('industry')}>Industry</th>\n            \n//             <th>Email</th>\n//             <th>Phone</th>\n//             <th>Contact Person</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {clients.map((client) => (\n//             <tr key={client._id}>\n//                 <td>\n//                   <Link to={`/client/${client._id}`}>{client.client_name}</Link>\n//                 </td>\n              \n              \n//             <td>{client.status}</td>\n//               <td>{client.industry}</td>\n//               <td>{client.email}</td>\n//               <td>{client.phone}</td>\n//               <td>{client.contact_person}</td>\n//               <td>\n//                 <button onClick={() => handleEditClick(client)}>Edit</button>\n//                 <button onClick={() => handleDelete(client._id)}>Delete</button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n\n//       {editingClient && (\n//         <div className=\"edit-modal\">\n//           <h3>Edit Client</h3>\n//           <input\n//             type=\"text\"\n//             name=\"client_name\"\n//             value={editingClient.client_name}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"contact_person\"\n//             value={editingClient.contact_person}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"email\"\n//             value={editingClient.email}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"phone\"\n//             value={editingClient.phone}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"industry\"\n//             value={editingClient.industry}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <h3>Address</h3>\n//           <input\n//             type=\"text\"\n//             name=\"street\"\n//             value={editingClient.address?.street}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"city\"\n//             value={editingClient.address?.city}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"state\"\n//             value={editingClient.address?.state}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"postal_code\"\n//             value={editingClient.address?.postal_code}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"country\"\n//             value={editingClient.address?.country}\n//             onChange={handleAddressChange}\n//           />\n//           <button onClick={handleEditSubmit}>Save</button>\n//           <button onClick={() => setEditingClient(null)}>Cancel</button>\n//           {error && <p>{error}</p>}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Card,\n  CardContent,\n  Typography,\n  TextField,\n  Select,\n  MenuItem,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  InputLabel,\n  FormControl,\n} from \"@mui/material\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { Link } from \"react-router-dom\";\nimport PendingUsers from \"../components/PendingUser\";\n\nconst Dashboard = () => {\n  const [clients, setClients] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [filters, setFilters] = useState({ region: \"\", industry: \"\", status: \"\" });\n  const [sortOrder, setSortOrder] = useState(\"asc\");\n  const [sortColumn, setSortColumn] = useState(\"client_name\");\n  const [authToken] = useState(localStorage.getItem(\"token\") || \"\");\n  const [editingClient, setEditingClient] = useState(null);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    fetchClients();\n  }, [filters, sortColumn, sortOrder]);\n\n  const fetchClients = () => {\n    const query = new URLSearchParams({\n      search,\n      region: filters.region,\n      industry: filters.industry,\n      status: filters.status,\n      sortColumn,\n      sortOrder,\n    });\n\n    axios\n      .get(`http://localhost:5005/api/users?${query.toString()}`, {\n        headers: { Authorization: `Bearer ${authToken}` },\n      })\n      .then((response) => setClients(response.data))\n      .catch((err) => console.error(\"Error fetching clients:\", err));\n  };\n\n  const handleSearch = (e) => setSearch(e.target.value);\n  const handleFilterChange = (e) => setFilters({ ...filters, [e.target.name]: e.target.value });\n  const handleSort = (column) => setSortOrder(sortOrder === \"asc\" ? \"desc\" : \"asc\");\n  const handleEditClick = (client) => setEditingClient(client);\n  const handleEditChange = (e) => setEditingClient({ ...editingClient, [e.target.name]: e.target.value });\n\n  const handleEditSubmit = async () => {\n    try {\n      await axios.put(`http://localhost:5005/api/users/${editingClient._id}`, editingClient, {\n        headers: { Authorization: `Bearer ${authToken}` },\n      });\n      setClients(clients.map((c) => (c._id === editingClient._id ? editingClient : c)));\n      setEditingClient(null);\n    } catch (err) {\n      console.error(\"Error updating client:\", err);\n      setError(\"Failed to update client. Please try again.\");\n    }\n  };\n\n  const handleDelete = (clientId) => {\n    axios\n      .delete(`http://localhost:5005/api/users/${clientId}`, { headers: { Authorization: `Bearer ${authToken}` } })\n      .then(() => setClients(clients.filter((c) => c._id !== clientId)))\n      .catch((err) => console.error(\"Error deleting client:\", err));\n  };\n\n  const columns = [\n    { field: \"client_name\", headerName: \"Client Name\", flex: 1, renderCell: (params) => <Link to={`/client/${params.row._id}`}>{params.value}</Link> },\n    { field: \"status\", headerName: \"Status\", flex: 1 },\n    { field: \"industry\", headerName: \"Industry\", flex: 1 },\n    { field: \"email\", headerName: \"Email\", flex: 1 },\n    { field: \"phone\", headerName: \"Phone\", flex: 1 },\n    { field: \"contact_person\", headerName: \"Contact Person\", flex: 1 },\n    {\n      field: \"actions\",\n      headerName: \"Actions\",\n      flex: 1,\n      renderCell: (params) => (\n        <>\n          <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={() => handleEditClick(params.row)} style={{ marginRight: 8 }}>\n            Edit\n          </Button>\n          <Button variant=\"contained\" color=\"error\" size=\"small\" onClick={() => handleDelete(params.row._id)}>\n            Delete\n          </Button>\n        </>\n      ),\n    },\n  ];\n\n  return (\n    <Card sx={{ maxWidth: \"90%\", margin: \"auto\", mt: 4, p: 3 }}>\n      <CardContent>\n        <PendingUsers />\n        <Typography variant=\"h4\" gutterBottom>\n          Clients Dashboard\n        </Typography>\n\n        {/* Filters & Search */}\n        <div style={{ display: \"flex\", gap: \"10px\", marginBottom: \"20px\" }}>\n          <TextField label=\"Search Clients...\" variant=\"outlined\" value={search} onChange={handleSearch} fullWidth />\n          <FormControl fullWidth>\n            <InputLabel>Region</InputLabel>\n            <Select name=\"region\" value={filters.region} onChange={handleFilterChange}>\n              <MenuItem value=\"\">All Regions</MenuItem>\n              <MenuItem value=\"North America\">North America</MenuItem>\n              <MenuItem value=\"Europe\">Europe</MenuItem>\n              <MenuItem value=\"Asia\">Asia</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl fullWidth>\n            <InputLabel>Industry</InputLabel>\n            <Select name=\"industry\" value={filters.industry} onChange={handleFilterChange}>\n              <MenuItem value=\"\">All Industries</MenuItem>\n              <MenuItem value=\"Finance\">Finance</MenuItem>\n              <MenuItem value=\"Technology\">Technology</MenuItem>\n              <MenuItem value=\"Healthcare\">Healthcare</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl fullWidth>\n            <InputLabel>Status</InputLabel>\n            <Select name=\"status\" value={filters.status} onChange={handleFilterChange}>\n              <MenuItem value=\"\">All Statuses</MenuItem>\n              <MenuItem value=\"Active\">Active</MenuItem>\n              <MenuItem value=\"Inactive\">Inactive</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n\n        {/* Clients Table */}\n        <DataGrid\n          rows={clients}\n          columns={columns}\n          getRowId={(row) => row._id}\n          pageSize={10}\n          autoHeight\n          sx={{ background: \"#fff\", borderRadius: \"8px\" }}\n        />\n\n        {/* Edit Client Modal */}\n        <Dialog open={!!editingClient} onClose={() => setEditingClient(null)} maxWidth=\"sm\" fullWidth>\n          <DialogTitle>Edit Client</DialogTitle>\n          <DialogContent>\n            <TextField fullWidth label=\"Client Name\" name=\"client_name\" value={editingClient?.client_name || \"\"} onChange={handleEditChange} margin=\"dense\" />\n            <TextField fullWidth label=\"Contact Person\" name=\"contact_person\" value={editingClient?.contact_person || \"\"} onChange={handleEditChange} margin=\"dense\" />\n            <TextField fullWidth label=\"Email\" name=\"email\" value={editingClient?.email || \"\"} onChange={handleEditChange} margin=\"dense\" />\n            <TextField fullWidth label=\"Phone\" name=\"phone\" value={editingClient?.phone || \"\"} onChange={handleEditChange} margin=\"dense\" />\n            <TextField fullWidth label=\"Industry\" name=\"industry\" value={editingClient?.industry || \"\"} onChange={handleEditChange} margin=\"dense\" />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleEditSubmit} variant=\"contained\" color=\"primary\">\n              Save\n            </Button>\n            <Button onClick={() => setEditingClient(null)} variant=\"contained\" color=\"secondary\">\n              Cancel\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Dashboard;\n"],"mappingslD,OAAOC,KAAK,MAAM,OAAO;AACzB,SACEC,IAAI,EACJC,WAAW,EACXC,UAAU,EACVC,SAAS,EACTC,MAAM,EACNC,QAAQ,EACRC,MAAM,EACNC,MAAM,EACNC,WAAW,EACXC,aAAa,EACbC,aAAa,EACbC,UAAU,EACVC,WAAW,QACN,eAAe;AACtB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,YAAY,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC2B,MAAM,EAAEC,SAAS,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC6B,OAAO,EAAEC,UAAU,CAAC,GAAG9B,QAAQ,CAAC;IAAE+B,MAAM,EAAE,EAAE;IAAEC,QAAQ,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAG,CAAC,CAAC;EAChF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGnC,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACoC,UAAU,EAAEC,aAAa,CAAC,GAAGrC,QAAQ,CAAC,aAAa,CAAC;EAC3D,MAAM,CAACsC,SAAS,CAAC,GAAGtC,QAAQ,CAACuC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;EACjE,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAG1C,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAAC2C,KAAK,EAAEC,QAAQ,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd4C,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAAChB,OAAO,EAAEO,UAAU,EAAEF,SAAS,CAAC,CAAC;EAEpC,MAAMW,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,KAAK,GAAG,IAAIC,eAAe,CAAC;MAChCpB,MAAM;MACNI,MAAM,EAAEF,OAAO,CAACE,MAAM;MACtBC,QAAQ,EAAEH,OAAO,CAACG,QAAQ;MAC1BC,MAAM,EAAEJ,OAAO,CAACI,MAAM;MACtBG,UAAU;MACVF;IACF,CAAC,CAAC;IAEFhC,KAAK,CACF8C,GAAG,CAAC,mCAAmCF,KAAK,CAACG,QAAQ,CAAC,CAAC,EAAE,EAAE;MAC1DC,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUb,SAAS;MAAG;IAClD,CAAC,CAAC,CACDc,IAAI,CAAEC,QAAQ,IAAK3B,UAAU,CAAC2B,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC7CC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACd,KAAK,CAAC,yBAAyB,EAAEa,GAAG,CAAC,CAAC;EAClE,CAAC;EAED,MAAME,YAAY,GAAIC,CAAC,IAAK/B,SAAS,CAAC+B,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACrD,MAAMC,kBAAkB,GAAIH,CAAC,IAAK7B,UAAU,CAAC;IAAE,GAAGD,OAAO;IAAE,CAAC8B,CAAC,CAACC,MAAM,CAACG,IAAI,GAAGJ,CAAC,CAACC,MAAM,CAACC;EAAM,CAAC,CAAC;EAC7F,MAAMG,UAAU,GAAIC,MAAM,IAAK9B,YAAY,CAACD,SAAS,KAAK,KAAK,GAAG,MAAM,GAAG,KAAK,CAAC;EACjF,MAAMgC,eAAe,GAAIC,MAAM,IAAKzB,gBAAgB,CAACyB,MAAM,CAAC;EAC5D,MAAMC,gBAAgB,GAAIT,CAAC,IAAKjB,gBAAgB,CAAC;IAAE,GAAGD,aAAa;IAAE,CAACkB,CAAC,CAACC,MAAM,CAACG,IAAI,GAAGJ,CAAC,CAACC,MAAM,CAACC;EAAM,CAAC,CAAC;EAEvG,MAAMQ,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMnE,KAAK,CAACoE,GAAG,CAAC,mCAAmC7B,aAAa,CAAC8B,GAAG,EAAE,EAAE9B,aAAa,EAAE;QACrFS,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUb,SAAS;QAAG;MAClD,CAAC,CAAC;MACFZ,UAAU,CAACD,OAAO,CAAC+C,GAAG,CAAEC,CAAC,IAAMA,CAAC,CAACF,GAAG,KAAK9B,aAAa,CAAC8B,GAAG,GAAG9B,aAAa,GAAGgC,CAAE,CAAC,CAAC;MACjF/B,gBAAgB,CAAC,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOc,GAAG,EAAE;MACZC,OAAO,CAACd,KAAK,CAAC,wBAAwB,EAAEa,GAAG,CAAC;MAC5CZ,QAAQ,CAAC,4CAA4C,CAAC;IACxD;EACF,CAAC;EAED,MAAM8B,YAAY,GAAIC,QAAQ,IAAK;IACjCzE,KAAK,CACF0E,MAAM,CAAC,mCAAmCD,QAAQ,EAAE,EAAE;MAAEzB,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUb,SAAS;MAAG;IAAE,CAAC,CAAC,CAC5Gc,IAAI,CAAC,MAAM1B,UAAU,CAACD,OAAO,CAACoD,MAAM,CAAEJ,CAAC,IAAKA,CAAC,CAACF,GAAG,KAAKI,QAAQ,CAAC,CAAC,CAAC,CACjEpB,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACd,KAAK,CAAC,wBAAwB,EAAEa,GAAG,CAAC,CAAC;EACjE,CAAC;EAED,MAAMsB,OAAO,GAAG,CACd;IAAEC,KAAK,EAAE,aAAa;IAAEC,UAAU,EAAE,aAAa;IAAEC,IAAI,EAAE,CAAC;IAAEC,UAAU,EAAGC,MAAM,iBAAK/D,OAAA,CAACH,IAAI;MAACmE,EAAE,EAAE,WAAWD,MAAM,CAACE,GAAG,CAACd,GAAG,EAAG;MAAAe,QAAA,EAAEH,MAAM,CAACtB;IAAK;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO;EAAE,CAAC,EAClJ;IAAEX,KAAK,EAAE,QAAQ;IAAEC,UAAU,EAAE,QAAQ;IAAEC,IAAI,EAAE;EAAE,CAAC,EAClD;IAAEF,KAAK,EAAE,UAAU;IAAEC,UAAU,EAAE,UAAU;IAAEC,IAAI,EAAE;EAAE,CAAC,EACtD;IAAEF,KAAK,EAAE,OAAO;IAAEC,UAAU,EAAE,OAAO;IAAEC,IAAI,EAAE;EAAE,CAAC,EAChD;IAAEF,KAAK,EAAE,OAAO;IAAEC,UAAU,EAAE,OAAO;IAAEC,IAAI,EAAE;EAAE,CAAC,EAChD;IAAEF,KAAK,EAAE,gBAAgB;IAAEC,UAAU,EAAE,gBAAgB;IAAEC,IAAI,EAAE;EAAE,CAAC,EAClE;IACEF,KAAK,EAAE,SAAS;IAChBC,UAAU,EAAE,SAAS;IACrBC,IAAI,EAAE,CAAC;IACPC,UAAU,EAAGC,MAAM,iBACjB/D,OAAA,CAAAE,SAAA;MAAAgE,QAAA,gBACElE,OAAA,CAACX,MAAM;QAACkF,OAAO,EAAC,WAAW;QAACC,KAAK,EAAC,SAAS;QAACC,IAAI,EAAC,OAAO;QAACC,OAAO,EAAEA,CAAA,KAAM5B,eAAe,CAACiB,MAAM,CAACE,GAAG,CAAE;QAACU,KAAK,EAAE;UAAEC,WAAW,EAAE;QAAE,CAAE;QAAAV,QAAA,EAAC;MAEhI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTtE,OAAA,CAACX,MAAM;QAACkF,OAAO,EAAC,WAAW;QAACC,KAAK,EAAC,OAAO;QAACC,IAAI,EAAC,OAAO;QAACC,OAAO,EAAEA,CAAA,KAAMpB,YAAY,CAACS,MAAM,CAACE,GAAG,CAACd,GAAG,CAAE;QAAAe,QAAA,EAAC;MAEpG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACT;EAEN,CAAC,CACF;EAED,oBACEtE,OAAA,CAACjB,IAAI;IAAC8F,EAAE,EAAE;MAAEC,QAAQ,EAAE,KAAK;MAAEC,MAAM,EAAE,MAAM;MAAEC,EAAE,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAE;IAAAf,QAAA,eACzDlE,OAAA,CAAChB,WAAW;MAAAkF,QAAA,gBACVlE,OAAA,CAACF,YAAY;QAAAqE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChBtE,OAAA,CAACf,UAAU;QAACsF,OAAO,EAAC,IAAI;QAACW,YAAY;QAAAhB,QAAA,EAAC;MAEtC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAGbtE,OAAA;QAAK2E,KAAK,EAAE;UAAEQ,OAAO,EAAE,MAAM;UAAEC,GAAG,EAAE,MAAM;UAAEC,YAAY,EAAE;QAAO,CAAE;QAAAnB,QAAA,gBACjElE,OAAA,CAACd,SAAS;UAACoG,KAAK,EAAC,mBAAmB;UAACf,OAAO,EAAC,UAAU;UAAC9B,KAAK,EAAElC,MAAO;UAACgF,QAAQ,EAAEjD,YAAa;UAACkD,SAAS;QAAA;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC3GtE,OAAA,CAACL,WAAW;UAAC6F,SAAS;UAAAtB,QAAA,gBACpBlE,OAAA,CAACN,UAAU;YAAAwE,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAC/BtE,OAAA,CAACb,MAAM;YAACwD,IAAI,EAAC,QAAQ;YAACF,KAAK,EAAEhC,OAAO,CAACE,MAAO;YAAC4E,QAAQ,EAAE7C,kBAAmB;YAAAwB,QAAA,gBACxElE,OAAA,CAACZ,QAAQ;cAACqD,KAAK,EAAC,EAAE;cAAAyB,QAAA,EAAC;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC,eACzCtE,OAAA,CAACZ,QAAQ;cAACqD,KAAK,EAAC,eAAe;cAAAyB,QAAA,EAAC;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC,eACxDtE,OAAA,CAACZ,QAAQ;cAACqD,KAAK,EAAC,QAAQ;cAAAyB,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC,eAC1CtE,OAAA,CAACZ,QAAQ;cAACqD,KAAK,EAAC,MAAM;cAAAyB,QAAA,EAAC;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eACdtE,OAAA,CAACL,WAAW;UAAC6F,SAAS;UAAAtB,QAAA,gBACpBlE,OAAA,CAACN,UAAU;YAAAwE,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACjCtE,OAAA,CAACb,MAAM;YAACwD,IAAI,EAAC,UAAU;YAACF,KAAK,EAAEhC,OAAO,CAACG,QAAS;YAAC2E,QAAQ,EAAE7C,kBAAmB;YAAAwB,QAAA,gBAC5ElE,OAAA,CAACZ,QAAQ;cAACqD,KAAK,EAAC,EAAE;cAAAyB,QAAA,EAAC;YAAc;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC,eAC5CtE,OAAA,CAACZ,QAAQ;cAACqD,KAAK,EAAC,SAAS;cAAAyB,QAAA,EAAC;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC,eAC5CtE,OAAA,CAACZ,QAAQ;cAACqD,KAAK,EAAC,YAAY;cAAAyB,QAAA,EAAC;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC,eAClDtE,OAAA,CAACZ,QAAQ;cAACqD,KAAK,EAAC,YAAY;cAAAyB,QAAA,EAAC;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eACdtE,OAAA,CAACL,WAAW;UAAC6F,SAAS;UAAAtB,QAAA,gBACpBlE,OAAA,CAACN,UAAU;YAAAwE,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAC/BtE,OAAA,CAACb,MAAM;YAACwD,IAAI,EAAC,QAAQ;YAACF,KAAK,EAAEhC,OAAO,CAACI,MAAO;YAAC0E,QAAQ,EAAE7C,kBAAmB;YAAAwB,QAAA,gBACxElE,OAAA,CAACZ,QAAQ;cAACqD,KAAK,EAAC,EAAE;cAAAyB,QAAA,EAAC;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC,eAC1CtE,OAAA,CAACZ,QAAQ;cAACqD,KAAK,EAAC,QAAQ;cAAAyB,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC,eAC1CtE,OAAA,CAACZ,QAAQ;cAACqD,KAAK,EAAC,UAAU;cAAAyB,QAAA,EAAC;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eAGNtE,OAAA,CAACJ,QAAQ;QACP6F,IAAI,EAAEpF,OAAQ;QACdqD,OAAO,EAAEA,OAAQ;QACjBgC,QAAQ,EAAGzB,GAAG,IAAKA,GAAG,CAACd,GAAI;QAC3BwC,QAAQ,EAAE,EAAG;QACbC,UAAU;QACVf,EAAE,EAAE;UAAEgB,UAAU,EAAE,MAAM;UAAEC,YAAY,EAAE;QAAM;MAAE;QAAA3B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eAGFtE,OAAA,CAACV,MAAM;QAACyG,IAAI,EAAE,CAAC,CAAC1E,aAAc;QAAC2E,OAAO,EAAEA,CAAA,KAAM1E,gBAAgB,CAAC,IAAI,CAAE;QAACwD,QAAQ,EAAC,IAAI;QAACU,SAAS;QAAAtB,QAAA,gBAC3FlE,OAAA,CAACT,WAAW;UAAA2E,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eACtCtE,OAAA,CAACR,aAAa;UAAA0E,QAAA,gBACZlE,OAAA,CAACd,SAAS;YAACsG,SAAS;YAACF,KAAK,EAAC,aAAa;YAAC3C,IAAI,EAAC,aAAa;YAACF,KAAK,EAAE,CAAApB,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAE4E,WAAW,KAAI,EAAG;YAACV,QAAQ,EAAEvC,gBAAiB;YAAC+B,MAAM,EAAC;UAAO;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAClJtE,OAAA,CAACd,SAAS;YAACsG,SAAS;YAACF,KAAK,EAAC,gBAAgB;YAAC3C,IAAI,EAAC,gBAAgB;YAACF,KAAK,EAAE,CAAApB,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAE6E,cAAc,KAAI,EAAG;YAACX,QAAQ,EAAEvC,gBAAiB;YAAC+B,MAAM,EAAC;UAAO;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC3JtE,OAAA,CAACd,SAAS;YAACsG,SAAS;YAACF,KAAK,EAAC,OAAO;YAAC3C,IAAI,EAAC,OAAO;YAACF,KAAK,EAAE,CAAApB,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAE8E,KAAK,KAAI,EAAG;YAACZ,QAAQ,EAAEvC,gBAAiB;YAAC+B,MAAM,EAAC;UAAO;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAChItE,OAAA,CAACd,SAAS;YAACsG,SAAS;YAACF,KAAK,EAAC,OAAO;YAAC3C,IAAI,EAAC,OAAO;YAACF,KAAK,EAAE,CAAApB,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAE+E,KAAK,KAAI,EAAG;YAACb,QAAQ,EAAEvC,gBAAiB;YAAC+B,MAAM,EAAC;UAAO;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAChItE,OAAA,CAACd,SAAS;YAACsG,SAAS;YAACF,KAAK,EAAC,UAAU;YAAC3C,IAAI,EAAC,UAAU;YAACF,KAAK,EAAE,CAAApB,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAET,QAAQ,KAAI,EAAG;YAAC2E,QAAQ,EAAEvC,gBAAiB;YAAC+B,MAAM,EAAC;UAAO;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5H,CAAC,eAChBtE,OAAA,CAACP,aAAa;UAAAyE,QAAA,gBACZlE,OAAA,CAACX,MAAM;YAACqF,OAAO,EAAEzB,gBAAiB;YAACsB,OAAO,EAAC,WAAW;YAACC,KAAK,EAAC,SAAS;YAAAN,QAAA,EAAC;UAEvE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTtE,OAAA,CAACX,MAAM;YAACqF,OAAO,EAAEA,CAAA,KAAMpD,gBAAgB,CAAC,IAAI,CAAE;YAACiD,OAAO,EAAC,WAAW;YAACC,KAAK,EAAC,WAAW;YAAAN,QAAA,EAAC;UAErF;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEX,CAAC;AAAClE,EAAA,CAzJID,SAAS;AAAAkG,EAAA,GAATlG,SAAS;AA2Jf,eAAeA,SAAS;AAAC,IAAAkG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}