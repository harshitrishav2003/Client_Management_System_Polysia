{"ast":null,"code":"var _jsxFileName = \"/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom';\n// import axios from 'axios'; // Ensure axios is installed: `npm install axios`\n// import './Dashboard.css'; // Custom CSS for the dashboard\n\n// const Dashboard = () => {\n//   const [clients, setClients] = useState([]);\n//   const [search, setSearch] = useState('');\n//   const [filters, setFilters] = useState({\n//     region: '',\n//     industry: '',\n//     status: ''\n//   });\n//   const [sortOrder, setSortOrder] = useState('asc'); // 'asc' or 'desc'\n//   const [sortColumn, setSortColumn] = useState('client_name'); // Default column to sort\n//   const [authToken, setAuthToken] = useState(localStorage.getItem('token') || ''); // Get the token from localStorage\n\n//   // Fetch clients from backend when the component mounts or filters/sort change\n//   useEffect(() => {\n//     fetchClients();\n//   }, [filters, sortColumn, sortOrder]);\n\n//   const fetchClients = () => {\n//     const query = new URLSearchParams({\n//       search,\n//       region: filters.region,\n//       industry: filters.industry,\n//       status: filters.status,\n//       sortColumn,\n//       sortOrder\n//     });\n\n//     axios\n//       .get(`http://localhost:5005/api/users?${query.toString()}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`, // Pass token in Authorization header\n//         },\n//       })\n//       .then((response) => {\n//         setClients(response.data);\n//       })\n//       .catch((err) => {\n//         console.error('Error fetching clients:', err);\n//         // Handle error (e.g., logout if token is invalid)\n//       });\n//   };\n\n//   const handleSearch = (e) => {\n//     setSearch(e.target.value);\n//   };\n\n//   const handleFilterChange = (e) => {\n//     const { name, value } = e.target;\n//     setFilters({ ...filters, [name]: value });\n//   };\n\n//   const handleSort = (column) => {\n//     const newSortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n//     setSortOrder(newSortOrder);\n//     setSortColumn(column);\n//   };\n\n//   const handleEdit = (clientId) => {\n//     // Redirect to the client edit page (implement the edit page separately)\n//     window.location.href = `/edit-client/${clientId}`;\n//   };\n\n//   const handleDelete = (clientId) => {\n//     // Make API call to delete client\n//     axios\n//       .delete(`http://localhost:5005/api/users/${clientId}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then((response) => {\n//         // Remove deleted client from the list\n//         setClients(clients.filter((client) => client._id !== clientId));\n//         alert('Client deleted successfully');\n//       })\n//       .catch((err) => {\n//         console.error('Error deleting client:', err);\n//         alert('Failed to delete client');\n//       });\n//   };\n\n//   const exportData = (format) => {\n//     // Logic to export as excel, pdf, csv\n//     alert(`Exporting data as ${format}`);\n//   };\n\n//   return (\n//     <div className=\"dashboard\">\n//       <h1>Client Dashboard</h1>\n\n//       {/* Search Bar */}\n//       <input\n//         type=\"text\"\n//         placeholder=\"Search clients...\"\n//         value={search}\n//         onChange={handleSearch}\n//       />\n\n//       {/* Filter Options */}\n//       <select name=\"region\" onChange={handleFilterChange} value={filters.region}>\n//         <option value=\"\">All Regions</option>\n//         <option value=\"North America\">North America</option>\n//         <option value=\"Europe\">Europe</option>\n//         <option value=\"Asia\">Asia</option>\n//       </select>\n\n//       <select name=\"industry\" onChange={handleFilterChange} value={filters.industry}>\n//         <option value=\"\">All Industries</option>\n//         <option value=\"Finance\">Finance</option>\n//         <option value=\"Technology\">Technology</option>\n//         <option value=\"Healthcare\">Healthcare</option>\n//       </select>\n\n//       <select name=\"status\" onChange={handleFilterChange} value={filters.status}>\n//         <option value=\"\">All Statuses</option>\n//         <option value=\"Active\">Active</option>\n//         <option value=\"Inactive\">Inactive</option>\n//       </select>\n\n//       {/* Export Buttons */}\n//       <button onClick={() => exportData('excel')}>Export as Excel</button>\n//       <button onClick={() => exportData('pdf')}>Export as PDF</button>\n//       <button onClick={() => exportData('csv')}>Export as CSV</button>\n\n//       {/* Client Data Table */}\n//       <table>\n//         <thead>\n//           <tr>\n//             <th onClick={() => handleSort('client_name')}>Client Name</th>\n//             <th onClick={() => handleSort('industry')}>Industry</th>\n//             <th onClick={() => handleSort('status')}>Status</th>\n//             <th>Email</th>\n//             <th>Phone</th>\n//             <th>Contact Person</th>\n//             <th>Location</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n// <tbody>\n//   {clients.length > 0 ? (\n//     clients.map((client) => (\n//       <tr key={client._id}>\n// <td>\n//   <Link to={`/client/${client._id}`}>{client.client_name}</Link>\n// </td>\n//         <td>{client.industry}</td>\n//         <td>{client.status}</td>\n//         <td>{client.email}</td>\n//         <td>{client.phone}</td>\n//         <td>{client.contact_person}</td>\n//         <td>\n//           {`${client.address.street}, ${client.address.city}, ${client.address.state}, ${client.address.postal_code}, ${client.address.country}`}\n//         </td>\n//         <td>\n//           <button onClick={() => handleEdit(client._id)}>Edit</button>\n//           <button onClick={() => handleDelete(client._id)}>Delete</button>\n//         </td>\n//       </tr>\n//     ))\n//   ) : (\n//     <tr>\n//       <td colSpan=\"6\">No clients found</td>\n//     </tr>\n//   )}\n// </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Dashboard.css';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  var _editingClient$addres, _editingClient$addres2, _editingClient$addres3, _editingClient$addres4, _editingClient$addres5;\n  const [clients, setClients] = useState([]);\n  const [search, setSearch] = useState('');\n  const [filters, setFilters] = useState({\n    region: '',\n    industry: '',\n    status: ''\n  });\n  const [sortOrder, setSortOrder] = useState('asc');\n  const [sortColumn, setSortColumn] = useState('client_name');\n  const [authToken, setAuthToken] = useState(localStorage.getItem('token') || '');\n  const [editingClient, setEditingClient] = useState(null); // Client being edited\n  const [error, setError] = useState('');\n  useEffect(() => {\n    fetchClients();\n  }, [filters, sortColumn, sortOrder]);\n  const fetchClients = () => {\n    const query = new URLSearchParams({\n      search,\n      region: filters.region,\n      industry: filters.industry,\n      status: filters.status,\n      sortColumn,\n      sortOrder\n    });\n    axios.get(`http://localhost:5005/api/users?${query.toString()}`, {\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    }).then(response => {\n      setClients(response.data);\n    }).catch(err => {\n      console.error('Error fetching clients:', err);\n    });\n  };\n  const handleSearch = e => {\n    setSearch(e.target.value);\n  };\n  const handleFilterChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFilters({\n      ...filters,\n      [name]: value\n    });\n  };\n  const handleSort = column => {\n    const newSortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n    setSortOrder(newSortOrder);\n    setSortColumn(column);\n  };\n  const handleEditClick = client => {\n    setEditingClient(client); // Set the client for editing\n  };\n  const handleEditChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditingClient({\n      ...editingClient,\n      [name]: value\n    });\n  };\n  const handleAddressChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditingClient({\n      ...editingClient,\n      address: {\n        ...editingClient.address,\n        [name]: value\n      }\n    });\n  };\n  const handleEditSubmit = async () => {\n    try {\n      await axios.put(`http://localhost:5005/api/users/${editingClient._id}`, editingClient, {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      });\n      // Update client list with the new details\n      setClients(clients.map(client => client._id === editingClient._id ? editingClient : client));\n      setEditingClient(null); // Close the editing form\n    } catch (err) {\n      console.error('Error updating client:', err);\n      setError('Failed to update client. Please try again.');\n    }\n  };\n  const handleDelete = clientId => {\n    axios.delete(`http://localhost:5005/api/users/${clientId}`, {\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    }).then(() => {\n      setClients(clients.filter(client => client._id !== clientId));\n      alert('Client deleted successfully');\n    }).catch(err => {\n      console.error('Error deleting client:', err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Client Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search clients...\",\n      value: search,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"region\",\n      onChange: handleFilterChange,\n      value: filters.region,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"All Regions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"North America\",\n        children: \"North America\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Europe\",\n        children: \"Europe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Asia\",\n        children: \"Asia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"industry\",\n      onChange: handleFilterChange,\n      value: filters.industry,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"All Industries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Finance\",\n        children: \"Finance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Technology\",\n        children: \"Technology\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Healthcare\",\n        children: \"Healthcare\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"status\",\n      onChange: handleFilterChange,\n      value: filters.status,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"All Statuses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Active\",\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Inactive\",\n        children: \"Inactive\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('client_name'),\n            children: \"Client Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('industry'),\n            children: \"Industry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('status'),\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Contact Person\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: clients.map(client => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/client/${client._id}`,\n              children: client.client_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: client.client_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: client.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: client.industry\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: client.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: client.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: client.contact_person\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditClick(client),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(client._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this)]\n        }, client._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this), editingClient && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Client\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"client_name\",\n        value: editingClient.client_name,\n        onChange: handleEditChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"contact_person\",\n        value: editingClient.contact_person,\n        onChange: handleEditChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        value: editingClient.email,\n        onChange: handleEditChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"phone\",\n        value: editingClient.phone,\n        onChange: handleEditChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"industry\",\n        value: editingClient.industry,\n        onChange: handleEditChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"street\",\n        value: (_editingClient$addres = editingClient.address) === null || _editingClient$addres === void 0 ? void 0 : _editingClient$addres.street,\n        onChange: handleAddressChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"city\",\n        value: (_editingClient$addres2 = editingClient.address) === null || _editingClient$addres2 === void 0 ? void 0 : _editingClient$addres2.city,\n        onChange: handleAddressChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"state\",\n        value: (_editingClient$addres3 = editingClient.address) === null || _editingClient$addres3 === void 0 ? void 0 : _editingClient$addres3.state,\n        onChange: handleAddressChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"postal_code\",\n        value: (_editingClient$addres4 = editingClient.address) === null || _editingClient$addres4 === void 0 ? void 0 : _editingClient$addres4.postal_code,\n        onChange: handleAddressChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"country\",\n        value: (_editingClient$addres5 = editingClient.address) === null || _editingClient$addres5 === void 0 ? void 0 : _editingClient$addres5.country,\n        onChange: handleAddressChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEditSubmit,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEditingClient(null),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 301,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"KBE2J8NcpjbYZC+R45w8LqAoaDo=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","jsxDEV","_jsxDEV","Dashboard","_s","_editingClient$addres","_editingClient$addres2","_editingClient$addres3","_editingClient$addres4","_editingClient$addres5","clients","setClients","search","setSearch","filters","setFilters","region","industry","status","sortOrder","setSortOrder","sortColumn","setSortColumn","authToken","setAuthToken","localStorage","getItem","editingClient","setEditingClient","error","setError","fetchClients","query","URLSearchParams","get","toString","headers","Authorization","then","response","data","catch","err","console","handleSearch","e","target","value","handleFilterChange","name","handleSort","column","newSortOrder","handleEditClick","client","handleEditChange","handleAddressChange","address","handleEditSubmit","put","_id","map","handleDelete","clientId","delete","filter","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","to","client_name","email","phone","contact_person","required","street","city","state","postal_code","country","_c","$RefreshReg$"],"sources":["/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/Dashboard.js"],"sourcesContent":["\n// import React, { useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom';\n// import axios from 'axios'; // Ensure axios is installed: `npm install axios`\n// import './Dashboard.css'; // Custom CSS for the dashboard\n\n// const Dashboard = () => {\n//   const [clients, setClients] = useState([]);\n//   const [search, setSearch] = useState('');\n//   const [filters, setFilters] = useState({\n//     region: '',\n//     industry: '',\n//     status: ''\n//   });\n//   const [sortOrder, setSortOrder] = useState('asc'); // 'asc' or 'desc'\n//   const [sortColumn, setSortColumn] = useState('client_name'); // Default column to sort\n//   const [authToken, setAuthToken] = useState(localStorage.getItem('token') || ''); // Get the token from localStorage\n\n//   // Fetch clients from backend when the component mounts or filters/sort change\n//   useEffect(() => {\n//     fetchClients();\n//   }, [filters, sortColumn, sortOrder]);\n\n//   const fetchClients = () => {\n//     const query = new URLSearchParams({\n//       search,\n//       region: filters.region,\n//       industry: filters.industry,\n//       status: filters.status,\n//       sortColumn,\n//       sortOrder\n//     });\n\n//     axios\n//       .get(`http://localhost:5005/api/users?${query.toString()}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`, // Pass token in Authorization header\n//         },\n//       })\n//       .then((response) => {\n//         setClients(response.data);\n//       })\n//       .catch((err) => {\n//         console.error('Error fetching clients:', err);\n//         // Handle error (e.g., logout if token is invalid)\n//       });\n//   };\n\n//   const handleSearch = (e) => {\n//     setSearch(e.target.value);\n//   };\n\n//   const handleFilterChange = (e) => {\n//     const { name, value } = e.target;\n//     setFilters({ ...filters, [name]: value });\n//   };\n\n//   const handleSort = (column) => {\n//     const newSortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n//     setSortOrder(newSortOrder);\n//     setSortColumn(column);\n//   };\n\n//   const handleEdit = (clientId) => {\n//     // Redirect to the client edit page (implement the edit page separately)\n//     window.location.href = `/edit-client/${clientId}`;\n//   };\n\n//   const handleDelete = (clientId) => {\n//     // Make API call to delete client\n//     axios\n//       .delete(`http://localhost:5005/api/users/${clientId}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then((response) => {\n//         // Remove deleted client from the list\n//         setClients(clients.filter((client) => client._id !== clientId));\n//         alert('Client deleted successfully');\n//       })\n//       .catch((err) => {\n//         console.error('Error deleting client:', err);\n//         alert('Failed to delete client');\n//       });\n//   };\n\n//   const exportData = (format) => {\n//     // Logic to export as excel, pdf, csv\n//     alert(`Exporting data as ${format}`);\n//   };\n\n//   return (\n//     <div className=\"dashboard\">\n//       <h1>Client Dashboard</h1>\n\n//       {/* Search Bar */}\n//       <input\n//         type=\"text\"\n//         placeholder=\"Search clients...\"\n//         value={search}\n//         onChange={handleSearch}\n//       />\n\n//       {/* Filter Options */}\n//       <select name=\"region\" onChange={handleFilterChange} value={filters.region}>\n//         <option value=\"\">All Regions</option>\n//         <option value=\"North America\">North America</option>\n//         <option value=\"Europe\">Europe</option>\n//         <option value=\"Asia\">Asia</option>\n//       </select>\n\n//       <select name=\"industry\" onChange={handleFilterChange} value={filters.industry}>\n//         <option value=\"\">All Industries</option>\n//         <option value=\"Finance\">Finance</option>\n//         <option value=\"Technology\">Technology</option>\n//         <option value=\"Healthcare\">Healthcare</option>\n//       </select>\n\n//       <select name=\"status\" onChange={handleFilterChange} value={filters.status}>\n//         <option value=\"\">All Statuses</option>\n//         <option value=\"Active\">Active</option>\n//         <option value=\"Inactive\">Inactive</option>\n//       </select>\n\n//       {/* Export Buttons */}\n//       <button onClick={() => exportData('excel')}>Export as Excel</button>\n//       <button onClick={() => exportData('pdf')}>Export as PDF</button>\n//       <button onClick={() => exportData('csv')}>Export as CSV</button>\n\n//       {/* Client Data Table */}\n//       <table>\n//         <thead>\n//           <tr>\n//             <th onClick={() => handleSort('client_name')}>Client Name</th>\n//             <th onClick={() => handleSort('industry')}>Industry</th>\n//             <th onClick={() => handleSort('status')}>Status</th>\n//             <th>Email</th>\n//             <th>Phone</th>\n//             <th>Contact Person</th>\n//             <th>Location</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n        // <tbody>\n        //   {clients.length > 0 ? (\n        //     clients.map((client) => (\n        //       <tr key={client._id}>\n                // <td>\n                //   <Link to={`/client/${client._id}`}>{client.client_name}</Link>\n                // </td>\n        //         <td>{client.industry}</td>\n        //         <td>{client.status}</td>\n        //         <td>{client.email}</td>\n        //         <td>{client.phone}</td>\n        //         <td>{client.contact_person}</td>\n        //         <td>\n        //           {`${client.address.street}, ${client.address.city}, ${client.address.state}, ${client.address.postal_code}, ${client.address.country}`}\n        //         </td>\n        //         <td>\n        //           <button onClick={() => handleEdit(client._id)}>Edit</button>\n        //           <button onClick={() => handleDelete(client._id)}>Delete</button>\n        //         </td>\n        //       </tr>\n        //     ))\n        //   ) : (\n        //     <tr>\n        //       <td colSpan=\"6\">No clients found</td>\n        //     </tr>\n        //   )}\n        // </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Dashboard.css';\nimport { Link } from 'react-router-dom';\n\nconst Dashboard = () => {\n  const [clients, setClients] = useState([]);\n  const [search, setSearch] = useState('');\n  const [filters, setFilters] = useState({\n    region: '',\n    industry: '',\n    status: '',\n  });\n  const [sortOrder, setSortOrder] = useState('asc');\n  const [sortColumn, setSortColumn] = useState('client_name');\n  const [authToken, setAuthToken] = useState(localStorage.getItem('token') || '');\n  const [editingClient, setEditingClient] = useState(null); // Client being edited\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    fetchClients();\n  }, [filters, sortColumn, sortOrder]);\n\n  const fetchClients = () => {\n    const query = new URLSearchParams({\n      search,\n      region: filters.region,\n      industry: filters.industry,\n      status: filters.status,\n      sortColumn,\n      sortOrder,\n    });\n\n    axios\n      .get(`http://localhost:5005/api/users?${query.toString()}`, {\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n        },\n      })\n      .then((response) => {\n        setClients(response.data);\n      })\n      .catch((err) => {\n        console.error('Error fetching clients:', err);\n      });\n  };\n\n  const handleSearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const handleFilterChange = (e) => {\n    const { name, value } = e.target;\n    setFilters({ ...filters, [name]: value });\n  };\n\n  const handleSort = (column) => {\n    const newSortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n    setSortOrder(newSortOrder);\n    setSortColumn(column);\n  };\n\n  const handleEditClick = (client) => {\n    setEditingClient(client); // Set the client for editing\n  };\n\n  const handleEditChange = (e) => {\n    const { name, value } = e.target;\n    setEditingClient({ ...editingClient, [name]: value });\n  };\n\n  const handleAddressChange = (e) => {\n    const { name, value } = e.target;\n    setEditingClient({\n      ...editingClient,\n      address: {\n        ...editingClient.address,\n        [name]: value,\n      },\n    });\n  };\n\n  const handleEditSubmit = async () => {\n    try {\n      await axios.put(\n        `http://localhost:5005/api/users/${editingClient._id}`,\n        editingClient,\n        {\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n          },\n        }\n      );\n      // Update client list with the new details\n      setClients(\n        clients.map((client) =>\n          client._id === editingClient._id ? editingClient : client\n        )\n      );\n      setEditingClient(null); // Close the editing form\n    } catch (err) {\n      console.error('Error updating client:', err);\n      setError('Failed to update client. Please try again.');\n    }\n  };\n\n  const handleDelete = (clientId) => {\n    axios\n      .delete(`http://localhost:5005/api/users/${clientId}`, {\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n        },\n      })\n      .then(() => {\n        setClients(clients.filter((client) => client._id !== clientId));\n        alert('Client deleted successfully');\n      })\n      .catch((err) => {\n        console.error('Error deleting client:', err);\n      });\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <h1>Client Dashboard</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Search clients...\"\n        value={search}\n        onChange={handleSearch}\n      />\n\n      {/* Filter Options */}\n      <select name=\"region\" onChange={handleFilterChange} value={filters.region}>\n        <option value=\"\">All Regions</option>\n        <option value=\"North America\">North America</option>\n        <option value=\"Europe\">Europe</option>\n        <option value=\"Asia\">Asia</option>\n      </select>\n      <select\n        name=\"industry\"\n        onChange={handleFilterChange}\n        value={filters.industry}\n      >\n        <option value=\"\">All Industries</option>\n        <option value=\"Finance\">Finance</option>\n        <option value=\"Technology\">Technology</option>\n        <option value=\"Healthcare\">Healthcare</option>\n      </select>\n      <select\n        name=\"status\"\n        onChange={handleFilterChange}\n        value={filters.status}\n      >\n        <option value=\"\">All Statuses</option>\n        <option value=\"Active\">Active</option>\n        <option value=\"Inactive\">Inactive</option>\n      </select>\n\n      <table>\n        <thead>\n          <tr>\n            <th onClick={() => handleSort('client_name')}>Client Name</th>\n            <th onClick={() => handleSort('industry')}>Industry</th>\n            <th onClick={() => handleSort('status')}>Status</th>\n            <th>Email</th>\n            <th>Email</th>\n            <th>Phone</th>\n            <th>Contact Person</th>\n          </tr>\n        </thead>\n        <tbody>\n          {clients.map((client) => (\n            <tr key={client._id}>\n                <td>\n                  <Link to={`/client/${client._id}`}>{client.client_name}</Link>\n                </td>\n              <td>{client.client_name}</td>\n              \n              <td>{client.status}</td>\n              <td>{client.industry}</td>\n              <td>{client.email}</td>\n              <td>{client.phone}</td>\n              <td>{client.contact_person}</td>\n              <td>\n                <button onClick={() => handleEditClick(client)}>Edit</button>\n                <button onClick={() => handleDelete(client._id)}>Delete</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      {editingClient && (\n        <div className=\"edit-modal\">\n          <h3>Edit Client</h3>\n          <input\n            type=\"text\"\n            name=\"client_name\"\n            value={editingClient.client_name}\n            onChange={handleEditChange}\n            required\n          />\n          <input\n            type=\"text\"\n            name=\"contact_person\"\n            value={editingClient.contact_person}\n            onChange={handleEditChange}\n            required\n          />\n          <input\n            type=\"text\"\n            name=\"email\"\n            value={editingClient.email}\n            onChange={handleEditChange}\n            required\n          />\n          <input\n            type=\"text\"\n            name=\"phone\"\n            value={editingClient.phone}\n            onChange={handleEditChange}\n            required\n          />\n          <input\n            type=\"text\"\n            name=\"industry\"\n            value={editingClient.industry}\n            onChange={handleEditChange}\n            required\n          />\n          <h3>Address</h3>\n          <input\n            type=\"text\"\n            name=\"street\"\n            value={editingClient.address?.street}\n            onChange={handleAddressChange}\n          />\n          <input\n            type=\"text\"\n            name=\"city\"\n            value={editingClient.address?.city}\n            onChange={handleAddressChange}\n          />\n          <input\n            type=\"text\"\n            name=\"state\"\n            value={editingClient.address?.state}\n            onChange={handleAddressChange}\n          />\n          <input\n            type=\"text\"\n            name=\"postal_code\"\n            value={editingClient.address?.postal_code}\n            onChange={handleAddressChange}\n          />\n          <input\n            type=\"text\"\n            name=\"country\"\n            value={editingClient.address?.country}\n            onChange={handleAddressChange}\n          />\n          <button onClick={handleEditSubmit}>Save</button>\n          <button onClick={() => setEditingClient(null)}>Cancel</button>\n          {error && <p>{error}</p>}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}