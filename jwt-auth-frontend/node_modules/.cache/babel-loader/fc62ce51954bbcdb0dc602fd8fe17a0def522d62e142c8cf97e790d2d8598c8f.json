{"ast":null,"code":"var _jsxFileName = \"/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/ClientProfile.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n\n// const ClientProfile = () => {\n//   const { clientId } = useParams(); // Get client ID from the URL\n//   const [client, setClient] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     // Fetch client data from the backend\n//     const fetchClient = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5005/api/clients/${clientId}`);\n//         setClient(response.data); // Set the client data\n//         setLoading(false);\n//       } catch (err) {\n//         console.error(\"Error fetching client data:\", err);\n//         setError(\"Failed to load client details.\");\n//         setLoading(false);\n//       }\n//     };\n//     fetchClient();\n//   }, [clientId]);\n\n//   if (loading) {\n//     return <div>Loading...</div>;\n//   }\n\n//   if (error) {\n//     return <div>{error}</div>;\n//   }\n\n//   return (\n//     <div className=\"client-profile\">\n//       <h1>Client Profile: {client.client_name}</h1>\n//       <p><strong>Industry:</strong> {client.industry}</p>\n//       <p><strong>Status:</strong> {client.status}</p>\n//       <p><strong>Contact Person:</strong> {client.contact_person}</p>\n//       <p><strong>Location:</strong> {`${client.address.street}, ${client.address.city}, ${client.address.state}, ${client.address.postal_code}, ${client.address.country}`}</p>\n//       <p><strong>Description:</strong> {client.description || 'No description available'}</p>\n//       <p><strong>Additional Info:</strong> {client.additional_info || 'No additional info available'}</p>\n//       {/* You can add more fields here as needed */}\n//     </div>\n//   );\n// };\n\n// export default ClientProfile;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClientProfile = () => {\n  _s();\n  const {\n    clientId\n  } = useParams(); // Get the clientId from the URL\n  const [client, setClient] = useState(null);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchClientDetails = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5005/api/client/${clientId}`);\n        setClient(response.data);\n      } catch (err) {\n        setError('Failed to load client details.');\n        console.error(err);\n      }\n    };\n    if (clientId) {\n      fetchClientDetails();\n    }\n  }, [clientId]); // Run this effect when clientId changes\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 12\n    }, this);\n  }\n  if (!client) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Client Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Client Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 10\n      }, this), \" \", client.client_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Contact Person:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 10\n      }, this), \" \", client.contact_person]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Industry:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 10\n      }, this), \" \", client.industry]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 10\n      }, this), \" \", client.status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Region:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 10\n      }, this), \" \", client.region]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [client.address.street, \", \", client.address.city, \", \", client.address.state]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [client.address.postal_code, \", \", client.address.country]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(ClientProfile, \"NgRsvkC4YnAjBzk1Z0OIT+eyT28=\", false, function () {\n  return [useParams];\n});\n_c = ClientProfile;\nexport default ClientProfile;\nvar _c;\n$RefreshReg$(_c, \"ClientProfile\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","jsxDEV","_jsxDEV","ClientProfile","_s","clientId","client","setClient","error","setError","fetchClientDetails","response","get","data","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","client_name","contact_person","industry","status","region","address","street","city","state","postal_code","country","_c","$RefreshReg$"],"sources":["/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/ClientProfile.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n\n// const ClientProfile = () => {\n//   const { clientId } = useParams(); // Get client ID from the URL\n//   const [client, setClient] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     // Fetch client data from the backend\n//     const fetchClient = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5005/api/clients/${clientId}`);\n//         setClient(response.data); // Set the client data\n//         setLoading(false);\n//       } catch (err) {\n//         console.error(\"Error fetching client data:\", err);\n//         setError(\"Failed to load client details.\");\n//         setLoading(false);\n//       }\n//     };\n//     fetchClient();\n//   }, [clientId]);\n\n//   if (loading) {\n//     return <div>Loading...</div>;\n//   }\n\n//   if (error) {\n//     return <div>{error}</div>;\n//   }\n\n//   return (\n//     <div className=\"client-profile\">\n//       <h1>Client Profile: {client.client_name}</h1>\n//       <p><strong>Industry:</strong> {client.industry}</p>\n//       <p><strong>Status:</strong> {client.status}</p>\n//       <p><strong>Contact Person:</strong> {client.contact_person}</p>\n//       <p><strong>Location:</strong> {`${client.address.street}, ${client.address.city}, ${client.address.state}, ${client.address.postal_code}, ${client.address.country}`}</p>\n//       <p><strong>Description:</strong> {client.description || 'No description available'}</p>\n//       <p><strong>Additional Info:</strong> {client.additional_info || 'No additional info available'}</p>\n//       {/* You can add more fields here as needed */}\n//     </div>\n//   );\n// };\n\n// export default ClientProfile;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\n\nconst ClientProfile = () => {\n  const { clientId } = useParams(); // Get the clientId from the URL\n  const [client, setClient] = useState(null);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchClientDetails = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5005/api/client/${clientId}`);\n        setClient(response.data);\n      } catch (err) {\n        setError('Failed to load client details.');\n        console.error(err);\n      }\n    };\n\n    if (clientId) {\n      fetchClientDetails();\n    }\n  }, [clientId]); // Run this effect when clientId changes\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  if (!client) {\n    return <p>Loading...</p>;\n  }\n\n  return (\n    <div>\n      <h1>Client Profile</h1>\n      <p><strong>Client Name:</strong> {client.client_name}</p>\n      <p><strong>Contact Person:</strong> {client.contact_person}</p>\n      <p><strong>Industry:</strong> {client.industry}</p>\n      <p><strong>Status:</strong> {client.status}</p>\n      <p><strong>Region:</strong> {client.region}</p>\n      <h3>Address</h3>\n      <p>{client.address.street}, {client.address.city}, {client.address.state}</p>\n      <p>{client.address.postal_code}, {client.address.country}</p>\n    </div>\n  );\n};\n\nexport default ClientProfile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}