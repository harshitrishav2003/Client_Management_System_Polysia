{"ast":null,"code":"var _jsxFileName = \"/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/Header.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// const Header = () => {\n//   const navigate = useNavigate();\n//   const token = localStorage.getItem('jwtToken');\n//   const isAuthenticated = !!token; // Check if the user is authenticated\n\n//   // Decode the token to check the role (assuming the token has the role info)\n//   const decodedToken = token ? JSON.parse(atob(token.split('.')[1])) : null;\n//   const isClient = decodedToken?.role === 'client'; // Check if the user is a client\n\n//   const handleLogout = () => {\n//     localStorage.removeItem('jwtToken'); // Remove token from localStorage\n//     navigate('/'); // Redirect to Login page after logout\n//   };\n\n//   return (\n//     <header style={headerStyle}>\n//       <div>\n//         <h1>Client Management System</h1>\n//       </div>\n//       <nav>\n//         {isAuthenticated ? (\n//           <>\n//             {isClient ? (\n//               <>\n//                 <button onClick={() => navigate(`/client/${decodedToken.clientId}`)} style={linkStyle}>\n//                   Client Profile\n//                 </button>\n//                 <button onClick={() => navigate(`/contract-management`)} style={linkStyle}>\n//                   Contract Management\n//                 </button>\n//                 <button onClick={() => navigate(`/activity-tracking`)} style={linkStyle}>\n//                   Activity Tracking\n//                 </button>\n//               </>\n//             ) : (\n//               <button onClick={() => navigate(`/dashboard`)} style={linkStyle}>\n//                 Dashboard\n//               </button>\n//             )}\n//             <button onClick={handleLogout} style={linkStyle}>Logout</button>\n//           </>\n//         ) : (\n//           <button onClick={() => navigate('/login')} style={linkStyle}>\n//             Login\n//           </button>\n//         )}\n//       </nav>\n//     </header>\n//   );\n// };\n\n// const headerStyle = {\n//   backgroundColor: '#000',\n//   color: '#fff',\n//   padding: '10px 20px',\n//   display: 'flex',\n//   justifyContent: 'space-between',\n//   alignItems: 'center',\n// };\n\n// const linkStyle = {\n//   color: '#fff',\n//   textDecoration: 'none',\n//   fontSize: '16px',\n//   margin: '0 10px',\n// };\n\n// export default Header;\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  const navigate = useNavigate();\n  const token = localStorage.getItem('jwtToken');\n  const isAuthenticated = !!token; // Check if the user is authenticated\n\n  // Decode the token to check the role (assuming the token has the role info)\n  const decodedToken = token ? JSON.parse(atob(token.split('.')[1])) : null;\n  const isClient = (decodedToken === null || decodedToken === void 0 ? void 0 : decodedToken.role) === 'client'; // Check if the user is a client\n\n  const handleLogout = () => {\n    localStorage.removeItem('jwtToken'); // Remove token from localStorage\n    navigate('/'); // Redirect to home page after logout\n  };\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    style: headerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Client Management System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: isAuthenticated ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [isClient ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate(`/client/${decodedToken.clientId}`),\n            style: linkStyle,\n            children: \"Client Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate(`/contract-management`),\n            style: linkStyle,\n            children: \"Contract Management\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate(`/activity-tracking`),\n            style: linkStyle,\n            children: \"Activity Tracking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate(`/dashboard`),\n          style: linkStyle,\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          style: linkStyle,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/login'),\n          style: linkStyle,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/admin-login'),\n          style: linkStyle,\n          children: \"Login as Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/client-login'),\n          style: linkStyle,\n          children: \"Login as Client\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Header;\nconst headerStyle = {\n  backgroundColor: '#000',\n  color: '#fff',\n  padding: '10px 20px',\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center'\n};\nconst linkStyle = {\n  color: '#fff',\n  textDecoration: 'none',\n  fontSize: '16px',\n  margin: '0 10px'\n};\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Header","_s","navigate","token","localStorage","getItem","isAuthenticated","decodedToken","JSON","parse","atob","split","isClient","role","handleLogout","removeItem","style","headerStyle","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","clientId","linkStyle","_c","backgroundColor","color","padding","display","justifyContent","alignItems","textDecoration","fontSize","margin","$RefreshReg$"],"sources":["/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/Header.js"],"sourcesContent":["\n// import React from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// const Header = () => {\n//   const navigate = useNavigate();\n//   const token = localStorage.getItem('jwtToken');\n//   const isAuthenticated = !!token; // Check if the user is authenticated\n\n//   // Decode the token to check the role (assuming the token has the role info)\n//   const decodedToken = token ? JSON.parse(atob(token.split('.')[1])) : null;\n//   const isClient = decodedToken?.role === 'client'; // Check if the user is a client\n\n//   const handleLogout = () => {\n//     localStorage.removeItem('jwtToken'); // Remove token from localStorage\n//     navigate('/'); // Redirect to Login page after logout\n//   };\n\n//   return (\n//     <header style={headerStyle}>\n//       <div>\n//         <h1>Client Management System</h1>\n//       </div>\n//       <nav>\n//         {isAuthenticated ? (\n//           <>\n//             {isClient ? (\n//               <>\n//                 <button onClick={() => navigate(`/client/${decodedToken.clientId}`)} style={linkStyle}>\n//                   Client Profile\n//                 </button>\n//                 <button onClick={() => navigate(`/contract-management`)} style={linkStyle}>\n//                   Contract Management\n//                 </button>\n//                 <button onClick={() => navigate(`/activity-tracking`)} style={linkStyle}>\n//                   Activity Tracking\n//                 </button>\n//               </>\n//             ) : (\n//               <button onClick={() => navigate(`/dashboard`)} style={linkStyle}>\n//                 Dashboard\n//               </button>\n//             )}\n//             <button onClick={handleLogout} style={linkStyle}>Logout</button>\n//           </>\n//         ) : (\n//           <button onClick={() => navigate('/login')} style={linkStyle}>\n//             Login\n//           </button>\n//         )}\n//       </nav>\n//     </header>\n//   );\n// };\n\n// const headerStyle = {\n//   backgroundColor: '#000',\n//   color: '#fff',\n//   padding: '10px 20px',\n//   display: 'flex',\n//   justifyContent: 'space-between',\n//   alignItems: 'center',\n// };\n\n// const linkStyle = {\n//   color: '#fff',\n//   textDecoration: 'none',\n//   fontSize: '16px',\n//   margin: '0 10px',\n// };\n\n// export default Header;\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst Header = () => {\n  const navigate = useNavigate();\n  const token = localStorage.getItem('jwtToken');\n  const isAuthenticated = !!token; // Check if the user is authenticated\n\n  // Decode the token to check the role (assuming the token has the role info)\n  const decodedToken = token ? JSON.parse(atob(token.split('.')[1])) : null;\n  const isClient = decodedToken?.role === 'client'; // Check if the user is a client\n\n  const handleLogout = () => {\n    localStorage.removeItem('jwtToken'); // Remove token from localStorage\n    navigate('/'); // Redirect to home page after logout\n  };\n\n  return (\n    <header style={headerStyle}>\n      <div>\n        <h1>Client Management System</h1>\n      </div>\n      <nav>\n        {isAuthenticated ? (\n          <>\n            {isClient ? (\n              <>\n                <button onClick={() => navigate(`/client/${decodedToken.clientId}`)} style={linkStyle}>\n                  Client Profile\n                </button>\n                <button onClick={() => navigate(`/contract-management`)} style={linkStyle}>\n                  Contract Management\n                </button>\n                <button onClick={() => navigate(`/activity-tracking`)} style={linkStyle}>\n                  Activity Tracking\n                </button>\n              </>\n            ) : (\n              <button onClick={() => navigate(`/dashboard`)} style={linkStyle}>\n                Dashboard\n              </button>\n            )}\n            <button onClick={handleLogout} style={linkStyle}>Logout</button>\n          </>\n        ) : (\n          <>\n            <button onClick={() => navigate('/login')} style={linkStyle}>\n              Login\n            </button>\n            <button onClick={() => navigate('/admin-login')} style={linkStyle}>\n              Login as Admin\n            </button>\n            <button onClick={() => navigate('/client-login')} style={linkStyle}>\n              Login as Client\n            </button>\n          </>\n        )}\n      </nav>\n    </header>\n  );\n};\n\nconst headerStyle = {\n  backgroundColor: '#000',\n  color: '#fff',\n  padding: '10px 20px',\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n};\n\nconst linkStyle = {\n  color: '#fff',\n  textDecoration: 'none',\n  fontSize: '16px',\n  margin: '0 10px',\n};\n\nexport default Header;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}