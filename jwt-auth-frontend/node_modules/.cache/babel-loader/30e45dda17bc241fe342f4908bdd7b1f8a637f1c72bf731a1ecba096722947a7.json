{"ast":null,"code":"var _jsxFileName = \"/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './Dashboard.css';\n// import PendingUsers from \"../components/PendingUser\";\n// import { Link } from 'react-router-dom';\n\n// const Dashboard = () => {\n//   const [clients, setClients] = useState([]);\n//   const [search, setSearch] = useState('');\n//   const [filters, setFilters] = useState({\n//     region: '',\n//     industry: '',\n//     status: '',\n//   });\n//   const [sortOrder, setSortOrder] = useState('asc');\n//   const [sortColumn, setSortColumn] = useState('client_name');\n//   const [authToken, setAuthToken] = useState(localStorage.getItem('token') || '');\n//   const [editingClient, setEditingClient] = useState(null); // Client being edited\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     fetchClients();\n//   }, [filters, sortColumn, sortOrder]);\n\n//   const fetchClients = () => {\n//     const query = new URLSearchParams({\n//       search,\n//       region: filters.region,\n//       industry: filters.industry,\n//       status: filters.status,\n//       sortColumn,\n//       sortOrder,\n//     });\n\n//     axios\n//       .get(`http://localhost:5005/api/users?${query.toString()}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then((response) => {\n//         setClients(response.data);\n//       })\n//       .catch((err) => {\n//         console.error('Error fetching clients:', err);\n//       });\n//   };\n\n//   const handleSearch = (e) => {\n//     setSearch(e.target.value);\n//   };\n\n//   const handleFilterChange = (e) => {\n//     const { name, value } = e.target;\n//     setFilters({ ...filters, [name]: value });\n//   };\n\n//   const handleSort = (column) => {\n//     const newSortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n//     setSortOrder(newSortOrder);\n//     setSortColumn(column);\n//   };\n\n// const handleEditClick = (client) => {\n//   setEditingClient(client); // Set the client for editing\n// };\n\n// const handleEditChange = (e) => {\n//   const { name, value } = e.target;\n//   setEditingClient({ ...editingClient, [name]: value });\n// };\n\n//   const handleAddressChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditingClient({\n//       ...editingClient,\n//       address: {\n//         ...editingClient.address,\n//         [name]: value,\n//       },\n//     });\n//   };\n\n// const handleEditSubmit = async () => {\n//   try {\n//     await axios.put(\n//       `http://localhost:5005/api/users/${editingClient._id}`,\n//       editingClient,\n//       {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       }\n//     );\n//     // Update client list with the new details\n//     setClients(\n//       clients.map((client) =>\n//         client._id === editingClient._id ? editingClient : client\n//       )\n//     );\n//     setEditingClient(null); // Close the editing form\n//   } catch (err) {\n//     console.error('Error updating client:', err);\n//     setError('Failed to update client. Please try again.');\n//   }\n// };\n\n//   const handleDelete = (clientId) => {\n//     axios\n//       .delete(`http://localhost:5005/api/users/${clientId}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then(() => {\n//         setClients(clients.filter((client) => client._id !== clientId));\n//         alert('Client deleted successfully');\n//       })\n//       .catch((err) => {\n//         console.error('Error deleting client:', err);\n//       });\n//   };\n\n//   return (\n//     <div className=\"dashboard\">\n//       {/* <h1 className='Dash'>Client Dashboard</h1> */}\n//       <PendingUsers />\n//       <h1 className='Dash'>Clients</h1>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Search clients...\"\n//         value={search}\n//         onChange={handleSearch}\n//       />\n\n//       {/* Filter Options */}\n//       <select name=\"region\" onChange={handleFilterChange} value={filters.region}>\n//         <option value=\"\">All Regions</option>\n//         <option value=\"North America\">North America</option>\n//         <option value=\"Europe\">Europe</option>\n//         <option value=\"Asia\">Asia</option>\n//       </select>\n//       <select\n//         name=\"industry\"\n//         onChange={handleFilterChange}\n//         value={filters.industry}\n//       >\n//         <option value=\"\">All Industries</option>\n//         <option value=\"Finance\">Finance</option>\n//         <option value=\"Technology\">Technology</option>\n//         <option value=\"Healthcare\">Healthcare</option>\n//       </select>\n//       <select\n//         name=\"status\"\n//         onChange={handleFilterChange}\n//         value={filters.status}\n//       >\n//         <option value=\"\">All Statuses</option>\n//         <option value=\"Active\">Active</option>\n//         <option value=\"Inactive\">Inactive</option>\n//       </select>\n\n//       <table>\n//         <thead>\n//           <tr>\n//             <th onClick={() => handleSort('client_name')}>Client Name</th>\n//             <th onClick={() => handleSort('status')}>Status</th>\n//             <th onClick={() => handleSort('industry')}>Industry</th>\n\n//             <th>Email</th>\n//             <th>Phone</th>\n//             <th>Contact Person</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {clients.map((client) => (\n//             <tr key={client._id}>\n//                 <td>\n//                   <Link to={`/client/${client._id}`}>{client.client_name}</Link>\n//                 </td>\n\n//             <td>{client.status}</td>\n//               <td>{client.industry}</td>\n//               <td>{client.email}</td>\n//               <td>{client.phone}</td>\n//               <td>{client.contact_person}</td>\n//               <td>\n//                 <button onClick={() => handleEditClick(client)}>Edit</button>\n//                 <button onClick={() => handleDelete(client._id)}>Delete</button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n\n//       {editingClient && (\n//         <div className=\"edit-modal\">\n//           <h3>Edit Client</h3>\n//           <input\n//             type=\"text\"\n//             name=\"client_name\"\n//             value={editingClient.client_name}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"contact_person\"\n//             value={editingClient.contact_person}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"email\"\n//             value={editingClient.email}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"phone\"\n//             value={editingClient.phone}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"industry\"\n//             value={editingClient.industry}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <h3>Address</h3>\n//           <input\n//             type=\"text\"\n//             name=\"street\"\n//             value={editingClient.address?.street}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"city\"\n//             value={editingClient.address?.city}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"state\"\n//             value={editingClient.address?.state}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"postal_code\"\n//             value={editingClient.address?.postal_code}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"country\"\n//             value={editingClient.address?.country}\n//             onChange={handleAddressChange}\n//           />\n//           <button onClick={handleEditSubmit}>Save</button>\n//           <button onClick={() => setEditingClient(null)}>Cancel</button>\n//           {error && <p>{error}</p>}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Table, Input, Select, Button, Modal, Form, message, Space } from 'antd';\nimport { EditOutlined, DeleteOutlined, CheckCircleOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport PendingUsers from \"../components/PendingUser\";\nimport { Link } from 'react-router-dom';\nimport { parse } from 'json2csv'; // Import json2csv\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Search\n} = Input;\nconst {\n  Option\n} = Select;\nconst Dashboard = () => {\n  _s();\n  const [clients, setClients] = useState([]);\n  const [search, setSearch] = useState('');\n  const [filters, setFilters] = useState({\n    region: '',\n    industry: '',\n    status: ''\n  });\n  const [sortOrder, setSortOrder] = useState('asc');\n  const [sortColumn, setSortColumn] = useState('client_name');\n  const [authToken] = useState(localStorage.getItem('token') || '');\n  const [editingClient, setEditingClient] = useState(null);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [form] = Form.useForm();\n  useEffect(() => {\n    fetchClients();\n  }, [filters, sortColumn, sortOrder]);\n  const fetchClients = () => {\n    const query = new URLSearchParams({\n      search,\n      ...filters,\n      sortColumn,\n      sortOrder\n    });\n    axios.get(`http://localhost:5005/api/users?${query.toString()}`, {\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    }).then(response => {\n      const filteredClients = response.data.filter(client => client.isApproved === \"approved\" && client.role === \"client\");\n      setClients(filteredClients);\n    }).catch(err => console.error('Error fetching clients:', err));\n  };\n  const handleFilterChange = (name, value) => {\n    setFilters({\n      ...filters,\n      [name]: value\n    });\n  };\n  const handleSort = column => {\n    setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n    setSortColumn(column);\n  };\n  const handleDownloadCSV = () => {\n    const clientData = clients.map(client => ({\n      client_name: client.client_name,\n      status: client.status,\n      industry: client.industry,\n      email: client.email,\n      phone: client.phone,\n      contact_person: client.contact_person,\n      region: client.region\n      // Include any additional fields you want in the CSV\n    }));\n    try {\n      const csv = parse(clientData);\n      const blob = new Blob([csv], {\n        type: 'text/csv'\n      });\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = 'clients_data.csv';\n      link.click();\n      window.URL.revokeObjectURL(url);\n    } catch (err) {\n      console.error('Error generating CSV:', err);\n    }\n  };\n\n  // Edit client\n  const handleEditClick = record => {\n    setEditingClient(record);\n    form.setFieldsValue({\n      client_name: record.client_name,\n      contact_person: record.contact_person,\n      email: record.email,\n      phone: record.phone,\n      industry: record.industry\n    });\n    setIsModalVisible(true);\n  };\n\n  // Delete client\n  const handleDelete = clientId => {\n    Modal.confirm({\n      title: 'Are you sure you want to delete this client?',\n      onOk: () => {\n        axios.delete(`http://localhost:5005/api/clients/${clientId}`, {\n          headers: {\n            Authorization: `Bearer ${authToken}`\n          }\n        }).then(() => {\n          message.success('Client deleted successfully');\n          fetchClients(); // Refresh the client list\n        }).catch(err => {\n          console.error('Error deleting client:', err);\n          message.error('Failed to delete client');\n        });\n      }\n    });\n  };\n\n  // Submit the edit form\n  const handleEditSubmit = () => {\n    form.validateFields().then(values => {\n      axios.put(`http://localhost:5005/api/clients/${editingClient._id}`, values, {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      }).then(() => {\n        message.success('Client updated successfully');\n        setIsModalVisible(false);\n        fetchClients(); // Refresh the client list\n      }).catch(err => {\n        console.error('Error updating client:', err);\n        message.error('Failed to update client');\n      });\n    }).catch(err => {\n      console.log('Form validation failed:', err);\n    });\n  };\n  const columns = [{\n    title: 'Client Name',\n    dataIndex: 'client_name',\n    sorter: true,\n    render: (text, record) => /*#__PURE__*/_jsxDEV(Link, {\n      to: `/client/${record._id}`,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 95\n    }, this)\n  }, {\n    title: 'Status',\n    dataIndex: 'status',\n    sorter: true,\n    render: status => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [status === 'Active' ? /*#__PURE__*/_jsxDEV(CheckCircleOutlined, {\n        style: {\n          color: 'green',\n          marginRight: 5\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(CloseCircleOutlined, {\n        style: {\n          color: 'red',\n          marginRight: 5\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 13\n      }, this), status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 9\n    }, this)\n  }, {\n    title: 'Industry',\n    dataIndex: 'industry',\n    sorter: true\n  }, {\n    title: 'Email',\n    dataIndex: 'email'\n  }, {\n    title: 'Phone',\n    dataIndex: 'phone'\n  }, {\n    title: 'Contact Person',\n    dataIndex: 'contact_person'\n  }, {\n    title: 'Action',\n    render: (_, record) => /*#__PURE__*/_jsxDEV(Space, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        icon: /*#__PURE__*/_jsxDEV(EditOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 40\n        }, this),\n        onClick: () => handleEditClick(record)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"danger\",\n        icon: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 39\n        }, this),\n        onClick: () => handleDelete(record._id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"default\",\n        onClick: handleDownloadCSV,\n        children: \"Download CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 9\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(PendingUsers, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          margin: '0 auto',\n          fontSize: '24px',\n          fontWeight: 'bold'\n        },\n        children: \"Clients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Space, {\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        placeholder: \"Search clients...\",\n        onChange: e => setSearch(e.target.value),\n        enterButton: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        placeholder: \"Region\",\n        onChange: value => handleFilterChange('region', value),\n        children: [/*#__PURE__*/_jsxDEV(Option, {\n          value: \"\",\n          children: \"All Regions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"North America\",\n          children: \"North America\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"Europe\",\n          children: \"Europe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"Asia\",\n          children: \"Asia\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        placeholder: \"Industry\",\n        onChange: value => handleFilterChange('industry', value),\n        children: [/*#__PURE__*/_jsxDEV(Option, {\n          value: \"\",\n          children: \"All Industries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"Finance\",\n          children: \"Finance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"Technology\",\n          children: \"Technology\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"Healthcare\",\n          children: \"Healthcare\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        placeholder: \"Status\",\n        onChange: value => handleFilterChange('status', value),\n        children: [/*#__PURE__*/_jsxDEV(Option, {\n          value: \"\",\n          children: \"All Statuses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"Active\",\n          children: \"Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"Inactive\",\n          children: \"Inactive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: clients,\n      rowKey: \"_id\",\n      onChange: (pagination, filters, sorter) => handleSort(sorter.columnKey)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Edit Client\",\n      visible: isModalVisible,\n      onOk: handleEditSubmit,\n      onCancel: () => setIsModalVisible(false),\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        form: form,\n        layout: \"vertical\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"client_name\",\n          label: \"Client Name\",\n          rules: [{\n            required: true,\n            message: 'Client name is required'\n          }],\n          children: [\" \", /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 127\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"contact_person\",\n          label: \"Contact Person\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 68\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"email\",\n          label: \"Email\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(Input, {\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 50\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"phone\",\n          label: \"Phone\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 50\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"industry\",\n          label: \"Industry\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 56\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 442,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"s8W8AzXzyBKbiGWDwcmzQ1yXSwY=\", false, function () {\n  return [Form.useForm];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","Table","Input","Select","Button","Modal","Form","message","Space","EditOutlined","DeleteOutlined","CheckCircleOutlined","CloseCircleOutlined","PendingUsers","Link","parse","jsxDEV","_jsxDEV","Search","Option","Dashboard","_s","clients","setClients","search","setSearch","filters","setFilters","region","industry","status","sortOrder","setSortOrder","sortColumn","setSortColumn","authToken","localStorage","getItem","editingClient","setEditingClient","isModalVisible","setIsModalVisible","form","useForm","fetchClients","query","URLSearchParams","get","toString","headers","Authorization","then","response","filteredClients","data","filter","client","isApproved","role","catch","err","console","error","handleFilterChange","name","value","handleSort","column","handleDownloadCSV","clientData","map","client_name","email","phone","contact_person","csv","blob","Blob","type","url","window","URL","createObjectURL","link","document","createElement","href","download","click","revokeObjectURL","handleEditClick","record","setFieldsValue","handleDelete","clientId","confirm","title","onOk","delete","success","handleEditSubmit","validateFields","values","put","_id","log","columns","dataIndex","sorter","render","text","to","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","marginRight","_","icon","onClick","className","display","alignItems","justifyContent","width","margin","fontSize","fontWeight","placeholder","onChange","e","target","enterButton","dataSource","rowKey","pagination","columnKey","visible","onCancel","layout","Item","label","rules","required","_c","$RefreshReg$"],"sources":["/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/Dashboard.js"],"sourcesContent":["\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './Dashboard.css';\n// import PendingUsers from \"../components/PendingUser\";\n// import { Link } from 'react-router-dom';\n\n// const Dashboard = () => {\n//   const [clients, setClients] = useState([]);\n//   const [search, setSearch] = useState('');\n//   const [filters, setFilters] = useState({\n//     region: '',\n//     industry: '',\n//     status: '',\n//   });\n//   const [sortOrder, setSortOrder] = useState('asc');\n//   const [sortColumn, setSortColumn] = useState('client_name');\n//   const [authToken, setAuthToken] = useState(localStorage.getItem('token') || '');\n//   const [editingClient, setEditingClient] = useState(null); // Client being edited\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     fetchClients();\n//   }, [filters, sortColumn, sortOrder]);\n\n//   const fetchClients = () => {\n//     const query = new URLSearchParams({\n//       search,\n//       region: filters.region,\n//       industry: filters.industry,\n//       status: filters.status,\n//       sortColumn,\n//       sortOrder,\n//     });\n\n//     axios\n//       .get(`http://localhost:5005/api/users?${query.toString()}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then((response) => {\n//         setClients(response.data);\n//       })\n//       .catch((err) => {\n//         console.error('Error fetching clients:', err);\n//       });\n//   };\n\n//   const handleSearch = (e) => {\n//     setSearch(e.target.value);\n//   };\n\n//   const handleFilterChange = (e) => {\n//     const { name, value } = e.target;\n//     setFilters({ ...filters, [name]: value });\n//   };\n\n//   const handleSort = (column) => {\n//     const newSortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n//     setSortOrder(newSortOrder);\n//     setSortColumn(column);\n//   };\n\n  // const handleEditClick = (client) => {\n  //   setEditingClient(client); // Set the client for editing\n  // };\n\n  // const handleEditChange = (e) => {\n  //   const { name, value } = e.target;\n  //   setEditingClient({ ...editingClient, [name]: value });\n  // };\n\n//   const handleAddressChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditingClient({\n//       ...editingClient,\n//       address: {\n//         ...editingClient.address,\n//         [name]: value,\n//       },\n//     });\n//   };\n\n  // const handleEditSubmit = async () => {\n  //   try {\n  //     await axios.put(\n  //       `http://localhost:5005/api/users/${editingClient._id}`,\n  //       editingClient,\n  //       {\n  //         headers: {\n  //           Authorization: `Bearer ${authToken}`,\n  //         },\n  //       }\n  //     );\n  //     // Update client list with the new details\n  //     setClients(\n  //       clients.map((client) =>\n  //         client._id === editingClient._id ? editingClient : client\n  //       )\n  //     );\n  //     setEditingClient(null); // Close the editing form\n  //   } catch (err) {\n  //     console.error('Error updating client:', err);\n  //     setError('Failed to update client. Please try again.');\n  //   }\n  // };\n\n//   const handleDelete = (clientId) => {\n//     axios\n//       .delete(`http://localhost:5005/api/users/${clientId}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then(() => {\n//         setClients(clients.filter((client) => client._id !== clientId));\n//         alert('Client deleted successfully');\n//       })\n//       .catch((err) => {\n//         console.error('Error deleting client:', err);\n//       });\n//   };\n\n//   return (\n//     <div className=\"dashboard\">\n//       {/* <h1 className='Dash'>Client Dashboard</h1> */}\n//       <PendingUsers />\n//       <h1 className='Dash'>Clients</h1>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Search clients...\"\n//         value={search}\n//         onChange={handleSearch}\n//       />\n\n//       {/* Filter Options */}\n//       <select name=\"region\" onChange={handleFilterChange} value={filters.region}>\n//         <option value=\"\">All Regions</option>\n//         <option value=\"North America\">North America</option>\n//         <option value=\"Europe\">Europe</option>\n//         <option value=\"Asia\">Asia</option>\n//       </select>\n//       <select\n//         name=\"industry\"\n//         onChange={handleFilterChange}\n//         value={filters.industry}\n//       >\n//         <option value=\"\">All Industries</option>\n//         <option value=\"Finance\">Finance</option>\n//         <option value=\"Technology\">Technology</option>\n//         <option value=\"Healthcare\">Healthcare</option>\n//       </select>\n//       <select\n//         name=\"status\"\n//         onChange={handleFilterChange}\n//         value={filters.status}\n//       >\n//         <option value=\"\">All Statuses</option>\n//         <option value=\"Active\">Active</option>\n//         <option value=\"Inactive\">Inactive</option>\n//       </select>\n\n//       <table>\n//         <thead>\n//           <tr>\n//             <th onClick={() => handleSort('client_name')}>Client Name</th>\n//             <th onClick={() => handleSort('status')}>Status</th>\n//             <th onClick={() => handleSort('industry')}>Industry</th>\n            \n//             <th>Email</th>\n//             <th>Phone</th>\n//             <th>Contact Person</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {clients.map((client) => (\n//             <tr key={client._id}>\n//                 <td>\n//                   <Link to={`/client/${client._id}`}>{client.client_name}</Link>\n//                 </td>\n              \n              \n//             <td>{client.status}</td>\n//               <td>{client.industry}</td>\n//               <td>{client.email}</td>\n//               <td>{client.phone}</td>\n//               <td>{client.contact_person}</td>\n//               <td>\n//                 <button onClick={() => handleEditClick(client)}>Edit</button>\n//                 <button onClick={() => handleDelete(client._id)}>Delete</button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n\n//       {editingClient && (\n//         <div className=\"edit-modal\">\n//           <h3>Edit Client</h3>\n//           <input\n//             type=\"text\"\n//             name=\"client_name\"\n//             value={editingClient.client_name}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"contact_person\"\n//             value={editingClient.contact_person}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"email\"\n//             value={editingClient.email}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"phone\"\n//             value={editingClient.phone}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"industry\"\n//             value={editingClient.industry}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <h3>Address</h3>\n//           <input\n//             type=\"text\"\n//             name=\"street\"\n//             value={editingClient.address?.street}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"city\"\n//             value={editingClient.address?.city}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"state\"\n//             value={editingClient.address?.state}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"postal_code\"\n//             value={editingClient.address?.postal_code}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"country\"\n//             value={editingClient.address?.country}\n//             onChange={handleAddressChange}\n//           />\n//           <button onClick={handleEditSubmit}>Save</button>\n//           <button onClick={() => setEditingClient(null)}>Cancel</button>\n//           {error && <p>{error}</p>}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Table, Input, Select, Button, Modal, Form, message, Space } from 'antd';\nimport { EditOutlined, DeleteOutlined, CheckCircleOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport PendingUsers from \"../components/PendingUser\";\nimport { Link } from 'react-router-dom';\nimport { parse } from 'json2csv'; // Import json2csv\nimport './Dashboard.css';\n\nconst { Search } = Input;\nconst { Option } = Select;\n\nconst Dashboard = () => {\n  const [clients, setClients] = useState([]);\n  const [search, setSearch] = useState('');\n  const [filters, setFilters] = useState({ region: '', industry: '', status: '' });\n  const [sortOrder, setSortOrder] = useState('asc');\n  const [sortColumn, setSortColumn] = useState('client_name');\n  const [authToken] = useState(localStorage.getItem('token') || '');\n  const [editingClient, setEditingClient] = useState(null);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    fetchClients();\n  }, [filters, sortColumn, sortOrder]);\n\n  const fetchClients = () => {\n    const query = new URLSearchParams({ search, ...filters, sortColumn, sortOrder });\n    axios.get(`http://localhost:5005/api/users?${query.toString()}`, {\n      headers: { Authorization: `Bearer ${authToken}` },\n    })\n    .then((response) => {\n      const filteredClients = response.data.filter(client => client.isApproved === \"approved\" && client.role === \"client\");\n      setClients(filteredClients);\n    })\n    .catch((err) => console.error('Error fetching clients:', err));\n  };\n\n  const handleFilterChange = (name, value) => {\n    setFilters({ ...filters, [name]: value });\n  };\n\n  const handleSort = (column) => {\n    setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n    setSortColumn(column);\n  };\n\n  const handleDownloadCSV = () => {\n    const clientData = clients.map(client => ({\n      client_name: client.client_name,\n      status: client.status,\n      industry: client.industry,\n      email: client.email,\n      phone: client.phone,\n      contact_person: client.contact_person,\n      region: client.region,\n      // Include any additional fields you want in the CSV\n    }));\n\n    try {\n      const csv = parse(clientData);\n      const blob = new Blob([csv], { type: 'text/csv' });\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = 'clients_data.csv';\n      link.click();\n      window.URL.revokeObjectURL(url);\n    } catch (err) {\n      console.error('Error generating CSV:', err);\n    }\n  };\n\n  // Edit client\n  const handleEditClick = (record) => {\n    setEditingClient(record);\n    form.setFieldsValue({\n      client_name: record.client_name,\n      contact_person: record.contact_person,\n      email: record.email,\n      phone: record.phone,\n      industry: record.industry,\n    });\n    setIsModalVisible(true);\n  };\n\n  // Delete client\n  const handleDelete = (clientId) => {\n    Modal.confirm({\n      title: 'Are you sure you want to delete this client?',\n      onOk: () => {\n        axios.delete(`http://localhost:5005/api/clients/${clientId}`, {\n          headers: { Authorization: `Bearer ${authToken}` },\n        })\n        .then(() => {\n          message.success('Client deleted successfully');\n          fetchClients(); // Refresh the client list\n        })\n        .catch((err) => {\n          console.error('Error deleting client:', err);\n          message.error('Failed to delete client');\n        });\n      },\n    });\n  };\n\n  // Submit the edit form\n  const handleEditSubmit = () => {\n    form\n      .validateFields()\n      .then(values => {\n        axios.put(`http://localhost:5005/api/clients/${editingClient._id}`, values, {\n          headers: { Authorization: `Bearer ${authToken}` },\n        })\n        .then(() => {\n          message.success('Client updated successfully');\n          setIsModalVisible(false);\n          fetchClients(); // Refresh the client list\n        })\n        .catch((err) => {\n          console.error('Error updating client:', err);\n          message.error('Failed to update client');\n        });\n      })\n      .catch(err => {\n        console.log('Form validation failed:', err);\n      });\n  };\n\n  const columns = [\n    { title: 'Client Name', dataIndex: 'client_name', sorter: true, render: (text, record) => <Link to={`/client/${record._id}`}>{text}</Link> },\n    { \n      title: 'Status', \n      dataIndex: 'status', \n      sorter: true,\n      render: (status) => (\n        <span>\n          {status === 'Active' ? (\n            <CheckCircleOutlined style={{ color: 'green', marginRight: 5 }} />\n          ) : (\n            <CloseCircleOutlined style={{ color: 'red', marginRight: 5 }} />\n          )}\n          {status}\n        </span>\n      )\n    },\n    { title: 'Industry', dataIndex: 'industry', sorter: true },\n    { title: 'Email', dataIndex: 'email' },\n    { title: 'Phone', dataIndex: 'phone' },\n    { title: 'Contact Person', dataIndex: 'contact_person' },\n    { \n      title: 'Action', \n      render: (_, record) => (\n        <Space>\n          <Button type=\"primary\" icon={<EditOutlined />} onClick={() => handleEditClick(record)} />\n          <Button type=\"danger\" icon={<DeleteOutlined />} onClick={() => handleDelete(record._id)} />\n          <Button type=\"default\" onClick={handleDownloadCSV}>Download CSV</Button> {/* Download CSV button */}\n        </Space>\n      )\n    },\n  ];\n\n  return (\n    <div className=\"dashboard\">\n      <PendingUsers />\n      <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', width: '100%' }}>\n        <h2 style={{ margin: '0 auto', fontSize: '24px', fontWeight: 'bold' }}>Clients</h2>\n      </div>\n      <Space>\n        <Search placeholder=\"Search clients...\" onChange={e => setSearch(e.target.value)} enterButton />\n        <Select placeholder=\"Region\" onChange={value => handleFilterChange('region', value)}>\n          <Option value=\"\">All Regions</Option>\n          <Option value=\"North America\">North America</Option>\n          <Option value=\"Europe\">Europe</Option>\n          <Option value=\"Asia\">Asia</Option>\n        </Select>\n        <Select placeholder=\"Industry\" onChange={value => handleFilterChange('industry', value)}>\n          <Option value=\"\">All Industries</Option>\n          <Option value=\"Finance\">Finance</Option>\n          <Option value=\"Technology\">Technology</Option>\n          <Option value=\"Healthcare\">Healthcare</Option>\n        </Select>\n        <Select placeholder=\"Status\" onChange={value => handleFilterChange('status', value)}>\n          <Option value=\"\">All Statuses</Option>\n          <Option value=\"Active\">Active</Option>\n          <Option value=\"Inactive\">Inactive</Option>\n        </Select>\n      </Space>\n      <Table columns={columns} dataSource={clients} rowKey=\"_id\" onChange={(pagination, filters, sorter) => handleSort(sorter.columnKey)} />\n      <Modal title=\"Edit Client\" visible={isModalVisible} onOk={handleEditSubmit} onCancel={() => setIsModalVisible(false)}>\n        <Form form={form} layout=\"vertical\">\n          <Form.Item name=\"client_name\" label=\"Client Name\" rules={[{ required: true, message: 'Client name is required' }]}> <Input /> </Form.Item>\n          <Form.Item name=\"contact_person\" label=\"Contact Person\"> <Input /> </Form.Item>\n          <Form.Item name=\"email\" label=\"Email\"> <Input type=\"email\" /> </Form.Item>\n          <Form.Item name=\"phone\" label=\"Phone\"> <Input /> </Form.Item>\n          <Form.Item name=\"industry\" label=\"Industry\"> <Input /> </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":";;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEE;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}