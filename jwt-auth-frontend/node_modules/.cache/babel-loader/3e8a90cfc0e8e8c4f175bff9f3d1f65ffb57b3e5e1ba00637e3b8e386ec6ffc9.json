{"ast":null,"code":"var _jsxFileName = \"/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/ClientLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jwtDecode } from \"jwt-decode\"; // Corrected import statement\nimport LoginForm from \"./LoginForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClientLogin = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:5005/api/login\", {\n        email,\n        password\n      });\n      const {\n        token\n      } = response.data;\n      localStorage.setItem(\"jwtToken\", token);\n      const decodedToken = jwtDecode(token); // Corrected usage of jwtDecode\n      if (decodedToken.role === \"client\") {\n        window.location.href = `/client/${decodedToken.clientId}`;\n      } else {\n        setError(\"Unauthorized access.\");\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Invalid credentials. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(LoginForm, {\n    onSubmit: handleSubmit,\n    onChange: (e, field) => field === \"email\" ? setEmail(e.target.value) : setPassword(e.target.value),\n    email: email,\n    password: password,\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(ClientLogin, \"/oUdbphBttpIcUsa7P1v1069QkA=\");\n_c = ClientLogin;\nexport default ClientLogin;\nvar _c;\n$RefreshReg$(_c, \"ClientLogin\");","map":{"version":3,"names":["React","useState","axios","jwtDecode","LoginForm","jsxDEV","_jsxDEV","ClientLogin","_s","email","setEmail","password","setPassword","error","setError","handleSubmit","e","preventDefault","response","post","token","data","localStorage","setItem","decodedToken","role","window","location","href","clientId","err","_err$response","_err$response$data","message","onSubmit","onChange","field","target","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/ClientLogin.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jwtDecode } from \"jwt-decode\"; // Corrected import statement\nimport LoginForm from \"./LoginForm\";\n\nconst ClientLogin = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:5005/api/login\", { email, password });\n      const { token } = response.data;\n      localStorage.setItem(\"jwtToken\", token);\n\n      const decodedToken = jwtDecode(token); // Corrected usage of jwtDecode\n      if (decodedToken.role === \"client\") {\n        window.location.href = `/client/${decodedToken.clientId}`;\n      } else {\n        setError(\"Unauthorized access.\");\n      }\n    } catch (err) {\n      setError(err.response?.data?.message || \"Invalid credentials. Please try again.\");\n    }\n  };\n\n  return (\n    <LoginForm\n      onSubmit={handleSubmit}\n      onChange={(e, field) => (field === \"email\" ? setEmail(e.target.value) : setPassword(e.target.value))}\n      email={email}\n      password={password}\n      error={error}\n    />\n  );\n};\n\nexport default ClientLogin;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,YAAY,CAAC,CAAC;AACxC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMc,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,iCAAiC,EAAE;QAAEV,KAAK;QAAEE;MAAS,CAAC,CAAC;MACzF,MAAM;QAAES;MAAM,CAAC,GAAGF,QAAQ,CAACG,IAAI;MAC/BC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEH,KAAK,CAAC;MAEvC,MAAMI,YAAY,GAAGrB,SAAS,CAACiB,KAAK,CAAC,CAAC,CAAC;MACvC,IAAII,YAAY,CAACC,IAAI,KAAK,QAAQ,EAAE;QAClCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,WAAWJ,YAAY,CAACK,QAAQ,EAAE;MAC3D,CAAC,MAAM;QACLf,QAAQ,CAAC,sBAAsB,CAAC;MAClC;IACF,CAAC,CAAC,OAAOgB,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZlB,QAAQ,CAAC,EAAAiB,aAAA,GAAAD,GAAG,CAACZ,QAAQ,cAAAa,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcV,IAAI,cAAAW,kBAAA,uBAAlBA,kBAAA,CAAoBC,OAAO,KAAI,wCAAwC,CAAC;IACnF;EACF,CAAC;EAED,oBACE3B,OAAA,CAACF,SAAS;IACR8B,QAAQ,EAAEnB,YAAa;IACvBoB,QAAQ,EAAEA,CAACnB,CAAC,EAAEoB,KAAK,KAAMA,KAAK,KAAK,OAAO,GAAG1B,QAAQ,CAACM,CAAC,CAACqB,MAAM,CAACC,KAAK,CAAC,GAAG1B,WAAW,CAACI,CAAC,CAACqB,MAAM,CAACC,KAAK,CAAG;IACrG7B,KAAK,EAAEA,KAAM;IACbE,QAAQ,EAAEA,QAAS;IACnBE,KAAK,EAAEA;EAAM;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEN,CAAC;AAAClC,EAAA,CAhCID,WAAW;AAAAoC,EAAA,GAAXpC,WAAW;AAkCjB,eAAeA,WAAW;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}