{"ast":null,"code":"// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n// import './Register.css';\n// const ClientRegister = () => {\n//   const [formData, setFormData] = useState({\n//     client_name: '',\n//     contact_person: '',\n//     email: '',\n//     phone: '',\n//     industry: '',\n//     status: 'Active',\n//     address: {\n//       street: '',\n//       city: '',\n//       state: '',\n//       postal_code: '',\n//       country: '',\n//     },\n//     password: '',\n//   });\n//   const [error, setError] = useState('');\n//   const navigate = useNavigate();\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({\n//       ...formData,\n//       [name]: value,\n//     });\n//   };\n//   const handleAddressChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({\n//       ...formData,\n//       address: {\n//         ...formData.address,\n//         [name]: value,\n//       },\n//     });\n//   };\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await axios.post('http://localhost:5005/api/register', formData);\n//       navigate('/client-login'); // Redirect to login after successful registration\n//     } catch (err) {\n//       setError(err.response?.data?.message || 'Failed to register. Please try again.');\n//     }\n//   };\n//   return (\n//     <div className=\"register-container\">\n//     <form onSubmit={handleSubmit} className=\"register-card\">\n//       <h2>Client Registration</h2>\n//       {/* Client Details */}\n//       <div className=\"wrapper\">\n//         <label htmlFor=\"client_name\">Client Name</label>\n//         <input\n//           type=\"text\"\n//           id=\"client_name\"\n//           name=\"client_name\"\n//           placeholder=\"Client Name\"\n//           value={formData.client_name}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n//       <div className=\"wrapper\">\n//         <label htmlFor=\"contact_person\">Contact Person</label>\n//         <input\n//           type=\"text\"\n//           id=\"contact_person\"\n//           name=\"contact_person\"\n//           placeholder=\"Contact Person\"\n//           value={formData.contact_person}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n//       <div className=\"wrapper\">\n//         <label htmlFor=\"email\">Email</label>\n//         <input\n//           type=\"email\"\n//           id=\"email\"\n//           name=\"email\"\n//           placeholder=\"Email\"\n//           value={formData.email}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n//       <div className=\"wrapper\">\n//         <label htmlFor=\"phone\">Phone</label>\n//         <input\n//           type=\"text\"\n//           id=\"phone\"\n//           name=\"phone\"\n//           placeholder=\"Phone\"\n//           value={formData.phone}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n//       <div className=\"wrapper\">\n//         <label htmlFor=\"industry\">Industry</label>\n//         <input\n//           type=\"text\"\n//           id=\"industry\"\n//           name=\"industry\"\n//           placeholder=\"Industry\"\n//           value={formData.industry}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n//       {/* Address Section */}\n//       <h3>Address</h3>\n//       <div className=\"wrapper\">\n//         <label htmlFor=\"street\">Street</label>\n//         <input\n//           type=\"text\"\n//           id=\"street\"\n//           name=\"street\"\n//           placeholder=\"Street\"\n//           value={formData.address.street}\n//           onChange={handleAddressChange}\n//           required\n//         />\n//       </div>\n//       <div className=\"wrapper\">\n//         <label htmlFor=\"city\">City</label>\n//         <input\n//           type=\"text\"\n//           id=\"city\"\n//           name=\"city\"\n//           placeholder=\"City\"\n//           value={formData.address.city}\n//           onChange={handleAddressChange}\n//           required\n//         />\n//       </div>\n//       <div className=\"wrapper\">\n//         <label htmlFor=\"state\">State</label>\n//         <input\n//           type=\"text\"\n//           id=\"state\"\n//           name=\"state\"\n//           placeholder=\"State\"\n//           value={formData.address.state}\n//           onChange={handleAddressChange}\n//           required\n//         />\n//       </div>\n//       <div className=\"wrapper\">\n//         <label htmlFor=\"postal_code\">Postal Code</label>\n//         <input\n//           type=\"text\"\n//           id=\"postal_code\"\n//           name=\"postal_code\"\n//           placeholder=\"Postal Code\"\n//           value={formData.address.postal_code}\n//           onChange={handleAddressChange}\n//           required\n//         />\n//       </div>\n//       <div className=\"wrapper\">\n//         <label htmlFor=\"country\">Country</label>\n//         <input\n//           type=\"text\"\n//           id=\"country\"\n//           name=\"country\"\n//           placeholder=\"Country\"\n//           value={formData.address.country}\n//           onChange={handleAddressChange}\n//           required\n//         />\n//       </div>\n//       {/* Password */}\n//       <div className=\"wrapper\">\n//         <label htmlFor=\"password\">Password</label>\n//         <input\n//           type=\"password\"\n//           id=\"password\"\n//           name=\"password\"\n//           placeholder=\"Password\"\n//           value={formData.password}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n//       {/* Submit Button */}\n//       <button type=\"submit\" className=\"register-btn\">Register</button>\n//       {/* Error Message */}\n//       {error && <p className=\"error-message\">{error}</p>}\n//     </form>\n//   </div>\n//   );\n// };\n// export default ClientRegister;\nimport React,{useState}from\"react\";import axios from\"axios\";import{useNavigate}from\"react-router-dom\";import{Container,TextField,Button,Typography,Box,Grid,Paper,InputAdornment}from\"@mui/material\";import{AccountCircle,Email,Phone,Business,Home,Lock}from\"@mui/icons-material\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ClientRegister=()=>{const[formData,setFormData]=useState({client_name:\"\",contact_person:\"\",email:\"\",phone:\"\",industry:\"\",status:\"Active\",address:{street:\"\",city:\"\",state:\"\",postal_code:\"\",country:\"\"},password:\"\"});const[error,setError]=useState(\"\");const navigate=useNavigate();const validateEmail=email=>{return /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/.test(email);};const validatePhone=phone=>{return /^[0-9]{10}$/.test(phone);};const handleChange=e=>{const{name,value}=e.target;setFormData(prevData=>({...prevData,[name]:value}));};const handleAddressChange=e=>{const{name,value}=e.target;setFormData(prevData=>({...prevData,address:{...prevData.address,[name]:value}}));};const handleSubmit=async e=>{e.preventDefault();if(!validateEmail(formData.email)){setError(\"Invalid email format.\");return;}if(!validatePhone(formData.phone)){setError(\"Phone number must be 10 digits.\");return;}try{await axios.post(\"http://localhost:5005/api/register\",formData);navigate(\"/client-login\");}catch(err){var _err$response,_err$response$data;setError(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.message)||\"Failed to register. Please try again.\");}};return/*#__PURE__*/_jsx(Container,{maxWidth:\"md\",children:/*#__PURE__*/_jsxs(Paper,{elevation:3,sx:{padding:4,marginTop:5,borderRadius:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",align:\"center\",gutterBottom:true,children:\"Client Registration\"}),/*#__PURE__*/_jsx(Box,{component:\"form\",onSubmit:handleSubmit,children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Client Name\",name:\"client_name\",value:formData.client_name,onChange:handleChange,required:true,InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:/*#__PURE__*/_jsx(AccountCircle,{})})}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Contact Person\",name:\"contact_person\",value:formData.contact_person,onChange:handleChange,required:true,InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:/*#__PURE__*/_jsx(AccountCircle,{})})}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,type:\"email\",label:\"Email\",name:\"email\",value:formData.email,onChange:handleChange,required:true,InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:/*#__PURE__*/_jsx(Email,{})})},error:!validateEmail(formData.email)&&formData.email!==\"\",helperText:!validateEmail(formData.email)&&formData.email!==\"\"?\"Invalid email format\":\"\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Phone\",name:\"phone\",value:formData.phone,onChange:handleChange,required:true,InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:/*#__PURE__*/_jsx(Phone,{})})},error:!validatePhone(formData.phone)&&formData.phone!==\"\",helperText:!validatePhone(formData.phone)&&formData.phone!==\"\"?\"Phone number must be 10 digits\":\"\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Industry\",name:\"industry\",value:formData.industry,onChange:handleChange,required:true,InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:/*#__PURE__*/_jsx(Business,{})})}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Address\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Street\",name:\"street\",value:formData.address.street,onChange:handleAddressChange,required:true,InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:/*#__PURE__*/_jsx(Home,{})})}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"City\",name:\"city\",value:formData.address.city,onChange:handleAddressChange,required:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"State\",name:\"state\",value:formData.address.state,onChange:handleAddressChange,required:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Postal Code\",name:\"postal_code\",value:formData.address.postal_code,onChange:handleAddressChange,required:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Country\",name:\"country\",value:formData.address.country,onChange:handleAddressChange,required:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,type:\"password\",label:\"Password\",name:\"password\",value:formData.password,onChange:handleChange,required:true,InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:/*#__PURE__*/_jsx(Lock,{})})}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:error&&/*#__PURE__*/_jsx(Typography,{color:\"error\",children:error})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"contained\",color:\"primary\",fullWidth:true,children:\"Register\"})})]})})]})});};export default ClientRegister;","map":{"version":3,"names":["React","useState","axios","useNavigate","Container","TextField","Button","Typography","Box","Grid","Paper","InputAdornment","AccountCircle","Email","Phone","Business","Home","Lock","jsx","_jsx","jsxs","_jsxs","ClientRegister","formData","setFormData","client_name","contact_person","email","phone","industry","status","address","street","city","state","postal_code","country","password","error","setError","navigate","validateEmail","test","validatePhone","handleChange","e","name","value","target","prevData","handleAddressChange","handleSubmit","preventDefault","post","err","_err$response","_err$response$data","response","data","message","maxWidth","children","elevation","sx","padding","marginTop","borderRadius","variant","align","gutterBottom","component","onSubmit","container","spacing","item","xs","sm","fullWidth","label","onChange","required","InputProps","startAdornment","position","type","helperText","color"],"sources":["/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/ClientRegister.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n// import './Register.css';\n\n// const ClientRegister = () => {\n//   const [formData, setFormData] = useState({\n//     client_name: '',\n//     contact_person: '',\n//     email: '',\n//     phone: '',\n//     industry: '',\n//     status: 'Active',\n//     address: {\n//       street: '',\n//       city: '',\n//       state: '',\n//       postal_code: '',\n//       country: '',\n//     },\n//     password: '',\n//   });\n//   const [error, setError] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({\n//       ...formData,\n//       [name]: value,\n//     });\n//   };\n\n//   const handleAddressChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({\n//       ...formData,\n//       address: {\n//         ...formData.address,\n//         [name]: value,\n//       },\n//     });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await axios.post('http://localhost:5005/api/register', formData);\n//       navigate('/client-login'); // Redirect to login after successful registration\n//     } catch (err) {\n//       setError(err.response?.data?.message || 'Failed to register. Please try again.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"register-container\">\n//     <form onSubmit={handleSubmit} className=\"register-card\">\n//       <h2>Client Registration</h2>\n  \n//       {/* Client Details */}\n//       <div className=\"wrapper\">\n//         <label htmlFor=\"client_name\">Client Name</label>\n//         <input\n//           type=\"text\"\n//           id=\"client_name\"\n//           name=\"client_name\"\n//           placeholder=\"Client Name\"\n//           value={formData.client_name}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n//       <div className=\"wrapper\">\n//         <label htmlFor=\"contact_person\">Contact Person</label>\n//         <input\n//           type=\"text\"\n//           id=\"contact_person\"\n//           name=\"contact_person\"\n//           placeholder=\"Contact Person\"\n//           value={formData.contact_person}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n//       <div className=\"wrapper\">\n//         <label htmlFor=\"email\">Email</label>\n//         <input\n//           type=\"email\"\n//           id=\"email\"\n//           name=\"email\"\n//           placeholder=\"Email\"\n//           value={formData.email}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n//       <div className=\"wrapper\">\n//         <label htmlFor=\"phone\">Phone</label>\n//         <input\n//           type=\"text\"\n//           id=\"phone\"\n//           name=\"phone\"\n//           placeholder=\"Phone\"\n//           value={formData.phone}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n//       <div className=\"wrapper\">\n//         <label htmlFor=\"industry\">Industry</label>\n//         <input\n//           type=\"text\"\n//           id=\"industry\"\n//           name=\"industry\"\n//           placeholder=\"Industry\"\n//           value={formData.industry}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n  \n//       {/* Address Section */}\n//       <h3>Address</h3>\n//       <div className=\"wrapper\">\n//         <label htmlFor=\"street\">Street</label>\n//         <input\n//           type=\"text\"\n//           id=\"street\"\n//           name=\"street\"\n//           placeholder=\"Street\"\n//           value={formData.address.street}\n//           onChange={handleAddressChange}\n//           required\n//         />\n//       </div>\n//       <div className=\"wrapper\">\n//         <label htmlFor=\"city\">City</label>\n//         <input\n//           type=\"text\"\n//           id=\"city\"\n//           name=\"city\"\n//           placeholder=\"City\"\n//           value={formData.address.city}\n//           onChange={handleAddressChange}\n//           required\n//         />\n//       </div>\n//       <div className=\"wrapper\">\n//         <label htmlFor=\"state\">State</label>\n//         <input\n//           type=\"text\"\n//           id=\"state\"\n//           name=\"state\"\n//           placeholder=\"State\"\n//           value={formData.address.state}\n//           onChange={handleAddressChange}\n//           required\n//         />\n//       </div>\n//       <div className=\"wrapper\">\n//         <label htmlFor=\"postal_code\">Postal Code</label>\n//         <input\n//           type=\"text\"\n//           id=\"postal_code\"\n//           name=\"postal_code\"\n//           placeholder=\"Postal Code\"\n//           value={formData.address.postal_code}\n//           onChange={handleAddressChange}\n//           required\n//         />\n//       </div>\n//       <div className=\"wrapper\">\n//         <label htmlFor=\"country\">Country</label>\n//         <input\n//           type=\"text\"\n//           id=\"country\"\n//           name=\"country\"\n//           placeholder=\"Country\"\n//           value={formData.address.country}\n//           onChange={handleAddressChange}\n//           required\n//         />\n//       </div>\n  \n//       {/* Password */}\n//       <div className=\"wrapper\">\n//         <label htmlFor=\"password\">Password</label>\n//         <input\n//           type=\"password\"\n//           id=\"password\"\n//           name=\"password\"\n//           placeholder=\"Password\"\n//           value={formData.password}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n  \n//       {/* Submit Button */}\n//       <button type=\"submit\" className=\"register-btn\">Register</button>\n  \n//       {/* Error Message */}\n//       {error && <p className=\"error-message\">{error}</p>}\n//     </form>\n//   </div>\n  \n  \n//   );\n// };\n\n// export default ClientRegister;\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Container, TextField, Button, Typography, Box, Grid, Paper, InputAdornment } from \"@mui/material\";\nimport { AccountCircle, Email, Phone, Business, Home, Lock } from \"@mui/icons-material\";\n\nconst ClientRegister = () => {\n  const [formData, setFormData] = useState({\n    client_name: \"\",\n    contact_person: \"\",\n    email: \"\",\n    phone: \"\",\n    industry: \"\",\n    status: \"Active\",\n    address: {\n      street: \"\",\n      city: \"\",\n      state: \"\",\n      postal_code: \"\",\n      country: \"\",\n    },\n    password: \"\",\n  });\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n\n  const validateEmail = (email) => {\n    return /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/.test(email);\n  };\n\n  const validatePhone = (phone) => {\n    return /^[0-9]{10}$/.test(phone);\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const handleAddressChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevData) => ({\n      ...prevData,\n      address: {\n        ...prevData.address,\n        [name]: value,\n      },\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!validateEmail(formData.email)) {\n      setError(\"Invalid email format.\");\n      return;\n    }\n    if (!validatePhone(formData.phone)) {\n      setError(\"Phone number must be 10 digits.\");\n      return;\n    }\n    try {\n      await axios.post(\"http://localhost:5005/api/register\", formData);\n      navigate(\"/client-login\");\n    } catch (err) {\n      setError(err.response?.data?.message || \"Failed to register. Please try again.\");\n    }\n  };\n\n  return (\n    <Container maxWidth=\"md\">\n      <Paper elevation={3} sx={{ padding: 4, marginTop: 5, borderRadius: 3 }}>\n        <Typography variant=\"h4\" align=\"center\" gutterBottom>\n          Client Registration\n        </Typography>\n        <Box component=\"form\" onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField fullWidth label=\"Client Name\" name=\"client_name\" value={formData.client_name} onChange={handleChange} required \n                InputProps={{ startAdornment: (<InputAdornment position=\"start\"><AccountCircle /></InputAdornment>) }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField fullWidth label=\"Contact Person\" name=\"contact_person\" value={formData.contact_person} onChange={handleChange} required \n                InputProps={{ startAdornment: (<InputAdornment position=\"start\"><AccountCircle /></InputAdornment>) }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField fullWidth type=\"email\" label=\"Email\" name=\"email\" value={formData.email} onChange={handleChange} required \n                InputProps={{ startAdornment: (<InputAdornment position=\"start\"><Email /></InputAdornment>) }}\n                error={!validateEmail(formData.email) && formData.email !== \"\"}\n                helperText={!validateEmail(formData.email) && formData.email !== \"\" ? \"Invalid email format\" : \"\"}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField fullWidth label=\"Phone\" name=\"phone\" value={formData.phone} onChange={handleChange} required \n                InputProps={{ startAdornment: (<InputAdornment position=\"start\"><Phone /></InputAdornment>) }}\n                error={!validatePhone(formData.phone) && formData.phone !== \"\"}\n                helperText={!validatePhone(formData.phone) && formData.phone !== \"\" ? \"Phone number must be 10 digits\" : \"\"}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField fullWidth label=\"Industry\" name=\"industry\" value={formData.industry} onChange={handleChange} required \n                InputProps={{ startAdornment: (<InputAdornment position=\"start\"><Business /></InputAdornment>) }}\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <Typography variant=\"h6\">Address</Typography>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField fullWidth label=\"Street\" name=\"street\" value={formData.address.street} onChange={handleAddressChange} required \n                InputProps={{ startAdornment: (<InputAdornment position=\"start\"><Home /></InputAdornment>) }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField fullWidth label=\"City\" name=\"city\" value={formData.address.city} onChange={handleAddressChange} required />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField fullWidth label=\"State\" name=\"state\" value={formData.address.state} onChange={handleAddressChange} required />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField fullWidth label=\"Postal Code\" name=\"postal_code\" value={formData.address.postal_code} onChange={handleAddressChange} required />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField fullWidth label=\"Country\" name=\"country\" value={formData.address.country} onChange={handleAddressChange} required />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField fullWidth type=\"password\" label=\"Password\" name=\"password\" value={formData.password} onChange={handleChange} required \n                InputProps={{ startAdornment: (<InputAdornment position=\"start\"><Lock /></InputAdornment>) }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              {error && <Typography color=\"error\">{error}</Typography>}\n            </Grid>\n            <Grid item xs={12}>\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\n                Register\n              </Button>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default ClientRegister;\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,SAAS,CAAEC,SAAS,CAAEC,MAAM,CAAEC,UAAU,CAAEC,GAAG,CAAEC,IAAI,CAAEC,KAAK,CAAEC,cAAc,KAAQ,eAAe,CAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}