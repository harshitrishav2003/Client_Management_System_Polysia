{"ast":null,"code":"var _jsxFileName = \"/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom';\n// import axios from 'axios'; // Ensure axios is installed: `npm install axios`\n// import './Dashboard.css'; // Custom CSS for the dashboard\n\n// const Dashboard = () => {\n//   const [clients, setClients] = useState([]);\n//   const [search, setSearch] = useState('');\n//   const [filters, setFilters] = useState({\n//     region: '',\n//     industry: '',\n//     status: ''\n//   });\n//   const [sortOrder, setSortOrder] = useState('asc'); // 'asc' or 'desc'\n//   const [sortColumn, setSortColumn] = useState('client_name'); // Default column to sort\n//   const [authToken, setAuthToken] = useState(localStorage.getItem('token') || ''); // Get the token from localStorage\n\n//   // Fetch clients from backend when the component mounts or filters/sort change\n//   useEffect(() => {\n//     fetchClients();\n//   }, [filters, sortColumn, sortOrder]);\n\n//   const fetchClients = () => {\n//     const query = new URLSearchParams({\n//       search,\n//       region: filters.region,\n//       industry: filters.industry,\n//       status: filters.status,\n//       sortColumn,\n//       sortOrder\n//     });\n\n//     axios\n//       .get(`http://localhost:5005/api/users?${query.toString()}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`, // Pass token in Authorization header\n//         },\n//       })\n//       .then((response) => {\n//         setClients(response.data);\n//       })\n//       .catch((err) => {\n//         console.error('Error fetching clients:', err);\n//         // Handle error (e.g., logout if token is invalid)\n//       });\n//   };\n\n//   const handleSearch = (e) => {\n//     setSearch(e.target.value);\n//   };\n\n//   const handleFilterChange = (e) => {\n//     const { name, value } = e.target;\n//     setFilters({ ...filters, [name]: value });\n//   };\n\n//   const handleSort = (column) => {\n//     const newSortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n//     setSortOrder(newSortOrder);\n//     setSortColumn(column);\n//   };\n\n//   const handleEdit = (clientId) => {\n//     // Redirect to the client edit page (implement the edit page separately)\n//     window.location.href = `/edit-client/${clientId}`;\n//   };\n\n//   const handleDelete = (clientId) => {\n//     // Make API call to delete client\n//     axios\n//       .delete(`http://localhost:5005/api/users/${clientId}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then((response) => {\n//         // Remove deleted client from the list\n//         setClients(clients.filter((client) => client._id !== clientId));\n//         alert('Client deleted successfully');\n//       })\n//       .catch((err) => {\n//         console.error('Error deleting client:', err);\n//         alert('Failed to delete client');\n//       });\n//   };\n\n//   const exportData = (format) => {\n//     // Logic to export as excel, pdf, csv\n//     alert(`Exporting data as ${format}`);\n//   };\n\n//   return (\n//     <div className=\"dashboard\">\n//       <h1>Client Dashboard</h1>\n\n//       {/* Search Bar */}\n//       <input\n//         type=\"text\"\n//         placeholder=\"Search clients...\"\n//         value={search}\n//         onChange={handleSearch}\n//       />\n\n//       {/* Filter Options */}\n//       <select name=\"region\" onChange={handleFilterChange} value={filters.region}>\n//         <option value=\"\">All Regions</option>\n//         <option value=\"North America\">North America</option>\n//         <option value=\"Europe\">Europe</option>\n//         <option value=\"Asia\">Asia</option>\n//       </select>\n\n//       <select name=\"industry\" onChange={handleFilterChange} value={filters.industry}>\n//         <option value=\"\">All Industries</option>\n//         <option value=\"Finance\">Finance</option>\n//         <option value=\"Technology\">Technology</option>\n//         <option value=\"Healthcare\">Healthcare</option>\n//       </select>\n\n//       <select name=\"status\" onChange={handleFilterChange} value={filters.status}>\n//         <option value=\"\">All Statuses</option>\n//         <option value=\"Active\">Active</option>\n//         <option value=\"Inactive\">Inactive</option>\n//       </select>\n\n//       {/* Export Buttons */}\n//       <button onClick={() => exportData('excel')}>Export as Excel</button>\n//       <button onClick={() => exportData('pdf')}>Export as PDF</button>\n//       <button onClick={() => exportData('csv')}>Export as CSV</button>\n\n//       {/* Client Data Table */}\n//       <table>\n//         <thead>\n//           <tr>\n//             <th onClick={() => handleSort('client_name')}>Client Name</th>\n//             <th onClick={() => handleSort('industry')}>Industry</th>\n//             <th onClick={() => handleSort('status')}>Status</th>\n//             <th>Email</th>\n//             <th>Phone</th>\n//             <th>Contact Person</th>\n//             <th>Location</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {clients.length > 0 ? (\n//             clients.map((client) => (\n//               <tr key={client._id}>\n//                 <td>\n//                   <Link to={`/client/${client._id}`}>{client.client_name}</Link>\n//                 </td>\n//                 <td>{client.industry}</td>\n//                 <td>{client.status}</td>\n//                 <td>{client.email}</td>\n//                 <td>{client.phone}</td>\n//                 <td>{client.contact_person}</td>\n//                 <td>\n//                   {`${client.address.street}, ${client.address.city}, ${client.address.state}, ${client.address.postal_code}, ${client.address.country}`}\n//                 </td>\n//                 <td>\n//                   <button onClick={() => handleEdit(client._id)}>Edit</button>\n//                   <button onClick={() => handleDelete(client._id)}>Delete</button>\n//                 </td>\n//               </tr>\n//             ))\n//           ) : (\n//             <tr>\n//               <td colSpan=\"6\">No clients found</td>\n//             </tr>\n//           )}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios'; // Ensure axios is installed: `npm install axios`\nimport './Dashboard.css'; // Custom CSS for the dashboard\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [clients, setClients] = useState([]);\n  const [search, setSearch] = useState('');\n  const [filters, setFilters] = useState({\n    region: '',\n    industry: '',\n    status: ''\n  });\n  const [sortOrder, setSortOrder] = useState('asc'); // 'asc' or 'desc'\n  const [sortColumn, setSortColumn] = useState('client_name'); // Default column to sort\n  const [authToken, setAuthToken] = useState(localStorage.getItem('token') || ''); // Get the token from localStorage\n\n  // Fetch clients from backend when the component mounts or filters/sort change\n  useEffect(() => {\n    fetchClients();\n  }, [filters, sortColumn, sortOrder]);\n  const fetchClients = () => {\n    const query = new URLSearchParams({\n      search,\n      region: filters.region,\n      industry: filters.industry,\n      status: filters.status,\n      sortColumn,\n      sortOrder\n    });\n    axios.get(`http://localhost:5005/api/users?${query.toString()}`, {\n      headers: {\n        Authorization: `Bearer ${authToken}` // Pass token in Authorization header\n      }\n    }).then(response => {\n      setClients(response.data);\n    }).catch(err => {\n      console.error('Error fetching clients:', err);\n      // Handle error (e.g., logout if token is invalid)\n    });\n  };\n  const handleSearch = e => {\n    setSearch(e.target.value);\n  };\n  const handleFilterChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFilters({\n      ...filters,\n      [name]: value\n    });\n  };\n  const handleSort = column => {\n    const newSortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n    setSortOrder(newSortOrder);\n    setSortColumn(column);\n  };\n  const handleEdit = clientId => {\n    // Redirect to the client edit page (implement the edit page separately)\n    window.location.href = `/edit-client/${clientId}`;\n  };\n  const handleDelete = clientId => {\n    // Make API call to delete client\n    axios.delete(`http://localhost:5005/api/users/${clientId}`, {\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    }).then(response => {\n      // Remove deleted client from the list\n      setClients(clients.filter(client => client._id !== clientId));\n      alert('Client deleted successfully');\n    }).catch(err => {\n      console.error('Error deleting client:', err);\n      alert('Failed to delete client');\n    });\n  };\n  const handleApprove = clientId => {\n    // Make API call to approve the client\n    axios.post(`http://localhost:5005/api/admin/approve-client`, {\n      clientId\n    }, {\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    }).then(response => {\n      alert('Client approved successfully');\n      fetchClients(); // Refresh the client list after approval\n    }).catch(err => {\n      console.error('Error approving client:', err);\n      alert('Failed to approve client');\n    });\n  };\n  const exportData = format => {\n    // Logic to export as excel, pdf, csv\n    alert(`Exporting data as ${format}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Client Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search clients...\",\n      value: search,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"region\",\n      onChange: handleFilterChange,\n      value: filters.region,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"All Regions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"North America\",\n        children: \"North America\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Europe\",\n        children: \"Europe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Asia\",\n        children: \"Asia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"industry\",\n      onChange: handleFilterChange,\n      value: filters.industry,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"All Industries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Finance\",\n        children: \"Finance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Technology\",\n        children: \"Technology\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Healthcare\",\n        children: \"Healthcare\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"status\",\n      onChange: handleFilterChange,\n      value: filters.status,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"All Statuses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Active\",\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Inactive\",\n        children: \"Inactive\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => exportData('excel'),\n      children: \"Export as Excel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => exportData('pdf'),\n      children: \"Export as PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => exportData('csv'),\n      children: \"Export as CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('client_name'),\n            children: \"Client Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('industry'),\n            children: \"Industry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('status'),\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Contact Person\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: clients.length > 0 ? clients.map(client => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/client/${client._id}`,\n              children: client.client_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: client.industry\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: client.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: client.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: client.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: client.contact_person\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: client.address ? `${client.address.street || 'No street'} ${client.address.city || ''}, ${client.address.state || ''}, ${client.address.postal_code || ''}, ${client.address.country || ''}` : 'No address available'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(client._id),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(client._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 19\n            }, this), !client.approved && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleApprove(client._id),\n              children: \"Approve\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 21\n            }, this), client.approved && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Approved\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 17\n          }, this)]\n        }, client._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"8\",\n            children: \"No clients found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 288,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"BtKqZ5psT2V0QrfreTgPLIG2ct8=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Link","axios","jsxDEV","_jsxDEV","Dashboard","_s","clients","setClients","search","setSearch","filters","setFilters","region","industry","status","sortOrder","setSortOrder","sortColumn","setSortColumn","authToken","setAuthToken","localStorage","getItem","fetchClients","query","URLSearchParams","get","toString","headers","Authorization","then","response","data","catch","err","console","error","handleSearch","e","target","value","handleFilterChange","name","handleSort","column","newSortOrder","handleEdit","clientId","window","location","href","handleDelete","delete","filter","client","_id","alert","handleApprove","post","exportData","format","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","length","map","to","client_name","email","phone","contact_person","address","street","city","state","postal_code","country","approved","colSpan","_c","$RefreshReg$"],"sources":["/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/Dashboard.js"],"sourcesContent":["\n// import React, { useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom';\n// import axios from 'axios'; // Ensure axios is installed: `npm install axios`\n// import './Dashboard.css'; // Custom CSS for the dashboard\n\n// const Dashboard = () => {\n//   const [clients, setClients] = useState([]);\n//   const [search, setSearch] = useState('');\n//   const [filters, setFilters] = useState({\n//     region: '',\n//     industry: '',\n//     status: ''\n//   });\n//   const [sortOrder, setSortOrder] = useState('asc'); // 'asc' or 'desc'\n//   const [sortColumn, setSortColumn] = useState('client_name'); // Default column to sort\n//   const [authToken, setAuthToken] = useState(localStorage.getItem('token') || ''); // Get the token from localStorage\n\n//   // Fetch clients from backend when the component mounts or filters/sort change\n//   useEffect(() => {\n//     fetchClients();\n//   }, [filters, sortColumn, sortOrder]);\n\n//   const fetchClients = () => {\n//     const query = new URLSearchParams({\n//       search,\n//       region: filters.region,\n//       industry: filters.industry,\n//       status: filters.status,\n//       sortColumn,\n//       sortOrder\n//     });\n\n//     axios\n//       .get(`http://localhost:5005/api/users?${query.toString()}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`, // Pass token in Authorization header\n//         },\n//       })\n//       .then((response) => {\n//         setClients(response.data);\n//       })\n//       .catch((err) => {\n//         console.error('Error fetching clients:', err);\n//         // Handle error (e.g., logout if token is invalid)\n//       });\n//   };\n\n//   const handleSearch = (e) => {\n//     setSearch(e.target.value);\n//   };\n\n//   const handleFilterChange = (e) => {\n//     const { name, value } = e.target;\n//     setFilters({ ...filters, [name]: value });\n//   };\n\n//   const handleSort = (column) => {\n//     const newSortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n//     setSortOrder(newSortOrder);\n//     setSortColumn(column);\n//   };\n\n//   const handleEdit = (clientId) => {\n//     // Redirect to the client edit page (implement the edit page separately)\n//     window.location.href = `/edit-client/${clientId}`;\n//   };\n\n//   const handleDelete = (clientId) => {\n//     // Make API call to delete client\n//     axios\n//       .delete(`http://localhost:5005/api/users/${clientId}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then((response) => {\n//         // Remove deleted client from the list\n//         setClients(clients.filter((client) => client._id !== clientId));\n//         alert('Client deleted successfully');\n//       })\n//       .catch((err) => {\n//         console.error('Error deleting client:', err);\n//         alert('Failed to delete client');\n//       });\n//   };\n\n//   const exportData = (format) => {\n//     // Logic to export as excel, pdf, csv\n//     alert(`Exporting data as ${format}`);\n//   };\n\n//   return (\n//     <div className=\"dashboard\">\n//       <h1>Client Dashboard</h1>\n\n//       {/* Search Bar */}\n//       <input\n//         type=\"text\"\n//         placeholder=\"Search clients...\"\n//         value={search}\n//         onChange={handleSearch}\n//       />\n\n//       {/* Filter Options */}\n//       <select name=\"region\" onChange={handleFilterChange} value={filters.region}>\n//         <option value=\"\">All Regions</option>\n//         <option value=\"North America\">North America</option>\n//         <option value=\"Europe\">Europe</option>\n//         <option value=\"Asia\">Asia</option>\n//       </select>\n\n//       <select name=\"industry\" onChange={handleFilterChange} value={filters.industry}>\n//         <option value=\"\">All Industries</option>\n//         <option value=\"Finance\">Finance</option>\n//         <option value=\"Technology\">Technology</option>\n//         <option value=\"Healthcare\">Healthcare</option>\n//       </select>\n\n//       <select name=\"status\" onChange={handleFilterChange} value={filters.status}>\n//         <option value=\"\">All Statuses</option>\n//         <option value=\"Active\">Active</option>\n//         <option value=\"Inactive\">Inactive</option>\n//       </select>\n\n//       {/* Export Buttons */}\n//       <button onClick={() => exportData('excel')}>Export as Excel</button>\n//       <button onClick={() => exportData('pdf')}>Export as PDF</button>\n//       <button onClick={() => exportData('csv')}>Export as CSV</button>\n\n//       {/* Client Data Table */}\n//       <table>\n//         <thead>\n//           <tr>\n//             <th onClick={() => handleSort('client_name')}>Client Name</th>\n//             <th onClick={() => handleSort('industry')}>Industry</th>\n//             <th onClick={() => handleSort('status')}>Status</th>\n//             <th>Email</th>\n//             <th>Phone</th>\n//             <th>Contact Person</th>\n//             <th>Location</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {clients.length > 0 ? (\n//             clients.map((client) => (\n//               <tr key={client._id}>\n//                 <td>\n//                   <Link to={`/client/${client._id}`}>{client.client_name}</Link>\n//                 </td>\n//                 <td>{client.industry}</td>\n//                 <td>{client.status}</td>\n//                 <td>{client.email}</td>\n//                 <td>{client.phone}</td>\n//                 <td>{client.contact_person}</td>\n//                 <td>\n//                   {`${client.address.street}, ${client.address.city}, ${client.address.state}, ${client.address.postal_code}, ${client.address.country}`}\n//                 </td>\n//                 <td>\n//                   <button onClick={() => handleEdit(client._id)}>Edit</button>\n//                   <button onClick={() => handleDelete(client._id)}>Delete</button>\n//                 </td>\n//               </tr>\n//             ))\n//           ) : (\n//             <tr>\n//               <td colSpan=\"6\">No clients found</td>\n//             </tr>\n//           )}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios'; // Ensure axios is installed: `npm install axios`\nimport './Dashboard.css'; // Custom CSS for the dashboard\n\nconst Dashboard = () => {\n  const [clients, setClients] = useState([]);\n  const [search, setSearch] = useState('');\n  const [filters, setFilters] = useState({\n    region: '',\n    industry: '',\n    status: ''\n  });\n  const [sortOrder, setSortOrder] = useState('asc'); // 'asc' or 'desc'\n  const [sortColumn, setSortColumn] = useState('client_name'); // Default column to sort\n  const [authToken, setAuthToken] = useState(localStorage.getItem('token') || ''); // Get the token from localStorage\n\n  // Fetch clients from backend when the component mounts or filters/sort change\n  useEffect(() => {\n    fetchClients();\n  }, [filters, sortColumn, sortOrder]);\n\n  const fetchClients = () => {\n    const query = new URLSearchParams({\n      search,\n      region: filters.region,\n      industry: filters.industry,\n      status: filters.status,\n      sortColumn,\n      sortOrder\n    });\n\n    axios\n      .get(`http://localhost:5005/api/users?${query.toString()}`, {\n        headers: {\n          Authorization: `Bearer ${authToken}`, // Pass token in Authorization header\n        },\n      })\n      .then((response) => {\n        setClients(response.data);\n      })\n      .catch((err) => {\n        console.error('Error fetching clients:', err);\n        // Handle error (e.g., logout if token is invalid)\n      });\n  };\n\n  const handleSearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const handleFilterChange = (e) => {\n    const { name, value } = e.target;\n    setFilters({ ...filters, [name]: value });\n  };\n\n  const handleSort = (column) => {\n    const newSortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n    setSortOrder(newSortOrder);\n    setSortColumn(column);\n  };\n\n  const handleEdit = (clientId) => {\n    // Redirect to the client edit page (implement the edit page separately)\n    window.location.href = `/edit-client/${clientId}`;\n  };\n\n  const handleDelete = (clientId) => {\n    // Make API call to delete client\n    axios\n      .delete(`http://localhost:5005/api/users/${clientId}`, {\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n        },\n      })\n      .then((response) => {\n        // Remove deleted client from the list\n        setClients(clients.filter((client) => client._id !== clientId));\n        alert('Client deleted successfully');\n      })\n      .catch((err) => {\n        console.error('Error deleting client:', err);\n        alert('Failed to delete client');\n      });\n  };\n\n  const handleApprove = (clientId) => {\n    // Make API call to approve the client\n    axios\n      .post(\n        `http://localhost:5005/api/admin/approve-client`, \n        { clientId },\n        { headers: { Authorization: `Bearer ${authToken}` } }\n      )\n      .then((response) => {\n        alert('Client approved successfully');\n        fetchClients(); // Refresh the client list after approval\n      })\n      .catch((err) => {\n        console.error('Error approving client:', err);\n        alert('Failed to approve client');\n      });\n  };\n\n  const exportData = (format) => {\n    // Logic to export as excel, pdf, csv\n    alert(`Exporting data as ${format}`);\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <h1>Client Dashboard</h1>\n\n      {/* Search Bar */}\n      <input\n        type=\"text\"\n        placeholder=\"Search clients...\"\n        value={search}\n        onChange={handleSearch}\n      />\n\n      {/* Filter Options */}\n      <select name=\"region\" onChange={handleFilterChange} value={filters.region}>\n        <option value=\"\">All Regions</option>\n        <option value=\"North America\">North America</option>\n        <option value=\"Europe\">Europe</option>\n        <option value=\"Asia\">Asia</option>\n      </select>\n\n      <select name=\"industry\" onChange={handleFilterChange} value={filters.industry}>\n        <option value=\"\">All Industries</option>\n        <option value=\"Finance\">Finance</option>\n        <option value=\"Technology\">Technology</option>\n        <option value=\"Healthcare\">Healthcare</option>\n      </select>\n\n      <select name=\"status\" onChange={handleFilterChange} value={filters.status}>\n        <option value=\"\">All Statuses</option>\n        <option value=\"Active\">Active</option>\n        <option value=\"Inactive\">Inactive</option>\n      </select>\n\n      {/* Export Buttons */}\n      <button onClick={() => exportData('excel')}>Export as Excel</button>\n      <button onClick={() => exportData('pdf')}>Export as PDF</button>\n      <button onClick={() => exportData('csv')}>Export as CSV</button>\n\n      {/* Client Data Table */}\n      <table>\n        <thead>\n          <tr>\n            <th onClick={() => handleSort('client_name')}>Client Name</th>\n            <th onClick={() => handleSort('industry')}>Industry</th>\n            <th onClick={() => handleSort('status')}>Status</th>\n            <th>Email</th>\n            <th>Phone</th>\n            <th>Contact Person</th>\n            <th>Location</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {clients.length > 0 ? (\n            clients.map((client) => (\n              <tr key={client._id}>\n                <td>\n                  <Link to={`/client/${client._id}`}>{client.client_name}</Link>\n                </td>\n                <td>{client.industry}</td>\n                <td>{client.status}</td>\n                <td>{client.email}</td>\n                <td>{client.phone}</td>\n                <td>{client.contact_person}</td>\n                <td>\n                  {/* Safely accessing address properties */}\n                  {client.address ? `${client.address.street || 'No street'} ${client.address.city || ''}, ${client.address.state || ''}, ${client.address.postal_code || ''}, ${client.address.country || ''}` : 'No address available'}\n                </td>\n                <td>\n                  <button onClick={() => handleEdit(client._id)}>Edit</button>\n                  <button onClick={() => handleDelete(client._id)}>Delete</button>\n                  {/* Approval button */}\n                  {!client.approved && (\n                    <button onClick={() => handleApprove(client._id)}>\n                      Approve\n                    </button>\n                  )}\n                  {client.approved && <span>Approved</span>}\n                </td>\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td colSpan=\"8\">No clients found</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}