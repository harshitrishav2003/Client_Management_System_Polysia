{"ast":null,"code":"var _jsxFileName = \"/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './Dashboard.css';\n// import PendingUsers from \"../components/PendingUser\";\n// import { Link } from 'react-router-dom';\n\n// const Dashboard = () => {\n//   const [clients, setClients] = useState([]);\n//   const [search, setSearch] = useState('');\n//   const [filters, setFilters] = useState({\n//     region: '',\n//     industry: '',\n//     status: '',\n//   });\n//   const [sortOrder, setSortOrder] = useState('asc');\n//   const [sortColumn, setSortColumn] = useState('client_name');\n//   const [authToken, setAuthToken] = useState(localStorage.getItem('token') || '');\n//   const [editingClient, setEditingClient] = useState(null); // Client being edited\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     fetchClients();\n//   }, [filters, sortColumn, sortOrder]);\n\n//   const fetchClients = () => {\n//     const query = new URLSearchParams({\n//       search,\n//       region: filters.region,\n//       industry: filters.industry,\n//       status: filters.status,\n//       sortColumn,\n//       sortOrder,\n//     });\n\n//     axios\n//       .get(`http://localhost:5005/api/users?${query.toString()}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then((response) => {\n//         setClients(response.data);\n//       })\n//       .catch((err) => {\n//         console.error('Error fetching clients:', err);\n//       });\n//   };\n\n//   const handleSearch = (e) => {\n//     setSearch(e.target.value);\n//   };\n\n//   const handleFilterChange = (e) => {\n//     const { name, value } = e.target;\n//     setFilters({ ...filters, [name]: value });\n//   };\n\n//   const handleSort = (column) => {\n//     const newSortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n//     setSortOrder(newSortOrder);\n//     setSortColumn(column);\n//   };\n\n//   const handleEditClick = (client) => {\n//     setEditingClient(client); // Set the client for editing\n//   };\n\n//   const handleEditChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditingClient({ ...editingClient, [name]: value });\n//   };\n\n//   const handleAddressChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditingClient({\n//       ...editingClient,\n//       address: {\n//         ...editingClient.address,\n//         [name]: value,\n//       },\n//     });\n//   };\n\n//   const handleEditSubmit = async () => {\n//     try {\n//       await axios.put(\n//         `http://localhost:5005/api/users/${editingClient._id}`,\n//         editingClient,\n//         {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         }\n//       );\n//       // Update client list with the new details\n//       setClients(\n//         clients.map((client) =>\n//           client._id === editingClient._id ? editingClient : client\n//         )\n//       );\n//       setEditingClient(null); // Close the editing form\n//     } catch (err) {\n//       console.error('Error updating client:', err);\n//       setError('Failed to update client. Please try again.');\n//     }\n//   };\n\n//   const handleDelete = (clientId) => {\n//     axios\n//       .delete(`http://localhost:5005/api/users/${clientId}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then(() => {\n//         setClients(clients.filter((client) => client._id !== clientId));\n//         alert('Client deleted successfully');\n//       })\n//       .catch((err) => {\n//         console.error('Error deleting client:', err);\n//       });\n//   };\n\n//   return (\n//     <div className=\"dashboard\">\n//       {/* <h1 className='Dash'>Client Dashboard</h1> */}\n//       <PendingUsers />\n//       <h1 className='Dash'>Clients</h1>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Search clients...\"\n//         value={search}\n//         onChange={handleSearch}\n//       />\n\n//       {/* Filter Options */}\n//       <select name=\"region\" onChange={handleFilterChange} value={filters.region}>\n//         <option value=\"\">All Regions</option>\n//         <option value=\"North America\">North America</option>\n//         <option value=\"Europe\">Europe</option>\n//         <option value=\"Asia\">Asia</option>\n//       </select>\n//       <select\n//         name=\"industry\"\n//         onChange={handleFilterChange}\n//         value={filters.industry}\n//       >\n//         <option value=\"\">All Industries</option>\n//         <option value=\"Finance\">Finance</option>\n//         <option value=\"Technology\">Technology</option>\n//         <option value=\"Healthcare\">Healthcare</option>\n//       </select>\n//       <select\n//         name=\"status\"\n//         onChange={handleFilterChange}\n//         value={filters.status}\n//       >\n//         <option value=\"\">All Statuses</option>\n//         <option value=\"Active\">Active</option>\n//         <option value=\"Inactive\">Inactive</option>\n//       </select>\n\n//       <table>\n//         <thead>\n//           <tr>\n//             <th onClick={() => handleSort('client_name')}>Client Name</th>\n//             <th onClick={() => handleSort('status')}>Status</th>\n//             <th onClick={() => handleSort('industry')}>Industry</th>\n\n//             <th>Email</th>\n//             <th>Phone</th>\n//             <th>Contact Person</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {clients.map((client) => (\n//             <tr key={client._id}>\n//                 <td>\n//                   <Link to={`/client/${client._id}`}>{client.client_name}</Link>\n//                 </td>\n\n//             <td>{client.status}</td>\n//               <td>{client.industry}</td>\n//               <td>{client.email}</td>\n//               <td>{client.phone}</td>\n//               <td>{client.contact_person}</td>\n//               <td>\n//                 <button onClick={() => handleEditClick(client)}>Edit</button>\n//                 <button onClick={() => handleDelete(client._id)}>Delete</button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n\n//       {editingClient && (\n//         <div className=\"edit-modal\">\n//           <h3>Edit Client</h3>\n//           <input\n//             type=\"text\"\n//             name=\"client_name\"\n//             value={editingClient.client_name}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"contact_person\"\n//             value={editingClient.contact_person}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"email\"\n//             value={editingClient.email}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"phone\"\n//             value={editingClient.phone}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"industry\"\n//             value={editingClient.industry}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <h3>Address</h3>\n//           <input\n//             type=\"text\"\n//             name=\"street\"\n//             value={editingClient.address?.street}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"city\"\n//             value={editingClient.address?.city}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"state\"\n//             value={editingClient.address?.state}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"postal_code\"\n//             value={editingClient.address?.postal_code}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"country\"\n//             value={editingClient.address?.country}\n//             onChange={handleAddressChange}\n//           />\n//           <button onClick={handleEditSubmit}>Save</button>\n//           <button onClick={() => setEditingClient(null)}>Cancel</button>\n//           {error && <p>{error}</p>}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Box, Typography, TextField, Select, MenuItem, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button, Dialog, DialogActions, DialogContent, DialogTitle, InputLabel, FormControl } from '@mui/material';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { Link } from 'react-router-dom';\n// import Sidebar from '../components/Sidebar';\nimport PendingUsers from '../components/PendingUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [clients, setClients] = useState([]);\n  const [search, setSearch] = useState('');\n  const [filters, setFilters] = useState({\n    region: '',\n    industry: '',\n    status: ''\n  });\n  const [sortModel, setSortModel] = useState([{\n    field: 'client_name',\n    sort: 'asc'\n  }]);\n  const [authToken] = useState(localStorage.getItem('token') || '');\n  const [editingClient, setEditingClient] = useState(null);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    fetchClients();\n  }, [filters, sortModel]);\n  const fetchClients = async () => {\n    try {\n      var _sortModel$, _sortModel$2;\n      const query = new URLSearchParams({\n        search,\n        region: filters.region,\n        industry: filters.industry,\n        status: filters.status,\n        sortColumn: (_sortModel$ = sortModel[0]) === null || _sortModel$ === void 0 ? void 0 : _sortModel$.field,\n        sortOrder: (_sortModel$2 = sortModel[0]) === null || _sortModel$2 === void 0 ? void 0 : _sortModel$2.sort\n      });\n      const response = await axios.get(`http://localhost:5005/api/users?${query.toString()}`, {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      });\n      setClients(response.data);\n    } catch (err) {\n      console.error('Error fetching clients:', err);\n    }\n  };\n  const handleSearch = e => setSearch(e.target.value);\n  const handleFilterChange = e => setFilters({\n    ...filters,\n    [e.target.name]: e.target.value\n  });\n  const handleEditClick = client => setEditingClient(client);\n  const handleEditChange = e => setEditingClient({\n    ...editingClient,\n    [e.target.name]: e.target.value\n  });\n  const handleEditSubmit = async () => {\n    try {\n      await axios.put(`http://localhost:5005/api/users/${editingClient._id}`, editingClient, {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      });\n      setClients(clients.map(client => client._id === editingClient._id ? editingClient : client));\n      setEditingClient(null);\n    } catch (err) {\n      console.error('Error updating client:', err);\n      setError('Failed to update client.');\n    }\n  };\n  const handleDelete = async clientId => {\n    try {\n      await axios.delete(`http://localhost:5005/api/users/${clientId}`, {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      });\n      setClients(clients.filter(client => client._id !== clientId));\n      alert('Client deleted successfully');\n    } catch (err) {\n      console.error('Error deleting client:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1,\n        p: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(PendingUsers, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        sx: {\n          mb: 3\n        },\n        children: \"Clients Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        gap: 2,\n        mb: 3,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Search Clients\",\n          variant: \"outlined\",\n          value: search,\n          onChange: handleSearch,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Region\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            name: \"region\",\n            value: filters.region,\n            onChange: handleFilterChange,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: \"All Regions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"North America\",\n              children: \"North America\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Europe\",\n              children: \"Europe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Asia\",\n              children: \"Asia\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Industry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            name: \"industry\",\n            value: filters.industry,\n            onChange: handleFilterChange,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: \"All Industries\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Finance\",\n              children: \"Finance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Technology\",\n              children: \"Technology\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Healthcare\",\n              children: \"Healthcare\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            name: \"status\",\n            value: filters.status,\n            onChange: handleFilterChange,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: \"All Statuses\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Active\",\n              children: \"Active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Inactive\",\n              children: \"Inactive\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Client Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Industry\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Phone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Contact Person\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: clients.map(client => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/client/${client._id}`,\n                  children: client.client_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: client.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: client.industry\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: client.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: client.phone\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: client.contact_person\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  onClick: () => handleEditClick(client),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"error\",\n                  onClick: () => handleDelete(client._id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 19\n              }, this)]\n            }, client._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }, this), editingClient && /*#__PURE__*/_jsxDEV(Dialog, {\n        open: true,\n        onClose: () => setEditingClient(null),\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Edit Client\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Client Name\",\n            name: \"client_name\",\n            value: editingClient.client_name,\n            onChange: handleEditChange,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Contact Person\",\n            name: \"contact_person\",\n            value: editingClient.contact_person,\n            onChange: handleEditChange,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setEditingClient(null),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleEditSubmit,\n            variant: \"contained\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 360,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"TcK+CBmv3FHqdQjkhAq4/r8i4lc=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","Box","Typography","TextField","Select","MenuItem","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","Dialog","DialogActions","DialogContent","DialogTitle","InputLabel","FormControl","DataGrid","Link","PendingUsers","jsxDEV","_jsxDEV","Dashboard","_s","clients","setClients","search","setSearch","filters","setFilters","region","industry","status","sortModel","setSortModel","field","sort","authToken","localStorage","getItem","editingClient","setEditingClient","error","setError","fetchClients","_sortModel$","_sortModel$2","query","URLSearchParams","sortColumn","sortOrder","response","get","toString","headers","Authorization","data","err","console","handleSearch","e","target","value","handleFilterChange","name","handleEditClick","client","handleEditChange","handleEditSubmit","put","_id","map","handleDelete","clientId","delete","filter","alert","display","children","Sidebar","fileName","_jsxFileName","lineNumber","columnNumber","sx","flexGrow","p","variant","mb","gap","label","onChange","fullWidth","component","to","client_name","email","phone","contact_person","color","onClick","open","onClose","_c","$RefreshReg$"],"sources":["/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/Dashboard.js"],"sourcesContent":["\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './Dashboard.css';\n// import PendingUsers from \"../components/PendingUser\";\n// import { Link } from 'react-router-dom';\n\n// const Dashboard = () => {\n//   const [clients, setClients] = useState([]);\n//   const [search, setSearch] = useState('');\n//   const [filters, setFilters] = useState({\n//     region: '',\n//     industry: '',\n//     status: '',\n//   });\n//   const [sortOrder, setSortOrder] = useState('asc');\n//   const [sortColumn, setSortColumn] = useState('client_name');\n//   const [authToken, setAuthToken] = useState(localStorage.getItem('token') || '');\n//   const [editingClient, setEditingClient] = useState(null); // Client being edited\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     fetchClients();\n//   }, [filters, sortColumn, sortOrder]);\n\n//   const fetchClients = () => {\n//     const query = new URLSearchParams({\n//       search,\n//       region: filters.region,\n//       industry: filters.industry,\n//       status: filters.status,\n//       sortColumn,\n//       sortOrder,\n//     });\n\n//     axios\n//       .get(`http://localhost:5005/api/users?${query.toString()}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then((response) => {\n//         setClients(response.data);\n//       })\n//       .catch((err) => {\n//         console.error('Error fetching clients:', err);\n//       });\n//   };\n\n//   const handleSearch = (e) => {\n//     setSearch(e.target.value);\n//   };\n\n//   const handleFilterChange = (e) => {\n//     const { name, value } = e.target;\n//     setFilters({ ...filters, [name]: value });\n//   };\n\n//   const handleSort = (column) => {\n//     const newSortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n//     setSortOrder(newSortOrder);\n//     setSortColumn(column);\n//   };\n\n//   const handleEditClick = (client) => {\n//     setEditingClient(client); // Set the client for editing\n//   };\n\n//   const handleEditChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditingClient({ ...editingClient, [name]: value });\n//   };\n\n//   const handleAddressChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditingClient({\n//       ...editingClient,\n//       address: {\n//         ...editingClient.address,\n//         [name]: value,\n//       },\n//     });\n//   };\n\n//   const handleEditSubmit = async () => {\n//     try {\n//       await axios.put(\n//         `http://localhost:5005/api/users/${editingClient._id}`,\n//         editingClient,\n//         {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         }\n//       );\n//       // Update client list with the new details\n//       setClients(\n//         clients.map((client) =>\n//           client._id === editingClient._id ? editingClient : client\n//         )\n//       );\n//       setEditingClient(null); // Close the editing form\n//     } catch (err) {\n//       console.error('Error updating client:', err);\n//       setError('Failed to update client. Please try again.');\n//     }\n//   };\n\n//   const handleDelete = (clientId) => {\n//     axios\n//       .delete(`http://localhost:5005/api/users/${clientId}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then(() => {\n//         setClients(clients.filter((client) => client._id !== clientId));\n//         alert('Client deleted successfully');\n//       })\n//       .catch((err) => {\n//         console.error('Error deleting client:', err);\n//       });\n//   };\n\n//   return (\n//     <div className=\"dashboard\">\n//       {/* <h1 className='Dash'>Client Dashboard</h1> */}\n//       <PendingUsers />\n//       <h1 className='Dash'>Clients</h1>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Search clients...\"\n//         value={search}\n//         onChange={handleSearch}\n//       />\n\n//       {/* Filter Options */}\n//       <select name=\"region\" onChange={handleFilterChange} value={filters.region}>\n//         <option value=\"\">All Regions</option>\n//         <option value=\"North America\">North America</option>\n//         <option value=\"Europe\">Europe</option>\n//         <option value=\"Asia\">Asia</option>\n//       </select>\n//       <select\n//         name=\"industry\"\n//         onChange={handleFilterChange}\n//         value={filters.industry}\n//       >\n//         <option value=\"\">All Industries</option>\n//         <option value=\"Finance\">Finance</option>\n//         <option value=\"Technology\">Technology</option>\n//         <option value=\"Healthcare\">Healthcare</option>\n//       </select>\n//       <select\n//         name=\"status\"\n//         onChange={handleFilterChange}\n//         value={filters.status}\n//       >\n//         <option value=\"\">All Statuses</option>\n//         <option value=\"Active\">Active</option>\n//         <option value=\"Inactive\">Inactive</option>\n//       </select>\n\n//       <table>\n//         <thead>\n//           <tr>\n//             <th onClick={() => handleSort('client_name')}>Client Name</th>\n//             <th onClick={() => handleSort('status')}>Status</th>\n//             <th onClick={() => handleSort('industry')}>Industry</th>\n            \n//             <th>Email</th>\n//             <th>Phone</th>\n//             <th>Contact Person</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {clients.map((client) => (\n//             <tr key={client._id}>\n//                 <td>\n//                   <Link to={`/client/${client._id}`}>{client.client_name}</Link>\n//                 </td>\n              \n              \n//             <td>{client.status}</td>\n//               <td>{client.industry}</td>\n//               <td>{client.email}</td>\n//               <td>{client.phone}</td>\n//               <td>{client.contact_person}</td>\n//               <td>\n//                 <button onClick={() => handleEditClick(client)}>Edit</button>\n//                 <button onClick={() => handleDelete(client._id)}>Delete</button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n\n//       {editingClient && (\n//         <div className=\"edit-modal\">\n//           <h3>Edit Client</h3>\n//           <input\n//             type=\"text\"\n//             name=\"client_name\"\n//             value={editingClient.client_name}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"contact_person\"\n//             value={editingClient.contact_person}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"email\"\n//             value={editingClient.email}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"phone\"\n//             value={editingClient.phone}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"industry\"\n//             value={editingClient.industry}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <h3>Address</h3>\n//           <input\n//             type=\"text\"\n//             name=\"street\"\n//             value={editingClient.address?.street}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"city\"\n//             value={editingClient.address?.city}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"state\"\n//             value={editingClient.address?.state}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"postal_code\"\n//             value={editingClient.address?.postal_code}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"country\"\n//             value={editingClient.address?.country}\n//             onChange={handleAddressChange}\n//           />\n//           <button onClick={handleEditSubmit}>Save</button>\n//           <button onClick={() => setEditingClient(null)}>Cancel</button>\n//           {error && <p>{error}</p>}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { \n  Box, Typography, TextField, Select, MenuItem, \n  Table, TableBody, TableCell, TableContainer, TableHead, \n  TableRow, Paper, Button, Dialog, DialogActions, DialogContent, \n  DialogTitle, InputLabel, FormControl \n} from '@mui/material';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { Link } from 'react-router-dom';\n// import Sidebar from '../components/Sidebar';\nimport PendingUsers from '../components/PendingUser';\n\nconst Dashboard = () => {\n  const [clients, setClients] = useState([]);\n  const [search, setSearch] = useState('');\n  const [filters, setFilters] = useState({ region: '', industry: '', status: '' });\n  const [sortModel, setSortModel] = useState([{ field: 'client_name', sort: 'asc' }]);\n  const [authToken] = useState(localStorage.getItem('token') || '');\n  const [editingClient, setEditingClient] = useState(null);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    fetchClients();\n  }, [filters, sortModel]);\n\n  const fetchClients = async () => {\n    try {\n      const query = new URLSearchParams({\n        search,\n        region: filters.region,\n        industry: filters.industry,\n        status: filters.status,\n        sortColumn: sortModel[0]?.field,\n        sortOrder: sortModel[0]?.sort\n      });\n\n      const response = await axios.get(`http://localhost:5005/api/users?${query.toString()}`, {\n        headers: { Authorization: `Bearer ${authToken}` },\n      });\n      setClients(response.data);\n    } catch (err) {\n      console.error('Error fetching clients:', err);\n    }\n  };\n\n  const handleSearch = (e) => setSearch(e.target.value);\n\n  const handleFilterChange = (e) => setFilters({ ...filters, [e.target.name]: e.target.value });\n\n  const handleEditClick = (client) => setEditingClient(client);\n\n  const handleEditChange = (e) => setEditingClient({ ...editingClient, [e.target.name]: e.target.value });\n\n  const handleEditSubmit = async () => {\n    try {\n      await axios.put(\n        `http://localhost:5005/api/users/${editingClient._id}`,\n        editingClient,\n        { headers: { Authorization: `Bearer ${authToken}` } }\n      );\n      setClients(clients.map(client => (client._id === editingClient._id ? editingClient : client)));\n      setEditingClient(null);\n    } catch (err) {\n      console.error('Error updating client:', err);\n      setError('Failed to update client.');\n    }\n  };\n\n  const handleDelete = async (clientId) => {\n    try {\n      await axios.delete(`http://localhost:5005/api/users/${clientId}`, {\n        headers: { Authorization: `Bearer ${authToken}` },\n      });\n      setClients(clients.filter(client => client._id !== clientId));\n      alert('Client deleted successfully');\n    } catch (err) {\n      console.error('Error deleting client:', err);\n    }\n  };\n\n  return (\n    <Box display=\"flex\">\n      <Sidebar />\n      <Box sx={{ flexGrow: 1, p: 3 }}>\n        <PendingUsers />\n        <Typography variant=\"h4\" sx={{ mb: 3 }}>Clients Dashboard</Typography>\n\n        {/* Search & Filters */}\n        <Box display=\"flex\" gap={2} mb={3}>\n          <TextField \n            label=\"Search Clients\" \n            variant=\"outlined\" \n            value={search} \n            onChange={handleSearch} \n            fullWidth \n          />\n          <FormControl fullWidth>\n            <InputLabel>Region</InputLabel>\n            <Select name=\"region\" value={filters.region} onChange={handleFilterChange}>\n              <MenuItem value=\"\">All Regions</MenuItem>\n              <MenuItem value=\"North America\">North America</MenuItem>\n              <MenuItem value=\"Europe\">Europe</MenuItem>\n              <MenuItem value=\"Asia\">Asia</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl fullWidth>\n            <InputLabel>Industry</InputLabel>\n            <Select name=\"industry\" value={filters.industry} onChange={handleFilterChange}>\n              <MenuItem value=\"\">All Industries</MenuItem>\n              <MenuItem value=\"Finance\">Finance</MenuItem>\n              <MenuItem value=\"Technology\">Technology</MenuItem>\n              <MenuItem value=\"Healthcare\">Healthcare</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl fullWidth>\n            <InputLabel>Status</InputLabel>\n            <Select name=\"status\" value={filters.status} onChange={handleFilterChange}>\n              <MenuItem value=\"\">All Statuses</MenuItem>\n              <MenuItem value=\"Active\">Active</MenuItem>\n              <MenuItem value=\"Inactive\">Inactive</MenuItem>\n            </Select>\n          </FormControl>\n        </Box>\n\n        {/* Clients Table */}\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Client Name</TableCell>\n                <TableCell>Status</TableCell>\n                <TableCell>Industry</TableCell>\n                <TableCell>Email</TableCell>\n                <TableCell>Phone</TableCell>\n                <TableCell>Contact Person</TableCell>\n                <TableCell>Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {clients.map(client => (\n                <TableRow key={client._id}>\n                  <TableCell>\n                    <Link to={`/client/${client._id}`}>{client.client_name}</Link>\n                  </TableCell>\n                  <TableCell>{client.status}</TableCell>\n                  <TableCell>{client.industry}</TableCell>\n                  <TableCell>{client.email}</TableCell>\n                  <TableCell>{client.phone}</TableCell>\n                  <TableCell>{client.contact_person}</TableCell>\n                  <TableCell>\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => handleEditClick(client)}>Edit</Button>\n                    <Button variant=\"contained\" color=\"error\" onClick={() => handleDelete(client._id)}>Delete</Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n\n        {/* Edit Modal */}\n        {editingClient && (\n          <Dialog open={true} onClose={() => setEditingClient(null)}>\n            <DialogTitle>Edit Client</DialogTitle>\n            <DialogContent>\n              <TextField label=\"Client Name\" name=\"client_name\" value={editingClient.client_name} onChange={handleEditChange} fullWidth />\n              <TextField label=\"Contact Person\" name=\"contact_person\" value={editingClient.contact_person} onChange={handleEditChange} fullWidth />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={() => setEditingClient(null)}>Cancel</Button>\n              <Button onClick={handleEditSubmit} variant=\"contained\">Save</Button>\n            </DialogActions>\n          </Dialog>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Dashboard;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}