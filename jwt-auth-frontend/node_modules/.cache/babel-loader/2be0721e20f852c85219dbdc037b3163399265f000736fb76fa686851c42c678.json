{"ast":null,"code":"var _jsxFileName = \"/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/ClientLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jwtDecode } from \"jwt-decode\"; // Corrected import statement\nimport { useNavigate } from \"react-router-dom\"; // Use navigate to redirect\nimport LoginForm from \"./LoginForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClientLogin = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:5005/api/login\", {\n        email,\n        password\n      });\n      const {\n        token\n      } = response.data;\n      localStorage.setItem(\"jwtToken\", token);\n      const decodedToken = jwtDecode(token); // Corrected usage of jwtDecode\n      if (decodedToken.role === \"client\") {\n        window.location.href = `/client/${decodedToken.clientId}`;\n      } else {\n        setError(\"Unauthorized access.\");\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Invalid credentials. Please try again.\");\n    }\n  };\n  const handleRegisterRedirect = () => {\n    navigate(\"/client-register\"); // Redirect to the client registration page\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(LoginForm, {\n      onSubmit: handleSubmit,\n      onChange: (e, field) => field === \"email\" ? setEmail(e.target.value) : setPassword(e.target.value),\n      email: email,\n      password: password,\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRegisterRedirect,\n      style: linkStyle,\n      children: \"Register as Client\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(ClientLogin, \"Ktx5ktSKAplPJrsY5gRTpmAHqe0=\", false, function () {\n  return [useNavigate];\n});\n_c = ClientLogin;\nconst linkStyle = {\n  marginTop: '10px',\n  backgroundColor: '#4CAF50',\n  color: '#fff',\n  padding: '12px',\n  border: 'none',\n  fontSize: '1.1rem',\n  cursor: 'pointer',\n  borderRadius: '20px',\n  textDecoration: 'none',\n  width: '20%' // Ensure the button takes full width\n};\nexport default ClientLogin;\nvar _c;\n$RefreshReg$(_c, \"ClientLogin\");","map":{"version":3,"names":["React","useState","axios","jwtDecode","useNavigate","LoginForm","jsxDEV","_jsxDEV","ClientLogin","_s","email","setEmail","password","setPassword","error","setError","navigate","handleSubmit","e","preventDefault","response","post","token","data","localStorage","setItem","decodedToken","role","window","location","href","clientId","err","_err$response","_err$response$data","message","handleRegisterRedirect","children","onSubmit","onChange","field","target","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","linkStyle","_c","marginTop","backgroundColor","color","padding","border","fontSize","cursor","borderRadius","textDecoration","width","$RefreshReg$"],"sources":["/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/ClientLogin.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jwtDecode } from \"jwt-decode\"; // Corrected import statement\nimport { useNavigate } from \"react-router-dom\"; // Use navigate to redirect\nimport LoginForm from \"./LoginForm\";\n\nconst ClientLogin = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:5005/api/login\", { email, password });\n      const { token } = response.data;\n      localStorage.setItem(\"jwtToken\", token);\n\n      const decodedToken = jwtDecode(token); // Corrected usage of jwtDecode\n      if (decodedToken.role === \"client\") {\n        window.location.href = `/client/${decodedToken.clientId}`;\n      } else {\n        setError(\"Unauthorized access.\");\n      }\n    } catch (err) {\n      setError(err.response?.data?.message || \"Invalid credentials. Please try again.\");\n    }\n  };\n\n  const handleRegisterRedirect = () => {\n    navigate(\"/client-register\"); // Redirect to the client registration page\n  };\n\n  return (\n    <div>\n      <LoginForm\n        onSubmit={handleSubmit}\n        onChange={(e, field) => (field === \"email\" ? setEmail(e.target.value) : setPassword(e.target.value))}\n        email={email}\n        password={password}\n        error={error}\n      />\n      <button onClick={handleRegisterRedirect} style={linkStyle}>\n        Register as Client\n      </button>\n    </div>\n  );\n};\n\nconst linkStyle = {\n    marginTop: '10px',\n    backgroundColor: '#4CAF50',\n    color: '#fff',\n    padding: '12px',\n    border: 'none',\n    fontSize: '1.1rem',\n    cursor: 'pointer',\n    borderRadius: '20px',\n    textDecoration: 'none',\n    width: '20%', // Ensure the button takes full width\n  };\n  \n\nexport default ClientLogin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}