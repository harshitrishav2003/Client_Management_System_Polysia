{"ast":null,"code":"var _jsxFileName = \"/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/ContractManagement.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { useParams } from \"react-router-dom\";\n// import axios from \"axios\";\n// import \"../App.css\";\n\n// const ClientProfile = () => {\n//   const { clientId } = useParams(); // Get the clientId from the URL params\n//   const [client, setClient] = useState(null);\n//   const [projects, setProjects] = useState([]); // State to store projects\n//   const [error, setError] = useState(\"\");\n//   const [showForm, setShowForm] = useState(false); // Toggle form visibility\n//   const [formData, setFormData] = useState({\n//     project_name: \"\",\n//     description: \"\",\n//     start_date: \"\",\n//     end_date: \"\",\n//     status: \"Ongoing\", // Default value\n//     budget: \"\",\n//     team_members: [], // Initialize as an array\n//     client_id: clientId,\n//   });\n\n//   useEffect(() => {\n//     const fetchClientDetails = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5005/api/client/${clientId}`);\n//         setClient(response.data);\n//       } catch (err) {\n//         setError(\"Failed to load client details.\");\n//       }\n//     };\n\n//     const fetchClientProjects = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5005/api/projects/${clientId}`);\n//         // Make sure team_members is always an array\n//         const updatedProjects = response.data.map((project) => ({\n//           ...project,\n//           team_members: Array.isArray(project.team_members) ? project.team_members : [],\n//         }));\n//         setProjects(updatedProjects);\n//       } catch (err) {\n//         setError(\"Failed to load projects.\");\n//       }\n//     };\n\n//     fetchClientDetails();\n//     fetchClientProjects();\n//   }, [clientId]);\n\n//   const handleFormChange = (e) => {\n//     const { name, value } = e.target;\n\n//     // If the name is team_members, split the input string into an array\n//     if (name === \"team_members\") {\n//       setFormData({\n//         ...formData,\n//         [name]: value.split(\",\").map((member) => member.trim()), // Split string by comma and trim spaces\n//       });\n//     } else {\n//       setFormData({\n//         ...formData,\n//         [name]: value,\n//       });\n//     }\n//   };\n\n//   const handleFormSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await axios.post(\"http://localhost:5005/api/projects\", formData);\n//       setProjects([...projects, response.data]); // Add new project to the list\n//       setShowForm(false); // Hide form after submission\n//       console.log(response.data); // Handle the response data (e.g., display success message)\n//     } catch (error) {\n//       console.error(\"Error submitting form:\", error);\n//     }\n//   };\n\n//   if (error) {\n//     return <div>{error}</div>;\n//   }\n\n//   if (!client) {\n//     return <div>Loading...</div>;\n//   }\n\n//   return (\n//     <div >\n//      <h1 style={{ textAlign: \"center\" }}>Projects for {client.client_name}</h1>\n\n//       {/* Display Projects in Table Format */}\n//       <h2>Projects</h2>\n//       {projects.length === 0 ? (\n//         <p>No projects found for this client.</p>\n//       ) : (\n//         <table className=\"project-table\">\n//           <thead>\n//             <tr>\n//               <th>Project Name</th>\n//               <th>Description</th>\n//               <th>Status</th>\n//               <th>Start Date</th>\n//               <th>End Date</th>\n//               <th>Budget</th>\n//               <th>Team Members</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {projects.map((project) => (\n//               <tr key={project._id}>\n//                 <td>{project.project_name}</td>\n//                 <td>{project.description}</td>\n//                 <td>{project.status}</td>\n//                 <td>{new Date(project.start_date).toLocaleDateString()}</td>\n//                 <td>{new Date(project.end_date).toLocaleDateString()}</td>\n//                 <td>{project.budget}</td>\n//                 <td>{(project.team_members || []).join(\", \")}</td>\n\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       )}\n\n//       <div className=\"client-profile-card\">\n\n//       {/* Button to Show/Hide Form */}\n//       <button onClick={() => setShowForm(!showForm)}>\n//         {showForm ? \"Cancel\" : \"Add New Project\"}\n//       </button>\n\n//       {/* Project Creation Form */}\n//       {showForm && (\n//         <div className=\"project-form\">\n//           <h2>Create a New Project</h2>\n//           <form onSubmit={handleFormSubmit}>\n//             <div>\n//               <label>Project Name</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"project_name\"\n//                 value={formData.project_name}\n//                 onChange={handleFormChange}\n//                 required\n//               />\n//             </div>\n//             <div>\n//               <label>Description</label>\n//               <textarea\n//                 name=\"description\"\n//                 value={formData.description}\n//                 onChange={handleFormChange}\n//               />\n//             </div>\n//             <div>\n//               <label>Start Date</label>\n//               <input\n//                 type=\"date\"\n//                 name=\"start_date\"\n//                 value={formData.start_date}\n//                 onChange={handleFormChange}\n//               />\n//             </div>\n//             <div>\n//               <label>End Date</label>\n//               <input\n//                 type=\"date\"\n//                 name=\"end_date\"\n//                 value={formData.end_date}\n//                 onChange={handleFormChange}\n//               />\n//             </div>\n//             <div>\n//               <label>Status</label>\n//               <select name=\"status\" value={formData.status} onChange={handleFormChange}>\n//                 <option value=\"Ongoing\">Ongoing</option>\n//                 <option value=\"Completed\">Completed</option>\n//                 <option value=\"On Hold\">On Hold</option>\n//               </select>\n//             </div>\n//             <div>\n//               <label>Budget</label>\n//               <input\n//                 type=\"number\"\n//                 name=\"budget\"\n//                 value={formData.budget}\n//                 onChange={handleFormChange}\n//               />\n//             </div>\n//             <div>\n//               <label>Team Members</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"team_members\"\n//                 value={formData.team_members.join(\", \")} // Display as a comma-separated string\n//                 onChange={handleFormChange}\n//               />\n//             </div>\n//             <div>\n//               <button type=\"submit\">Create Project</button>\n//             </div>\n//           </form>\n//         </div>\n//       )}\n//     </div>\n//     </div>\n//   );\n// };\n\n// export default ClientProfile;\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClientProfile = () => {\n  _s();\n  const {\n    clientId\n  } = useParams(); // Get the clientId from the URL params\n  const [client, setClient] = useState(null);\n  const [projects, setProjects] = useState([]); // State to store projects\n  const [error, setError] = useState(\"\");\n  const [showForm, setShowForm] = useState(false); // Toggle form visibility\n  const [formData, setFormData] = useState({\n    project_name: \"\",\n    description: \"\",\n    start_date: \"\",\n    end_date: \"\",\n    budget: \"\",\n    client_id: clientId,\n    pdf: null\n  });\n  useEffect(() => {\n    const fetchClientDetails = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5005/api/client/${clientId}`);\n        setClient(response.data);\n      } catch (err) {\n        setError(\"Failed to load client details.\");\n      }\n    };\n    const fetchClientProjects = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5005/api/projects/${clientId}`);\n        // Make sure team_members is always an array\n        const updatedProjects = response.data.map(project => ({\n          ...project,\n          team_members: Array.isArray(project.team_members) ? project.team_members : []\n        }));\n        setProjects(updatedProjects);\n      } catch (err) {\n        setError(\"Failed to load projects.\");\n      }\n    };\n    fetchClientDetails();\n    fetchClientProjects();\n  }, [clientId]);\n  const handleFileChange = e => {\n    const {\n      name,\n      files\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: files[0] // Store the selected file\n    });\n  };\n  const handleFormChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  // const handleFormSubmit = async (e) => {\n  //   e.preventDefault();\n  //   try {\n  //     const response = await axios.post(\"http://localhost:5005/api/projects\", formData);\n  //     setProjects([...projects, response.data]); // Add new project to the list\n  //     setShowForm(false); // Hide form after submission\n  //     console.log(response.data); // Handle the response data (e.g., display success message)\n  //   } catch (error) {\n  //     console.error(\"Error submitting form:\", error);\n  //   }\n  // };\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    const formDataToSend = new FormData();\n    formDataToSend.append(\"project_name\", formData.project_name);\n    formDataToSend.append(\"description\", formData.description);\n    formDataToSend.append(\"start_date\", formData.start_date);\n    formDataToSend.append(\"end_date\", formData.end_date);\n    formDataToSend.append(\"budget\", formData.budget);\n\n    // Append the PDF file if it's selected\n    if (formData.pdf) {\n      formDataToSend.append(\"pdf\", formData.pdf);\n    }\n    try {\n      const response = await axios.post(\"http://localhost:5005/api/projects\", formDataToSend, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\" // Important for file uploads\n        }\n      });\n      setProjects([...projects, response.data]); // Add new project to the list\n      setShowForm(false); // Hide form after submission\n      console.log(response.data); // Handle the response data (e.g., display success message)\n    } catch (error) {\n      console.error(\"Error submitting form:\", error);\n    }\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 12\n    }, this);\n  }\n  if (!client) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: [\"Projects for \", client.client_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this), projects.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No projects found for this client.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"project-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Project Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Start Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"End Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Budget\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Team Members\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: projects.map(project => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: project.project_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: project.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(project.start_date).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(project.end_date).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: project.budget\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: (project.team_members || []).join(\", \")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 17\n          }, this)]\n        }, project._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"client-profile-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowForm(!showForm),\n        children: showForm ? \"Cancel\" : \"Add New Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Create a New Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleFormSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Project Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"project_name\",\n              value: formData.project_name,\n              onChange: handleFormChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"description\",\n              value: formData.description,\n              onChange: handleFormChange,\n              className: \"description-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              name: \"start_date\",\n              value: formData.start_date,\n              onChange: handleFormChange,\n              className: \"date-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"End Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              name: \"end_date\",\n              value: formData.end_date,\n              onChange: handleFormChange,\n              className: \"date-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Budget\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"budget\",\n              value: formData.budget,\n              onChange: handleFormChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Upload PDF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              name: \"pdf\",\n              accept: \"application/pdf\",\n              onChange: handleFileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Create Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 329,\n    columnNumber: 5\n  }, this);\n};\n_s(ClientProfile, \"UPZujesXeO7EdxdRa3vwIkWNNOg=\", false, function () {\n  return [useParams];\n});\n_c = ClientProfile;\nexport default ClientProfile;\nvar _c;\n$RefreshReg$(_c, \"ClientProfile\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","jsxDEV","_jsxDEV","ClientProfile","_s","clientId","client","setClient","projects","setProjects","error","setError","showForm","setShowForm","formData","setFormData","project_name","description","start_date","end_date","budget","client_id","pdf","fetchClientDetails","response","get","data","err","fetchClientProjects","updatedProjects","map","project","team_members","Array","isArray","handleFileChange","e","name","files","target","handleFormChange","value","handleFormSubmit","preventDefault","formDataToSend","FormData","append","post","headers","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","client_name","length","className","Date","toLocaleDateString","join","_id","onClick","onSubmit","type","onChange","required","accept","_c","$RefreshReg$"],"sources":["/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/ContractManagement.js"],"sourcesContent":["\n// import React, { useState, useEffect } from \"react\";\n// import { useParams } from \"react-router-dom\";\n// import axios from \"axios\";\n// import \"../App.css\";\n\n// const ClientProfile = () => {\n//   const { clientId } = useParams(); // Get the clientId from the URL params\n//   const [client, setClient] = useState(null);\n//   const [projects, setProjects] = useState([]); // State to store projects\n//   const [error, setError] = useState(\"\");\n//   const [showForm, setShowForm] = useState(false); // Toggle form visibility\n//   const [formData, setFormData] = useState({\n//     project_name: \"\",\n//     description: \"\",\n//     start_date: \"\",\n//     end_date: \"\",\n//     status: \"Ongoing\", // Default value\n//     budget: \"\",\n//     team_members: [], // Initialize as an array\n//     client_id: clientId,\n//   });\n\n//   useEffect(() => {\n//     const fetchClientDetails = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5005/api/client/${clientId}`);\n//         setClient(response.data);\n//       } catch (err) {\n//         setError(\"Failed to load client details.\");\n//       }\n//     };\n\n//     const fetchClientProjects = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5005/api/projects/${clientId}`);\n//         // Make sure team_members is always an array\n//         const updatedProjects = response.data.map((project) => ({\n//           ...project,\n//           team_members: Array.isArray(project.team_members) ? project.team_members : [],\n//         }));\n//         setProjects(updatedProjects);\n//       } catch (err) {\n//         setError(\"Failed to load projects.\");\n//       }\n//     };\n    \n\n//     fetchClientDetails();\n//     fetchClientProjects();\n//   }, [clientId]);\n\n//   const handleFormChange = (e) => {\n//     const { name, value } = e.target;\n\n//     // If the name is team_members, split the input string into an array\n//     if (name === \"team_members\") {\n//       setFormData({\n//         ...formData,\n//         [name]: value.split(\",\").map((member) => member.trim()), // Split string by comma and trim spaces\n//       });\n//     } else {\n//       setFormData({\n//         ...formData,\n//         [name]: value,\n//       });\n//     }\n//   };\n\n//   const handleFormSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await axios.post(\"http://localhost:5005/api/projects\", formData);\n//       setProjects([...projects, response.data]); // Add new project to the list\n//       setShowForm(false); // Hide form after submission\n//       console.log(response.data); // Handle the response data (e.g., display success message)\n//     } catch (error) {\n//       console.error(\"Error submitting form:\", error);\n//     }\n//   };\n\n//   if (error) {\n//     return <div>{error}</div>;\n//   }\n\n//   if (!client) {\n//     return <div>Loading...</div>;\n//   }\n\n//   return (\n//     <div >\n//      <h1 style={{ textAlign: \"center\" }}>Projects for {client.client_name}</h1>\n\n\n//       {/* Display Projects in Table Format */}\n//       <h2>Projects</h2>\n//       {projects.length === 0 ? (\n//         <p>No projects found for this client.</p>\n//       ) : (\n//         <table className=\"project-table\">\n//           <thead>\n//             <tr>\n//               <th>Project Name</th>\n//               <th>Description</th>\n//               <th>Status</th>\n//               <th>Start Date</th>\n//               <th>End Date</th>\n//               <th>Budget</th>\n//               <th>Team Members</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {projects.map((project) => (\n//               <tr key={project._id}>\n//                 <td>{project.project_name}</td>\n//                 <td>{project.description}</td>\n//                 <td>{project.status}</td>\n//                 <td>{new Date(project.start_date).toLocaleDateString()}</td>\n//                 <td>{new Date(project.end_date).toLocaleDateString()}</td>\n//                 <td>{project.budget}</td>\n//                 <td>{(project.team_members || []).join(\", \")}</td>\n\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       )}\n     \n//       <div className=\"client-profile-card\">\n\n//       {/* Button to Show/Hide Form */}\n//       <button onClick={() => setShowForm(!showForm)}>\n//         {showForm ? \"Cancel\" : \"Add New Project\"}\n//       </button>\n\n//       {/* Project Creation Form */}\n//       {showForm && (\n//         <div className=\"project-form\">\n//           <h2>Create a New Project</h2>\n//           <form onSubmit={handleFormSubmit}>\n//             <div>\n//               <label>Project Name</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"project_name\"\n//                 value={formData.project_name}\n//                 onChange={handleFormChange}\n//                 required\n//               />\n//             </div>\n//             <div>\n//               <label>Description</label>\n//               <textarea\n//                 name=\"description\"\n//                 value={formData.description}\n//                 onChange={handleFormChange}\n//               />\n//             </div>\n//             <div>\n//               <label>Start Date</label>\n//               <input\n//                 type=\"date\"\n//                 name=\"start_date\"\n//                 value={formData.start_date}\n//                 onChange={handleFormChange}\n//               />\n//             </div>\n//             <div>\n//               <label>End Date</label>\n//               <input\n//                 type=\"date\"\n//                 name=\"end_date\"\n//                 value={formData.end_date}\n//                 onChange={handleFormChange}\n//               />\n//             </div>\n//             <div>\n//               <label>Status</label>\n//               <select name=\"status\" value={formData.status} onChange={handleFormChange}>\n//                 <option value=\"Ongoing\">Ongoing</option>\n//                 <option value=\"Completed\">Completed</option>\n//                 <option value=\"On Hold\">On Hold</option>\n//               </select>\n//             </div>\n//             <div>\n//               <label>Budget</label>\n//               <input\n//                 type=\"number\"\n//                 name=\"budget\"\n//                 value={formData.budget}\n//                 onChange={handleFormChange}\n//               />\n//             </div>\n//             <div>\n//               <label>Team Members</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"team_members\"\n//                 value={formData.team_members.join(\", \")} // Display as a comma-separated string\n//                 onChange={handleFormChange}\n//               />\n//             </div>\n//             <div>\n//               <button type=\"submit\">Create Project</button>\n//             </div>\n//           </form>\n//         </div>\n//       )}\n//     </div>\n//     </div>\n//   );\n// };\n\n// export default ClientProfile;\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../App.css\";\n\nconst ClientProfile = () => {\n  const { clientId } = useParams(); // Get the clientId from the URL params\n  const [client, setClient] = useState(null);\n  const [projects, setProjects] = useState([]); // State to store projects\n  const [error, setError] = useState(\"\");\n  const [showForm, setShowForm] = useState(false); // Toggle form visibility\n  const [formData, setFormData] = useState({\n    project_name: \"\",\n    description: \"\",\n    start_date: \"\",\n    end_date: \"\",\n    budget: \"\",\n    client_id: clientId,\n    pdf: null,\n  });\n\n  useEffect(() => {\n    const fetchClientDetails = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5005/api/client/${clientId}`);\n        setClient(response.data);\n      } catch (err) {\n        setError(\"Failed to load client details.\");\n      }\n    };\n\n    const fetchClientProjects = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5005/api/projects/${clientId}`);\n        // Make sure team_members is always an array\n        const updatedProjects = response.data.map((project) => ({\n          ...project,\n          team_members: Array.isArray(project.team_members) ? project.team_members : [],\n        }));\n        setProjects(updatedProjects);\n      } catch (err) {\n        setError(\"Failed to load projects.\");\n      }\n    };\n\n    fetchClientDetails();\n    fetchClientProjects();\n  }, [clientId]);\n  const handleFileChange = (e) => {\n    const { name, files } = e.target;\n    setFormData({\n      ...formData,\n      [name]: files[0], // Store the selected file\n    });\n  };\n  \n  const handleFormChange = (e) => {\n    const { name, value } = e.target;\n\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  // const handleFormSubmit = async (e) => {\n  //   e.preventDefault();\n  //   try {\n  //     const response = await axios.post(\"http://localhost:5005/api/projects\", formData);\n  //     setProjects([...projects, response.data]); // Add new project to the list\n  //     setShowForm(false); // Hide form after submission\n  //     console.log(response.data); // Handle the response data (e.g., display success message)\n  //   } catch (error) {\n  //     console.error(\"Error submitting form:\", error);\n  //   }\n  // };\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n  \n    const formDataToSend = new FormData();\n    formDataToSend.append(\"project_name\", formData.project_name);\n    formDataToSend.append(\"description\", formData.description);\n    formDataToSend.append(\"start_date\", formData.start_date);\n    formDataToSend.append(\"end_date\", formData.end_date);\n    formDataToSend.append(\"budget\", formData.budget);\n  \n    // Append the PDF file if it's selected\n    if (formData.pdf) {\n      formDataToSend.append(\"pdf\", formData.pdf);\n    }\n  \n    try {\n      const response = await axios.post(\"http://localhost:5005/api/projects\", formDataToSend, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\", // Important for file uploads\n        },\n      });\n      setProjects([...projects, response.data]); // Add new project to the list\n      setShowForm(false); // Hide form after submission\n      console.log(response.data); // Handle the response data (e.g., display success message)\n    } catch (error) {\n      console.error(\"Error submitting form:\", error);\n    }\n  };\n  \n  if (error) {\n    return <div>{error}</div>;\n  }\n\n  if (!client) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <h1 style={{ textAlign: \"center\" }}>Projects for {client.client_name}</h1>\n\n      {/* Display Projects in Table Format */}\n      <h2>Projects</h2>\n      {projects.length === 0 ? (\n        <p>No projects found for this client.</p>\n      ) : (\n        <table className=\"project-table\">\n          <thead>\n            <tr>\n              <th>Project Name</th>\n              <th>Description</th>\n              <th>Start Date</th>\n              <th>End Date</th>\n              <th>Budget</th>\n              <th>Team Members</th>\n            </tr>\n          </thead>\n          <tbody>\n            {projects.map((project) => (\n              <tr key={project._id}>\n                <td>{project.project_name}</td>\n                <td>{project.description}</td>\n                <td>{new Date(project.start_date).toLocaleDateString()}</td>\n                <td>{new Date(project.end_date).toLocaleDateString()}</td>\n                <td>{project.budget}</td>\n                <td>{(project.team_members || []).join(\", \")}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n\n      <div className=\"client-profile-card\">\n        {/* Button to Show/Hide Form */}\n        <button onClick={() => setShowForm(!showForm)}>\n          {showForm ? \"Cancel\" : \"Add New Project\"}\n        </button>\n\n        {/* Project Creation Form */}\n        {showForm && (\n          <div className=\"project-form\">\n          <h2>Create a New Project</h2>\n          <form onSubmit={handleFormSubmit}>\n            <div>\n              <label>Project Name</label>\n              <input\n                type=\"text\"\n                name=\"project_name\"\n                value={formData.project_name}\n                onChange={handleFormChange}\n                required\n              />\n            </div>\n            <div>\n              <label>Description</label>\n              <textarea\n                name=\"description\"\n                value={formData.description}\n                onChange={handleFormChange}\n                className=\"description-input\"\n              />\n            </div>\n            <div>\n              <label>Start Date</label>\n              <input\n                type=\"date\"\n                name=\"start_date\"\n                value={formData.start_date}\n                onChange={handleFormChange}\n                className=\"date-input\"\n              />\n            </div>\n            <div>\n              <label>End Date</label>\n              <input\n                type=\"date\"\n                name=\"end_date\"\n                value={formData.end_date}\n                onChange={handleFormChange}\n                className=\"date-input\"\n              />\n            </div>\n            <div>\n              <label>Budget</label>\n              <input\n                type=\"number\"\n                name=\"budget\"\n                value={formData.budget}\n                onChange={handleFormChange}\n              />\n            </div>\n            <div>\n              <label>Upload PDF</label>\n              <input\n                type=\"file\"\n                name=\"pdf\"\n                accept=\"application/pdf\"\n                onChange={handleFileChange}\n              />\n            </div>\n            <div>\n              <button type=\"submit\">Create Project</button>\n            </div>\n          </form>\n        </div>\n        \n        \n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ClientProfile;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}