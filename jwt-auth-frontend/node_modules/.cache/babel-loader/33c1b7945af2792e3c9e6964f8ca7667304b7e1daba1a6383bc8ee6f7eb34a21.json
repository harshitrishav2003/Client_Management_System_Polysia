{"ast":null,"code":"var _jsxFileName = \"/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './Dashboard.css';\n// import PendingUsers from \"../components/PendingUser\";\n// import { Link } from 'react-router-dom';\n\n// const Dashboard = () => {\n//   const [clients, setClients] = useState([]);\n//   const [search, setSearch] = useState('');\n//   const [filters, setFilters] = useState({\n//     region: '',\n//     industry: '',\n//     status: '',\n//   });\n//   const [sortOrder, setSortOrder] = useState('asc');\n//   const [sortColumn, setSortColumn] = useState('client_name');\n//   const [authToken, setAuthToken] = useState(localStorage.getItem('token') || '');\n//   const [editingClient, setEditingClient] = useState(null); // Client being edited\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     fetchClients();\n//   }, [filters, sortColumn, sortOrder]);\n\n//   const fetchClients = () => {\n//     const query = new URLSearchParams({\n//       search,\n//       region: filters.region,\n//       industry: filters.industry,\n//       status: filters.status,\n//       sortColumn,\n//       sortOrder,\n//     });\n\n//     axios\n//       .get(`http://localhost:5005/api/users?${query.toString()}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then((response) => {\n//         setClients(response.data);\n//       })\n//       .catch((err) => {\n//         console.error('Error fetching clients:', err);\n//       });\n//   };\n\n//   const handleSearch = (e) => {\n//     setSearch(e.target.value);\n//   };\n\n//   const handleFilterChange = (e) => {\n//     const { name, value } = e.target;\n//     setFilters({ ...filters, [name]: value });\n//   };\n\n//   const handleSort = (column) => {\n//     const newSortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n//     setSortOrder(newSortOrder);\n//     setSortColumn(column);\n//   };\n\n//   const handleEditClick = (client) => {\n//     setEditingClient(client); // Set the client for editing\n//   };\n\n//   const handleEditChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditingClient({ ...editingClient, [name]: value });\n//   };\n\n//   const handleAddressChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditingClient({\n//       ...editingClient,\n//       address: {\n//         ...editingClient.address,\n//         [name]: value,\n//       },\n//     });\n//   };\n\n//   const handleEditSubmit = async () => {\n//     try {\n//       await axios.put(\n//         `http://localhost:5005/api/users/${editingClient._id}`,\n//         editingClient,\n//         {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         }\n//       );\n//       // Update client list with the new details\n//       setClients(\n//         clients.map((client) =>\n//           client._id === editingClient._id ? editingClient : client\n//         )\n//       );\n//       setEditingClient(null); // Close the editing form\n//     } catch (err) {\n//       console.error('Error updating client:', err);\n//       setError('Failed to update client. Please try again.');\n//     }\n//   };\n\n//   const handleDelete = (clientId) => {\n//     axios\n//       .delete(`http://localhost:5005/api/users/${clientId}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then(() => {\n//         setClients(clients.filter((client) => client._id !== clientId));\n//         alert('Client deleted successfully');\n//       })\n//       .catch((err) => {\n//         console.error('Error deleting client:', err);\n//       });\n//   };\n\n//   return (\n//     <div className=\"dashboard\">\n//       {/* <h1 className='Dash'>Client Dashboard</h1> */}\n//       <PendingUsers />\n//       <h1 className='Dash'>Clients</h1>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Search clients...\"\n//         value={search}\n//         onChange={handleSearch}\n//       />\n\n//       {/* Filter Options */}\n//       <select name=\"region\" onChange={handleFilterChange} value={filters.region}>\n//         <option value=\"\">All Regions</option>\n//         <option value=\"North America\">North America</option>\n//         <option value=\"Europe\">Europe</option>\n//         <option value=\"Asia\">Asia</option>\n//       </select>\n//       <select\n//         name=\"industry\"\n//         onChange={handleFilterChange}\n//         value={filters.industry}\n//       >\n//         <option value=\"\">All Industries</option>\n//         <option value=\"Finance\">Finance</option>\n//         <option value=\"Technology\">Technology</option>\n//         <option value=\"Healthcare\">Healthcare</option>\n//       </select>\n//       <select\n//         name=\"status\"\n//         onChange={handleFilterChange}\n//         value={filters.status}\n//       >\n//         <option value=\"\">All Statuses</option>\n//         <option value=\"Active\">Active</option>\n//         <option value=\"Inactive\">Inactive</option>\n//       </select>\n\n//       <table>\n//         <thead>\n//           <tr>\n//             <th onClick={() => handleSort('client_name')}>Client Name</th>\n//             <th onClick={() => handleSort('status')}>Status</th>\n//             <th onClick={() => handleSort('industry')}>Industry</th>\n\n//             <th>Email</th>\n//             <th>Phone</th>\n//             <th>Contact Person</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {clients.map((client) => (\n//             <tr key={client._id}>\n//                 <td>\n//                   <Link to={`/client/${client._id}`}>{client.client_name}</Link>\n//                 </td>\n\n//             <td>{client.status}</td>\n//               <td>{client.industry}</td>\n//               <td>{client.email}</td>\n//               <td>{client.phone}</td>\n//               <td>{client.contact_person}</td>\n//               <td>\n//                 <button onClick={() => handleEditClick(client)}>Edit</button>\n//                 <button onClick={() => handleDelete(client._id)}>Delete</button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n\n//       {editingClient && (\n//         <div className=\"edit-modal\">\n//           <h3>Edit Client</h3>\n//           <input\n//             type=\"text\"\n//             name=\"client_name\"\n//             value={editingClient.client_name}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"contact_person\"\n//             value={editingClient.contact_person}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"email\"\n//             value={editingClient.email}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"phone\"\n//             value={editingClient.phone}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"industry\"\n//             value={editingClient.industry}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <h3>Address</h3>\n//           <input\n//             type=\"text\"\n//             name=\"street\"\n//             value={editingClient.address?.street}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"city\"\n//             value={editingClient.address?.city}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"state\"\n//             value={editingClient.address?.state}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"postal_code\"\n//             value={editingClient.address?.postal_code}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"country\"\n//             value={editingClient.address?.country}\n//             onChange={handleAddressChange}\n//           />\n//           <button onClick={handleEditSubmit}>Save</button>\n//           <button onClick={() => setEditingClient(null)}>Cancel</button>\n//           {error && <p>{error}</p>}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Button, Table, Select, Modal, Input, Form, Typography, message, Spin, Card, Space, Alert } from \"antd\";\nimport { EditOutlined, EyeOutlined, CheckOutlined, CloseOutlined } from \"@ant-design/icons\";\nimport \"antd/dist/reset.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\nconst {\n  Option\n} = Select;\nconst Dashboard = () => {\n  _s();\n  const [pendingProjects, setPendingProjects] = useState([]);\n  const [approvedProjects, setApprovedProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [editProject, setEditProject] = useState(null);\n  const [form] = Form.useForm();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5005/api/projects\");\n        const allProjects = response.data;\n        setPendingProjects(allProjects.filter(project => !project.isApproved));\n        setApprovedProjects(allProjects.filter(project => project.isApproved));\n      } catch (err) {\n        setError(\"Failed to fetch projects. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProjects();\n  }, []);\n  const handleViewDetails = projectId => navigate(`/project/${projectId}`);\n  const handleApprove = async projectId => {\n    try {\n      await axios.put(`http://localhost:5005/api/projects/${projectId}/approve`);\n      message.success(\"Project approved successfully\");\n      setPendingProjects(prev => prev.filter(project => project._id !== projectId));\n      const approvedProject = pendingProjects.find(project => project._id === projectId);\n      setApprovedProjects(prev => [...prev, {\n        ...approvedProject,\n        isApproved: true\n      }]);\n    } catch (err) {\n      message.error(\"Failed to approve project\");\n    }\n  };\n  const handleReject = async projectId => {\n    try {\n      await axios.put(`http://localhost:5005/api/projects/${projectId}/reject`);\n      message.success(\"Project rejected successfully\");\n      setPendingProjects(prev => prev.filter(project => project._id !== projectId));\n    } catch (err) {\n      message.error(\"Failed to reject project\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"24px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      level: 2,\n      style: {\n        textAlign: \"center\",\n        marginBottom: \"24px\"\n      },\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Spin, {\n      size: \"large\",\n      style: {\n        display: \"block\",\n        margin: \"auto\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Alert, {\n      message: error,\n      type: \"error\",\n      showIcon: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        title: \"Pending Projects\",\n        bordered: false,\n        style: {\n          marginBottom: \"20px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          dataSource: pendingProjects,\n          rowKey: \"_id\",\n          columns: [{\n            title: \"Project ID\",\n            dataIndex: \"_id\"\n          }, {\n            title: \"Project Name\",\n            dataIndex: \"project_name\"\n          }, {\n            title: \"Client\",\n            dataIndex: [\"client_id\", \"client_name\"]\n          }, {\n            title: \"Actions\",\n            render: (_, project) => /*#__PURE__*/_jsxDEV(Space, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                icon: /*#__PURE__*/_jsxDEV(CheckOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 52\n                }, this),\n                onClick: () => handleApprove(project._id),\n                children: \"Approve\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                danger: true,\n                icon: /*#__PURE__*/_jsxDEV(CloseOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 44\n                }, this),\n                onClick: () => handleReject(project._id),\n                children: \"Reject\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 21\n            }, this)\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        title: \"Approved Projects\",\n        bordered: false,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          dataSource: approvedProjects,\n          rowKey: \"_id\",\n          columns: [{\n            title: \"Project ID\",\n            dataIndex: \"_id\"\n          }, {\n            title: \"Project Name\",\n            dataIndex: \"project_name\"\n          }, {\n            title: \"Client\",\n            dataIndex: [\"client_id\", \"client_name\"]\n          }, {\n            title: \"Actions\",\n            render: (_, project) => /*#__PURE__*/_jsxDEV(Space, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                icon: /*#__PURE__*/_jsxDEV(EyeOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 37\n                }, this),\n                onClick: () => handleViewDetails(project._id),\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                icon: /*#__PURE__*/_jsxDEV(EditOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 37\n                }, this),\n                onClick: () => setEditProject(project),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 21\n            }, this)\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 356,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"Y4TnbjWXLpTZC+ukrN4kCLKI/Dg=\", false, function () {\n  return [Form.useForm, useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","Button","Table","Select","Modal","Input","Form","Typography","message","Spin","Card","Space","Alert","EditOutlined","EyeOutlined","CheckOutlined","CloseOutlined","jsxDEV","_jsxDEV","Fragment","_Fragment","Title","Option","Dashboard","_s","pendingProjects","setPendingProjects","approvedProjects","setApprovedProjects","loading","setLoading","error","setError","editProject","setEditProject","form","useForm","navigate","fetchProjects","response","get","allProjects","data","filter","project","isApproved","err","handleViewDetails","projectId","handleApprove","put","success","prev","_id","approvedProject","find","handleReject","style","padding","children","level","textAlign","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","size","display","margin","type","showIcon","title","bordered","dataSource","rowKey","columns","dataIndex","render","_","icon","onClick","danger","_c","$RefreshReg$"],"sources":["/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/Dashboard.js"],"sourcesContent":["\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './Dashboard.css';\n// import PendingUsers from \"../components/PendingUser\";\n// import { Link } from 'react-router-dom';\n\n// const Dashboard = () => {\n//   const [clients, setClients] = useState([]);\n//   const [search, setSearch] = useState('');\n//   const [filters, setFilters] = useState({\n//     region: '',\n//     industry: '',\n//     status: '',\n//   });\n//   const [sortOrder, setSortOrder] = useState('asc');\n//   const [sortColumn, setSortColumn] = useState('client_name');\n//   const [authToken, setAuthToken] = useState(localStorage.getItem('token') || '');\n//   const [editingClient, setEditingClient] = useState(null); // Client being edited\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     fetchClients();\n//   }, [filters, sortColumn, sortOrder]);\n\n//   const fetchClients = () => {\n//     const query = new URLSearchParams({\n//       search,\n//       region: filters.region,\n//       industry: filters.industry,\n//       status: filters.status,\n//       sortColumn,\n//       sortOrder,\n//     });\n\n//     axios\n//       .get(`http://localhost:5005/api/users?${query.toString()}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then((response) => {\n//         setClients(response.data);\n//       })\n//       .catch((err) => {\n//         console.error('Error fetching clients:', err);\n//       });\n//   };\n\n//   const handleSearch = (e) => {\n//     setSearch(e.target.value);\n//   };\n\n//   const handleFilterChange = (e) => {\n//     const { name, value } = e.target;\n//     setFilters({ ...filters, [name]: value });\n//   };\n\n//   const handleSort = (column) => {\n//     const newSortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n//     setSortOrder(newSortOrder);\n//     setSortColumn(column);\n//   };\n\n//   const handleEditClick = (client) => {\n//     setEditingClient(client); // Set the client for editing\n//   };\n\n//   const handleEditChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditingClient({ ...editingClient, [name]: value });\n//   };\n\n//   const handleAddressChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditingClient({\n//       ...editingClient,\n//       address: {\n//         ...editingClient.address,\n//         [name]: value,\n//       },\n//     });\n//   };\n\n//   const handleEditSubmit = async () => {\n//     try {\n//       await axios.put(\n//         `http://localhost:5005/api/users/${editingClient._id}`,\n//         editingClient,\n//         {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         }\n//       );\n//       // Update client list with the new details\n//       setClients(\n//         clients.map((client) =>\n//           client._id === editingClient._id ? editingClient : client\n//         )\n//       );\n//       setEditingClient(null); // Close the editing form\n//     } catch (err) {\n//       console.error('Error updating client:', err);\n//       setError('Failed to update client. Please try again.');\n//     }\n//   };\n\n//   const handleDelete = (clientId) => {\n//     axios\n//       .delete(`http://localhost:5005/api/users/${clientId}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then(() => {\n//         setClients(clients.filter((client) => client._id !== clientId));\n//         alert('Client deleted successfully');\n//       })\n//       .catch((err) => {\n//         console.error('Error deleting client:', err);\n//       });\n//   };\n\n//   return (\n//     <div className=\"dashboard\">\n//       {/* <h1 className='Dash'>Client Dashboard</h1> */}\n//       <PendingUsers />\n//       <h1 className='Dash'>Clients</h1>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Search clients...\"\n//         value={search}\n//         onChange={handleSearch}\n//       />\n\n//       {/* Filter Options */}\n//       <select name=\"region\" onChange={handleFilterChange} value={filters.region}>\n//         <option value=\"\">All Regions</option>\n//         <option value=\"North America\">North America</option>\n//         <option value=\"Europe\">Europe</option>\n//         <option value=\"Asia\">Asia</option>\n//       </select>\n//       <select\n//         name=\"industry\"\n//         onChange={handleFilterChange}\n//         value={filters.industry}\n//       >\n//         <option value=\"\">All Industries</option>\n//         <option value=\"Finance\">Finance</option>\n//         <option value=\"Technology\">Technology</option>\n//         <option value=\"Healthcare\">Healthcare</option>\n//       </select>\n//       <select\n//         name=\"status\"\n//         onChange={handleFilterChange}\n//         value={filters.status}\n//       >\n//         <option value=\"\">All Statuses</option>\n//         <option value=\"Active\">Active</option>\n//         <option value=\"Inactive\">Inactive</option>\n//       </select>\n\n//       <table>\n//         <thead>\n//           <tr>\n//             <th onClick={() => handleSort('client_name')}>Client Name</th>\n//             <th onClick={() => handleSort('status')}>Status</th>\n//             <th onClick={() => handleSort('industry')}>Industry</th>\n            \n//             <th>Email</th>\n//             <th>Phone</th>\n//             <th>Contact Person</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {clients.map((client) => (\n//             <tr key={client._id}>\n//                 <td>\n//                   <Link to={`/client/${client._id}`}>{client.client_name}</Link>\n//                 </td>\n              \n              \n//             <td>{client.status}</td>\n//               <td>{client.industry}</td>\n//               <td>{client.email}</td>\n//               <td>{client.phone}</td>\n//               <td>{client.contact_person}</td>\n//               <td>\n//                 <button onClick={() => handleEditClick(client)}>Edit</button>\n//                 <button onClick={() => handleDelete(client._id)}>Delete</button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n\n//       {editingClient && (\n//         <div className=\"edit-modal\">\n//           <h3>Edit Client</h3>\n//           <input\n//             type=\"text\"\n//             name=\"client_name\"\n//             value={editingClient.client_name}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"contact_person\"\n//             value={editingClient.contact_person}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"email\"\n//             value={editingClient.email}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"phone\"\n//             value={editingClient.phone}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"industry\"\n//             value={editingClient.industry}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <h3>Address</h3>\n//           <input\n//             type=\"text\"\n//             name=\"street\"\n//             value={editingClient.address?.street}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"city\"\n//             value={editingClient.address?.city}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"state\"\n//             value={editingClient.address?.state}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"postal_code\"\n//             value={editingClient.address?.postal_code}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"country\"\n//             value={editingClient.address?.country}\n//             onChange={handleAddressChange}\n//           />\n//           <button onClick={handleEditSubmit}>Save</button>\n//           <button onClick={() => setEditingClient(null)}>Cancel</button>\n//           {error && <p>{error}</p>}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Table,\n  Select,\n  Modal,\n  Input,\n  Form,\n  Typography,\n  message,\n  Spin,\n  Card,\n  Space,\n  Alert,\n} from \"antd\";\nimport {\n  EditOutlined,\n  EyeOutlined,\n  CheckOutlined,\n  CloseOutlined,\n} from \"@ant-design/icons\";\nimport \"antd/dist/reset.css\";\n\nconst { Title } = Typography;\nconst { Option } = Select;\n\nconst Dashboard = () => {\n  const [pendingProjects, setPendingProjects] = useState([]);\n  const [approvedProjects, setApprovedProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [editProject, setEditProject] = useState(null);\n  const [form] = Form.useForm();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5005/api/projects\");\n        const allProjects = response.data;\n        setPendingProjects(allProjects.filter((project) => !project.isApproved));\n        setApprovedProjects(allProjects.filter((project) => project.isApproved));\n      } catch (err) {\n        setError(\"Failed to fetch projects. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProjects();\n  }, []);\n\n  const handleViewDetails = (projectId) => navigate(`/project/${projectId}`);\n\n  const handleApprove = async (projectId) => {\n    try {\n      await axios.put(`http://localhost:5005/api/projects/${projectId}/approve`);\n      message.success(\"Project approved successfully\");\n      setPendingProjects((prev) => prev.filter((project) => project._id !== projectId));\n      const approvedProject = pendingProjects.find((project) => project._id === projectId);\n      setApprovedProjects((prev) => [...prev, { ...approvedProject, isApproved: true }]);\n    } catch (err) {\n      message.error(\"Failed to approve project\");\n    }\n  };\n\n  const handleReject = async (projectId) => {\n    try {\n      await axios.put(`http://localhost:5005/api/projects/${projectId}/reject`);\n      message.success(\"Project rejected successfully\");\n      setPendingProjects((prev) => prev.filter((project) => project._id !== projectId));\n    } catch (err) {\n      message.error(\"Failed to reject project\");\n    }\n  };\n\n  return (\n    <div style={{ padding: \"24px\" }}>\n      <Title level={2} style={{ textAlign: \"center\", marginBottom: \"24px\" }}>\n        Dashboard\n      </Title>\n\n      {loading ? (\n        <Spin size=\"large\" style={{ display: \"block\", margin: \"auto\" }} />\n      ) : error ? (\n        <Alert message={error} type=\"error\" showIcon />\n      ) : (\n        <>\n          <Card title=\"Pending Projects\" bordered={false} style={{ marginBottom: \"20px\" }}>\n            <Table\n              dataSource={pendingProjects}\n              rowKey=\"_id\"\n              columns={[\n                { title: \"Project ID\", dataIndex: \"_id\" },\n                { title: \"Project Name\", dataIndex: \"project_name\" },\n                { title: \"Client\", dataIndex: [\"client_id\", \"client_name\"] },\n                {\n                  title: \"Actions\",\n                  render: (_, project) => (\n                    <Space>\n                      <Button type=\"primary\" icon={<CheckOutlined />} onClick={() => handleApprove(project._id)}>\n                        Approve\n                      </Button>\n                      <Button danger icon={<CloseOutlined />} onClick={() => handleReject(project._id)}>\n                        Reject\n                      </Button>\n                    </Space>\n                  ),\n                },\n              ]}\n            />\n          </Card>\n\n          <Card title=\"Approved Projects\" bordered={false}>\n            <Table\n              dataSource={approvedProjects}\n              rowKey=\"_id\"\n              columns={[\n                { title: \"Project ID\", dataIndex: \"_id\" },\n                { title: \"Project Name\", dataIndex: \"project_name\" },\n                { title: \"Client\", dataIndex: [\"client_id\", \"client_name\"] },\n                {\n                  title: \"Actions\",\n                  render: (_, project) => (\n                    <Space>\n                      <Button icon={<EyeOutlined />} onClick={() => handleViewDetails(project._id)}>\n                        View\n                      </Button>\n                      <Button icon={<EditOutlined />} onClick={() => setEditProject(project)}>\n                        Edit\n                      </Button>\n                    </Space>\n                  ),\n                },\n              ]}\n            />\n          </Card>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}