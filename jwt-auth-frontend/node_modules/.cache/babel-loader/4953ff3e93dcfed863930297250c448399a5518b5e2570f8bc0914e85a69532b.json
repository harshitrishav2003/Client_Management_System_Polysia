{"ast":null,"code":"var _jsxFileName = \"/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      role: \"user\",\n      content: input\n    };\n\n    // Add user message to UI\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    try {\n      // Sending message to the backend\n      const response = await axios.post(\"http://localhost:5001/chat\", {\n        message: input\n      });\n\n      // Checking the response structure and handling the reply\n      const botMessage = {\n        role: \"bot\",\n        content: response.data.reply || \"Sorry, I couldn't understand that.\"\n      };\n\n      // Add bot response to UI\n      setMessages(prevMessages => [...prevMessages, userMessage, botMessage]);\n    } catch (error) {\n      console.error(\"Error:\", error);\n\n      // In case of error, display a fallback message\n      const botMessage = {\n        role: \"bot\",\n        content: \"Sorry, there was an error with the chatbot service.\"\n      };\n      setMessages(prevMessages => [...prevMessages, userMessage, botMessage]);\n    }\n    setInput(\"\"); // Clear the input field\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"400px\",\n      margin: \"auto\",\n      padding: \"20px\",\n      border: \"1px solid #ccc\",\n      borderRadius: \"10px\",\n      backgroundColor: \"#f9f9f9\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"300px\",\n        overflowY: \"scroll\",\n        border: \"1px solid #ddd\",\n        padding: \"10px\",\n        backgroundColor: \"#fff\",\n        borderRadius: \"5px\"\n      },\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: msg.role === \"user\" ? \"right\" : \"left\",\n          marginBottom: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.role === \"user\" ? \"You\" : \"Bot\", \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), \" \", msg.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type a message...\",\n        style: {\n          width: \"80%\",\n          padding: \"10px\",\n          borderRadius: \"5px\",\n          border: \"1px solid #ccc\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        style: {\n          width: \"18%\",\n          padding: \"10px\",\n          marginLeft: \"5px\",\n          backgroundColor: \"#4CAF50\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"5px\",\n          cursor: \"pointer\"\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"bxrUXnlHDt+zalfpk8IFX5tJV48=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","input","setInput","sendMessage","trim","userMessage","role","content","prevMessages","response","post","message","botMessage","data","reply","error","console","style","width","margin","padding","border","borderRadius","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","height","overflowY","map","msg","index","textAlign","marginBottom","marginTop","type","value","onChange","e","target","placeholder","onClick","marginLeft","color","cursor","_c","$RefreshReg$"],"sources":["/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n\n    const userMessage = { role: \"user\", content: input };\n\n    // Add user message to UI\n    setMessages((prevMessages) => [...prevMessages, userMessage]);\n\n    try {\n      // Sending message to the backend\n      const response = await axios.post(\"http://localhost:5001/chat\", {\n        message: input,\n      });\n\n      // Checking the response structure and handling the reply\n      const botMessage = {\n        role: \"bot\",\n        content: response.data.reply || \"Sorry, I couldn't understand that.\",\n      };\n\n      // Add bot response to UI\n      setMessages((prevMessages) => [...prevMessages, userMessage, botMessage]);\n    } catch (error) {\n      console.error(\"Error:\", error);\n\n      // In case of error, display a fallback message\n      const botMessage = {\n        role: \"bot\",\n        content: \"Sorry, there was an error with the chatbot service.\",\n      };\n      setMessages((prevMessages) => [...prevMessages, userMessage, botMessage]);\n    }\n\n    setInput(\"\"); // Clear the input field\n  };\n\n  return (\n    <div\n      style={{\n        width: \"400px\",\n        margin: \"auto\",\n        padding: \"20px\",\n        border: \"1px solid #ccc\",\n        borderRadius: \"10px\",\n        backgroundColor: \"#f9f9f9\",\n      }}\n    >\n      <h2>Chatbot</h2>\n      <div\n        style={{\n          height: \"300px\",\n          overflowY: \"scroll\",\n          border: \"1px solid #ddd\",\n          padding: \"10px\",\n          backgroundColor: \"#fff\",\n          borderRadius: \"5px\",\n        }}\n      >\n        {messages.map((msg, index) => (\n          <div\n            key={index}\n            style={{\n              textAlign: msg.role === \"user\" ? \"right\" : \"left\",\n              marginBottom: \"10px\",\n            }}\n          >\n            <strong>{msg.role === \"user\" ? \"You\" : \"Bot\"}:</strong> {msg.content}\n          </div>\n        ))}\n      </div>\n      <div style={{ marginTop: \"10px\" }}>\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Type a message...\"\n          style={{\n            width: \"80%\",\n            padding: \"10px\",\n            borderRadius: \"5px\",\n            border: \"1px solid #ccc\",\n          }}\n        />\n        <button\n          onClick={sendMessage}\n          style={{\n            width: \"18%\",\n            padding: \"10px\",\n            marginLeft: \"5px\",\n            backgroundColor: \"#4CAF50\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"5px\",\n            cursor: \"pointer\",\n          }}\n        >\n          Send\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}