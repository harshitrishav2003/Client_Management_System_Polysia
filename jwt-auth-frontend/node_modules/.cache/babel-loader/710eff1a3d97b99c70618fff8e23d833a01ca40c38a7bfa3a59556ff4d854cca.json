{"ast":null,"code":"var _jsxFileName = \"/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/ContractManagement.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { useParams } from \"react-router-dom\";\n// import axios from \"axios\";\n// import \"../App.css\";\n\n// const ClientProfile = () => {\n//   const { clientId } = useParams(); // Get the clientId from the URL params\n//   const [client, setClient] = useState(null);\n//   const [projects, setProjects] = useState([]); // State to store projects\n//   const [error, setError] = useState(\"\");\n//   const [showForm, setShowForm] = useState(false); // Toggle form visibility\n//   const [formData, setFormData] = useState({\n//     project_name: \"\",\n//     description: \"\",\n//     start_date: \"\",\n//     end_date: \"\",\n//     budget: \"\",\n//     client_id: clientId,\n//   });\n\n//   useEffect(() => {\n//     const fetchClientDetails = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5005/api/client/${clientId}`);\n//         setClient(response.data);\n//       } catch (err) {\n//         setError(\"Failed to load client details.\");\n//       }\n//     };\n\n//     const fetchClientProjects = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5005/api/projects/${clientId}`);\n//         // Make sure team_members is always an array\n//         const updatedProjects = response.data.map((project) => ({\n//           ...project,\n//           team_members: Array.isArray(project.team_members) ? project.team_members : [],\n//         }));\n//         setProjects(updatedProjects);\n//       } catch (err) {\n//         setError(\"Failed to load projects.\");\n//       }\n//     };\n\n//     fetchClientDetails();\n//     fetchClientProjects();\n//   }, [clientId]);\n\n//   const handleFormChange = (e) => {\n//     const { name, value } = e.target;\n\n//     setFormData({\n//       ...formData,\n//       [name]: value,\n//     });\n//   };\n\n//   const handleFormSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await axios.post(\"http://localhost:5005/api/projects\", formData);\n//       setProjects([...projects, response.data]); // Add new project to the list\n//       setShowForm(false); // Hide form after submission\n//       console.log(response.data); // Handle the response data (e.g., display success message)\n//     } catch (error) {\n//       console.error(\"Error submitting form:\", error);\n//     }\n//   };\n\n//   if (error) {\n//     return <div>{error}</div>;\n//   }\n\n//   if (!client) {\n//     return <div>Loading...</div>;\n//   }\n\n//   return (\n//     <div>\n//       <h1 style={{ textAlign: \"center\" }}>Projects for {client.client_name}</h1>\n\n//       {/* Display Projects in Table Format */}\n//       <h2>Projects</h2>\n//       {projects.length === 0 ? (\n//         <p>No projects found for this client.</p>\n//       ) : (\n//         <table className=\"project-table\">\n//           <thead>\n//             <tr>\n//               <th>Project Name</th>\n//               <th>Description</th>\n//               <th>Start Date</th>\n//               <th>End Date</th>\n//               <th>Budget</th>\n//               <th>Team Members</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {projects.map((project) => (\n//               <tr key={project._id}>\n//                 <td>{project.project_name}</td>\n//                 <td>{project.description}</td>\n//                 <td>{new Date(project.start_date).toLocaleDateString()}</td>\n//                 <td>{new Date(project.end_date).toLocaleDateString()}</td>\n//                 <td>{project.budget}</td>\n//                 <td>{(project.team_members || []).join(\", \")}</td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       )}\n\n//       <div className=\"client-profile-card\">\n//         {/* Button to Show/Hide Form */}\n//         <button onClick={() => setShowForm(!showForm)}>\n//           {showForm ? \"Cancel\" : \"Add New Project\"}\n//         </button>\n\n//         {/* Project Creation Form */}\n//         {showForm && (\n//           <div className=\"project-form\">\n//           <h2>Create a New Project</h2>\n//           <form onSubmit={handleFormSubmit}>\n//             <div>\n//               <label>Project Name</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"project_name\"\n//                 value={formData.project_name}\n//                 onChange={handleFormChange}\n//                 required\n//               />\n//             </div>\n//             <div>\n//               <label>Description</label>\n//               <textarea\n//                 name=\"description\"\n//                 value={formData.description}\n//                 onChange={handleFormChange}\n//                 className=\"description-input\"\n//               />\n//             </div>\n//             <div>\n//               <label>Start Date</label>\n//               <input\n//                 type=\"date\"\n//                 name=\"start_date\"\n//                 value={formData.start_date}\n//                 onChange={handleFormChange}\n//                 className=\"date-input\"\n//               />\n//             </div>\n//             <div>\n//               <label>End Date</label>\n//               <input\n//                 type=\"date\"\n//                 name=\"end_date\"\n//                 value={formData.end_date}\n//                 onChange={handleFormChange}\n//                 className=\"date-input\"\n//               />\n//             </div>\n//             <div>\n//               <label>Budget</label>\n//               <input\n//                 type=\"number\"\n//                 name=\"budget\"\n//                 value={formData.budget}\n//                 onChange={handleFormChange}\n//               />\n//             </div>\n//             <div>\n//               <button type=\"submit\">Create Project</button>\n//             </div>\n//           </form>\n//         </div>\n\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ClientProfile;\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\nimport { Button, Card, TextField, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Modal } from \"@mui/material\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClientProfile = () => {\n  _s();\n  const {\n    clientId\n  } = useParams();\n  const [client, setClient] = useState(null);\n  const [projects, setProjects] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [showForm, setShowForm] = useState(false);\n  const [formData, setFormData] = useState({\n    project_name: \"\",\n    description: \"\",\n    start_date: \"\",\n    end_date: \"\",\n    budget: \"\",\n    client_id: clientId\n  });\n  useEffect(() => {\n    const fetchClientDetails = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5005/api/client/${clientId}`);\n        setClient(response.data);\n      } catch (err) {\n        setError(\"Failed to load client details.\");\n      }\n    };\n    const fetchClientProjects = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5005/api/projects/${clientId}`);\n        setProjects(response.data);\n      } catch (err) {\n        setError(\"Failed to load projects.\");\n      }\n    };\n    fetchClientDetails();\n    fetchClientProjects();\n  }, [clientId]);\n  const handleFormChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:5005/api/projects\", formData);\n      setProjects([...projects, response.data]);\n      setShowForm(false);\n    } catch (error) {\n      console.error(\"Error submitting form:\", error);\n    }\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 12\n    }, this);\n  }\n  if (!client) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    transition: {\n      duration: 0.5\n    },\n    style: {\n      padding: \"24px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      gutterBottom: true,\n      children: [\"Projects for \", client.client_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n      initial: {\n        y: -20,\n        opacity: 0\n      },\n      animate: {\n        y: 0,\n        opacity: 1\n      },\n      transition: {\n        duration: 0.5\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          padding: \"20px\"\n        },\n        children: [projects.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"No projects found for this client.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0\n          },\n          animate: {\n            opacity: 1\n          },\n          transition: {\n            duration: 0.7\n          },\n          children: /*#__PURE__*/_jsxDEV(TableContainer, {\n            component: Paper,\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Project Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Start Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"End Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Budget\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: projects.map(project => /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: project.project_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: project.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 296,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: new Date(project.start_date).toLocaleDateString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: new Date(project.end_date).toLocaleDateString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: project.budget\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 25\n                  }, this)]\n                }, project._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => setShowForm(!showForm),\n          style: {\n            marginTop: \"20px\"\n          },\n          children: showForm ? \"Cancel\" : \"Add New Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          open: showForm,\n          onClose: () => setShowForm(false),\n          children: /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              scale: 0.8,\n              opacity: 0\n            },\n            animate: {\n              scale: 1,\n              opacity: 1\n            },\n            transition: {\n              duration: 0.3\n            },\n            style: {\n              padding: \"20px\",\n              maxWidth: \"500px\",\n              margin: \"auto\",\n              marginTop: \"10%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Create a New Project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleFormSubmit,\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Project Name\",\n                  name: \"project_name\",\n                  value: formData.project_name,\n                  onChange: handleFormChange,\n                  margin: \"normal\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Description\",\n                  name: \"description\",\n                  value: formData.description,\n                  onChange: handleFormChange,\n                  margin: \"normal\",\n                  multiline: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Start Date\",\n                  type: \"date\",\n                  name: \"start_date\",\n                  value: formData.start_date,\n                  onChange: handleFormChange,\n                  margin: \"normal\",\n                  InputLabelProps: {\n                    shrink: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"End Date\",\n                  type: \"date\",\n                  name: \"end_date\",\n                  value: formData.end_date,\n                  onChange: handleFormChange,\n                  margin: \"normal\",\n                  InputLabelProps: {\n                    shrink: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Budget\",\n                  type: \"number\",\n                  name: \"budget\",\n                  value: formData.budget,\n                  onChange: handleFormChange,\n                  margin: \"normal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  type: \"submit\",\n                  style: {\n                    marginTop: \"20px\"\n                  },\n                  children: \"Create Project\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 5\n  }, this);\n};\n_s(ClientProfile, \"F9UIPMZ4uOsEyznTnMDvT2CCuJw=\", false, function () {\n  return [useParams];\n});\n_c = ClientProfile;\nexport default ClientProfile;\nvar _c;\n$RefreshReg$(_c, \"ClientProfile\");","map":{"version":3,"names":["React","useState","useEffect","useParams","motion","Button","Card","TextField","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Modal","axios","jsxDEV","_jsxDEV","ClientProfile","_s","clientId","client","setClient","projects","setProjects","error","setError","showForm","setShowForm","formData","setFormData","project_name","description","start_date","end_date","budget","client_id","fetchClientDetails","response","get","data","err","fetchClientProjects","handleFormChange","e","name","value","target","handleFormSubmit","preventDefault","post","console","color","children","fileName","_jsxFileName","lineNumber","columnNumber","div","initial","opacity","animate","transition","duration","style","padding","variant","align","gutterBottom","client_name","y","length","component","map","project","Date","toLocaleDateString","_id","onClick","marginTop","open","onClose","scale","maxWidth","margin","onSubmit","fullWidth","label","onChange","required","multiline","type","InputLabelProps","shrink","_c","$RefreshReg$"],"sources":["/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/ContractManagement.js"],"sourcesContent":["\n// import React, { useState, useEffect } from \"react\";\n// import { useParams } from \"react-router-dom\";\n// import axios from \"axios\";\n// import \"../App.css\";\n\n// const ClientProfile = () => {\n//   const { clientId } = useParams(); // Get the clientId from the URL params\n//   const [client, setClient] = useState(null);\n//   const [projects, setProjects] = useState([]); // State to store projects\n//   const [error, setError] = useState(\"\");\n//   const [showForm, setShowForm] = useState(false); // Toggle form visibility\n//   const [formData, setFormData] = useState({\n//     project_name: \"\",\n//     description: \"\",\n//     start_date: \"\",\n//     end_date: \"\",\n//     budget: \"\",\n//     client_id: clientId,\n//   });\n\n//   useEffect(() => {\n//     const fetchClientDetails = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5005/api/client/${clientId}`);\n//         setClient(response.data);\n//       } catch (err) {\n//         setError(\"Failed to load client details.\");\n//       }\n//     };\n\n//     const fetchClientProjects = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5005/api/projects/${clientId}`);\n//         // Make sure team_members is always an array\n//         const updatedProjects = response.data.map((project) => ({\n//           ...project,\n//           team_members: Array.isArray(project.team_members) ? project.team_members : [],\n//         }));\n//         setProjects(updatedProjects);\n//       } catch (err) {\n//         setError(\"Failed to load projects.\");\n//       }\n//     };\n\n//     fetchClientDetails();\n//     fetchClientProjects();\n//   }, [clientId]);\n\n//   const handleFormChange = (e) => {\n//     const { name, value } = e.target;\n\n//     setFormData({\n//       ...formData,\n//       [name]: value,\n//     });\n//   };\n\n//   const handleFormSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await axios.post(\"http://localhost:5005/api/projects\", formData);\n//       setProjects([...projects, response.data]); // Add new project to the list\n//       setShowForm(false); // Hide form after submission\n//       console.log(response.data); // Handle the response data (e.g., display success message)\n//     } catch (error) {\n//       console.error(\"Error submitting form:\", error);\n//     }\n//   };\n\n//   if (error) {\n//     return <div>{error}</div>;\n//   }\n\n//   if (!client) {\n//     return <div>Loading...</div>;\n//   }\n\n//   return (\n//     <div>\n//       <h1 style={{ textAlign: \"center\" }}>Projects for {client.client_name}</h1>\n\n//       {/* Display Projects in Table Format */}\n//       <h2>Projects</h2>\n//       {projects.length === 0 ? (\n//         <p>No projects found for this client.</p>\n//       ) : (\n//         <table className=\"project-table\">\n//           <thead>\n//             <tr>\n//               <th>Project Name</th>\n//               <th>Description</th>\n//               <th>Start Date</th>\n//               <th>End Date</th>\n//               <th>Budget</th>\n//               <th>Team Members</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {projects.map((project) => (\n//               <tr key={project._id}>\n//                 <td>{project.project_name}</td>\n//                 <td>{project.description}</td>\n//                 <td>{new Date(project.start_date).toLocaleDateString()}</td>\n//                 <td>{new Date(project.end_date).toLocaleDateString()}</td>\n//                 <td>{project.budget}</td>\n//                 <td>{(project.team_members || []).join(\", \")}</td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       )}\n\n//       <div className=\"client-profile-card\">\n//         {/* Button to Show/Hide Form */}\n//         <button onClick={() => setShowForm(!showForm)}>\n//           {showForm ? \"Cancel\" : \"Add New Project\"}\n//         </button>\n\n//         {/* Project Creation Form */}\n//         {showForm && (\n//           <div className=\"project-form\">\n//           <h2>Create a New Project</h2>\n//           <form onSubmit={handleFormSubmit}>\n//             <div>\n//               <label>Project Name</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"project_name\"\n//                 value={formData.project_name}\n//                 onChange={handleFormChange}\n//                 required\n//               />\n//             </div>\n//             <div>\n//               <label>Description</label>\n//               <textarea\n//                 name=\"description\"\n//                 value={formData.description}\n//                 onChange={handleFormChange}\n//                 className=\"description-input\"\n//               />\n//             </div>\n//             <div>\n//               <label>Start Date</label>\n//               <input\n//                 type=\"date\"\n//                 name=\"start_date\"\n//                 value={formData.start_date}\n//                 onChange={handleFormChange}\n//                 className=\"date-input\"\n//               />\n//             </div>\n//             <div>\n//               <label>End Date</label>\n//               <input\n//                 type=\"date\"\n//                 name=\"end_date\"\n//                 value={formData.end_date}\n//                 onChange={handleFormChange}\n//                 className=\"date-input\"\n//               />\n//             </div>\n//             <div>\n//               <label>Budget</label>\n//               <input\n//                 type=\"number\"\n//                 name=\"budget\"\n//                 value={formData.budget}\n//                 onChange={handleFormChange}\n//               />\n//             </div>\n//             <div>\n//               <button type=\"submit\">Create Project</button>\n//             </div>\n//           </form>\n//         </div>\n        \n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ClientProfile;\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\nimport {\n  Button,\n  Card,\n  TextField,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Modal,\n} from \"@mui/material\";\nimport axios from \"axios\";\n\nconst ClientProfile = () => {\n  const { clientId } = useParams();\n  const [client, setClient] = useState(null);\n  const [projects, setProjects] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [showForm, setShowForm] = useState(false);\n  const [formData, setFormData] = useState({\n    project_name: \"\",\n    description: \"\",\n    start_date: \"\",\n    end_date: \"\",\n    budget: \"\",\n    client_id: clientId,\n  });\n\n  useEffect(() => {\n    const fetchClientDetails = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5005/api/client/${clientId}`);\n        setClient(response.data);\n      } catch (err) {\n        setError(\"Failed to load client details.\");\n      }\n    };\n\n    const fetchClientProjects = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5005/api/projects/${clientId}`);\n        setProjects(response.data);\n      } catch (err) {\n        setError(\"Failed to load projects.\");\n      }\n    };\n\n    fetchClientDetails();\n    fetchClientProjects();\n  }, [clientId]);\n\n  const handleFormChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:5005/api/projects\", formData);\n      setProjects([...projects, response.data]);\n      setShowForm(false);\n    } catch (error) {\n      console.error(\"Error submitting form:\", error);\n    }\n  };\n\n  if (error) {\n    return <Typography color=\"error\">{error}</Typography>;\n  }\n\n  if (!client) {\n    return <Typography>Loading...</Typography>;\n  }\n\n  return (\n    <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} transition={{ duration: 0.5 }} style={{ padding: \"24px\" }}>\n      <Typography variant=\"h4\" align=\"center\" gutterBottom>\n        Projects for {client.client_name}\n      </Typography>\n      <motion.div initial={{ y: -20, opacity: 0 }} animate={{ y: 0, opacity: 1 }} transition={{ duration: 0.5 }}>\n        <Card style={{ padding: \"20px\" }}>\n          {projects.length === 0 ? (\n            <Typography>No projects found for this client.</Typography>\n          ) : (\n            <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} transition={{ duration: 0.7 }}>\n              <TableContainer component={Paper}>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Project Name</TableCell>\n                      <TableCell>Description</TableCell>\n                      <TableCell>Start Date</TableCell>\n                      <TableCell>End Date</TableCell>\n                      <TableCell>Budget</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {projects.map((project) => (\n                      <TableRow key={project._id}>\n                        <TableCell>{project.project_name}</TableCell>\n                        <TableCell>{project.description}</TableCell>\n                        <TableCell>{new Date(project.start_date).toLocaleDateString()}</TableCell>\n                        <TableCell>{new Date(project.end_date).toLocaleDateString()}</TableCell>\n                        <TableCell>{project.budget}</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </motion.div>\n          )}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => setShowForm(!showForm)}\n            style={{ marginTop: \"20px\" }}\n          >\n            {showForm ? \"Cancel\" : \"Add New Project\"}\n          </Button>\n          <Modal open={showForm} onClose={() => setShowForm(false)}>\n            <motion.div\n              initial={{ scale: 0.8, opacity: 0 }}\n              animate={{ scale: 1, opacity: 1 }}\n              transition={{ duration: 0.3 }}\n              style={{ padding: \"20px\", maxWidth: \"500px\", margin: \"auto\", marginTop: \"10%\" }}\n            >\n              <Card>\n                <Typography variant=\"h6\" gutterBottom>\n                  Create a New Project\n                </Typography>\n                <form onSubmit={handleFormSubmit}>\n                  <TextField\n                    fullWidth\n                    label=\"Project Name\"\n                    name=\"project_name\"\n                    value={formData.project_name}\n                    onChange={handleFormChange}\n                    margin=\"normal\"\n                    required\n                  />\n                  <TextField\n                    fullWidth\n                    label=\"Description\"\n                    name=\"description\"\n                    value={formData.description}\n                    onChange={handleFormChange}\n                    margin=\"normal\"\n                    multiline\n                  />\n                  <TextField\n                    fullWidth\n                    label=\"Start Date\"\n                    type=\"date\"\n                    name=\"start_date\"\n                    value={formData.start_date}\n                    onChange={handleFormChange}\n                    margin=\"normal\"\n                    InputLabelProps={{ shrink: true }}\n                  />\n                  <TextField\n                    fullWidth\n                    label=\"End Date\"\n                    type=\"date\"\n                    name=\"end_date\"\n                    value={formData.end_date}\n                    onChange={handleFormChange}\n                    margin=\"normal\"\n                    InputLabelProps={{ shrink: true }}\n                  />\n                  <TextField\n                    fullWidth\n                    label=\"Budget\"\n                    type=\"number\"\n                    name=\"budget\"\n                    value={formData.budget}\n                    onChange={handleFormChange}\n                    margin=\"normal\"\n                  />\n                  <Button variant=\"contained\" color=\"primary\" type=\"submit\" style={{ marginTop: \"20px\" }}>\n                    Create Project\n                  </Button>\n                </form>\n              </Card>\n            </motion.div>\n          </Modal>\n        </Card>\n      </motion.div>\n    </motion.div>\n  );\n};\n\nexport default ClientProfile;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}