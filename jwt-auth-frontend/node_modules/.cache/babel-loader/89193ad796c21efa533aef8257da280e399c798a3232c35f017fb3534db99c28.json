{"ast":null,"code":"var _jsxFileName = \"/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './Dashboard.css';\n// import PendingUsers from \"../components/PendingUser\";\n// import { Link } from 'react-router-dom';\n\n// const Dashboard = () => {\n//   const [clients, setClients] = useState([]);\n//   const [search, setSearch] = useState('');\n//   const [filters, setFilters] = useState({\n//     region: '',\n//     industry: '',\n//     status: '',\n//   });\n//   const [sortOrder, setSortOrder] = useState('asc');\n//   const [sortColumn, setSortColumn] = useState('client_name');\n//   const [authToken, setAuthToken] = useState(localStorage.getItem('token') || '');\n//   const [editingClient, setEditingClient] = useState(null); // Client being edited\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     fetchClients();\n//   }, [filters, sortColumn, sortOrder]);\n\n//   const fetchClients = () => {\n//     const query = new URLSearchParams({\n//       search,\n//       region: filters.region,\n//       industry: filters.industry,\n//       status: filters.status,\n//       sortColumn,\n//       sortOrder,\n//     });\n\n//     axios\n//       .get(`http://localhost:5005/api/users?${query.toString()}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then((response) => {\n//         setClients(response.data);\n//       })\n//       .catch((err) => {\n//         console.error('Error fetching clients:', err);\n//       });\n//   };\n\n//   const handleSearch = (e) => {\n//     setSearch(e.target.value);\n//   };\n\n//   const handleFilterChange = (e) => {\n//     const { name, value } = e.target;\n//     setFilters({ ...filters, [name]: value });\n//   };\n\n//   const handleSort = (column) => {\n//     const newSortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n//     setSortOrder(newSortOrder);\n//     setSortColumn(column);\n//   };\n\n//   const handleEditClick = (client) => {\n//     setEditingClient(client); // Set the client for editing\n//   };\n\n//   const handleEditChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditingClient({ ...editingClient, [name]: value });\n//   };\n\n//   const handleAddressChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditingClient({\n//       ...editingClient,\n//       address: {\n//         ...editingClient.address,\n//         [name]: value,\n//       },\n//     });\n//   };\n\n//   const handleEditSubmit = async () => {\n//     try {\n//       await axios.put(\n//         `http://localhost:5005/api/users/${editingClient._id}`,\n//         editingClient,\n//         {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         }\n//       );\n//       // Update client list with the new details\n//       setClients(\n//         clients.map((client) =>\n//           client._id === editingClient._id ? editingClient : client\n//         )\n//       );\n//       setEditingClient(null); // Close the editing form\n//     } catch (err) {\n//       console.error('Error updating client:', err);\n//       setError('Failed to update client. Please try again.');\n//     }\n//   };\n\n//   const handleDelete = (clientId) => {\n//     axios\n//       .delete(`http://localhost:5005/api/users/${clientId}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then(() => {\n//         setClients(clients.filter((client) => client._id !== clientId));\n//         alert('Client deleted successfully');\n//       })\n//       .catch((err) => {\n//         console.error('Error deleting client:', err);\n//       });\n//   };\n\n//   return (\n//     <div className=\"dashboard\">\n//       {/* <h1 className='Dash'>Client Dashboard</h1> */}\n//       <PendingUsers />\n//       <h1 className='Dash'>Clients</h1>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Search clients...\"\n//         value={search}\n//         onChange={handleSearch}\n//       />\n\n//       {/* Filter Options */}\n//       <select name=\"region\" onChange={handleFilterChange} value={filters.region}>\n//         <option value=\"\">All Regions</option>\n//         <option value=\"North America\">North America</option>\n//         <option value=\"Europe\">Europe</option>\n//         <option value=\"Asia\">Asia</option>\n//       </select>\n//       <select\n//         name=\"industry\"\n//         onChange={handleFilterChange}\n//         value={filters.industry}\n//       >\n//         <option value=\"\">All Industries</option>\n//         <option value=\"Finance\">Finance</option>\n//         <option value=\"Technology\">Technology</option>\n//         <option value=\"Healthcare\">Healthcare</option>\n//       </select>\n//       <select\n//         name=\"status\"\n//         onChange={handleFilterChange}\n//         value={filters.status}\n//       >\n//         <option value=\"\">All Statuses</option>\n//         <option value=\"Active\">Active</option>\n//         <option value=\"Inactive\">Inactive</option>\n//       </select>\n\n//       <table>\n//         <thead>\n//           <tr>\n//             <th onClick={() => handleSort('client_name')}>Client Name</th>\n//             <th onClick={() => handleSort('status')}>Status</th>\n//             <th onClick={() => handleSort('industry')}>Industry</th>\n\n//             <th>Email</th>\n//             <th>Phone</th>\n//             <th>Contact Person</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {clients.map((client) => (\n//             <tr key={client._id}>\n//                 <td>\n//                   <Link to={`/client/${client._id}`}>{client.client_name}</Link>\n//                 </td>\n\n//             <td>{client.status}</td>\n//               <td>{client.industry}</td>\n//               <td>{client.email}</td>\n//               <td>{client.phone}</td>\n//               <td>{client.contact_person}</td>\n//               <td>\n//                 <button onClick={() => handleEditClick(client)}>Edit</button>\n//                 <button onClick={() => handleDelete(client._id)}>Delete</button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n\n//       {editingClient && (\n//         <div className=\"edit-modal\">\n//           <h3>Edit Client</h3>\n//           <input\n//             type=\"text\"\n//             name=\"client_name\"\n//             value={editingClient.client_name}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"contact_person\"\n//             value={editingClient.contact_person}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"email\"\n//             value={editingClient.email}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"phone\"\n//             value={editingClient.phone}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"industry\"\n//             value={editingClient.industry}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <h3>Address</h3>\n//           <input\n//             type=\"text\"\n//             name=\"street\"\n//             value={editingClient.address?.street}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"city\"\n//             value={editingClient.address?.city}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"state\"\n//             value={editingClient.address?.state}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"postal_code\"\n//             value={editingClient.address?.postal_code}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"country\"\n//             value={editingClient.address?.country}\n//             onChange={handleAddressChange}\n//           />\n//           <button onClick={handleEditSubmit}>Save</button>\n//           <button onClick={() => setEditingClient(null)}>Cancel</button>\n//           {error && <p>{error}</p>}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, Paper, Typography, TextField, Select, MenuItem, IconButton, Button, Dialog, DialogActions, DialogContent, DialogTitle, InputLabel, FormControl, Grid } from '@mui/material';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { Edit, Delete } from '@mui/icons-material';\nimport PendingUsers from '../components/PendingUser';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [clients, setClients] = useState([]);\n  const [search, setSearch] = useState('');\n  const [filters, setFilters] = useState({\n    region: '',\n    industry: '',\n    status: ''\n  });\n  const [editingClient, setEditingClient] = useState(null);\n  const [error, setError] = useState('');\n  const authToken = localStorage.getItem('token') || '';\n  useEffect(() => {\n    fetchClients();\n  }, [filters, search]);\n  const fetchClients = () => {\n    axios.get(`http://localhost:5005/api/users`, {\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      },\n      params: {\n        ...filters,\n        search\n      }\n    }).then(res => setClients(res.data)).catch(err => console.error('Error fetching clients:', err));\n  };\n  const handleDelete = clientId => {\n    axios.delete(`http://localhost:5005/api/users/${clientId}`, {\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    }).then(() => setClients(clients.filter(client => client._id !== clientId))).catch(err => console.error('Error deleting client:', err));\n  };\n  const handleEditSubmit = async () => {\n    try {\n      await axios.put(`http://localhost:5005/api/users/${editingClient._id}`, editingClient, {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      });\n      setClients(clients.map(c => c._id === editingClient._id ? editingClient : c));\n      setEditingClient(null);\n    } catch (err) {\n      console.error('Error updating client:', err);\n      setError('Failed to update client. Please try again.');\n    }\n  };\n  const columns = [{\n    field: 'client_name',\n    headerName: 'Client Name',\n    width: 200\n  }, {\n    field: 'status',\n    headerName: 'Status',\n    width: 120\n  }, {\n    field: 'industry',\n    headerName: 'Industry',\n    width: 150\n  }, {\n    field: 'email',\n    headerName: 'Email',\n    width: 200\n  }, {\n    field: 'phone',\n    headerName: 'Phone',\n    width: 150\n  }, {\n    field: 'contact_person',\n    headerName: 'Contact Person',\n    width: 180\n  }, {\n    field: 'actions',\n    headerName: 'Actions',\n    width: 120,\n    renderCell: params => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => setEditingClient(params.row),\n        color: \"primary\",\n        children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => handleDelete(params.row._id),\n        color: \"secondary\",\n        children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(PendingUsers, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Client Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Search\",\n          value: search,\n          onChange: e => setSearch(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Region\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            name: \"region\",\n            value: filters.region,\n            onChange: e => setFilters({\n              ...filters,\n              region: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: \"All Regions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"North America\",\n              children: \"North America\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Europe\",\n              children: \"Europe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Asia\",\n              children: \"Asia\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Industry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            name: \"industry\",\n            value: filters.industry,\n            onChange: e => setFilters({\n              ...filters,\n              industry: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: \"All Industries\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Finance\",\n              children: \"Finance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Technology\",\n              children: \"Technology\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Healthcare\",\n              children: \"Healthcare\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        height: 400,\n        width: '100%',\n        marginTop: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: clients,\n        columns: columns,\n        getRowId: row => row._id,\n        pageSize: 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }, this), editingClient && /*#__PURE__*/_jsxDEV(Dialog, {\n      open: Boolean(editingClient),\n      onClose: () => setEditingClient(null),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Edit Client\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          margin: \"dense\",\n          label: \"Client Name\",\n          value: editingClient.client_name,\n          onChange: e => setEditingClient({\n            ...editingClient,\n            client_name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          margin: \"dense\",\n          label: \"Contact Person\",\n          value: editingClient.contact_person,\n          onChange: e => setEditingClient({\n            ...editingClient,\n            contact_person: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          margin: \"dense\",\n          label: \"Email\",\n          value: editingClient.email,\n          onChange: e => setEditingClient({\n            ...editingClient,\n            email: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          margin: \"dense\",\n          label: \"Phone\",\n          value: editingClient.phone,\n          onChange: e => setEditingClient({\n            ...editingClient,\n            phone: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setEditingClient(null),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleEditSubmit,\n          color: \"primary\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 352,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"XN5CRy+HAllHeOvhEOfU2B5petw=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","Paper","Typography","TextField","Select","MenuItem","IconButton","Button","Dialog","DialogActions","DialogContent","DialogTitle","InputLabel","FormControl","Grid","DataGrid","Edit","Delete","PendingUsers","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","clients","setClients","search","setSearch","filters","setFilters","region","industry","status","editingClient","setEditingClient","error","setError","authToken","localStorage","getItem","fetchClients","get","headers","Authorization","params","then","res","data","catch","err","console","handleDelete","clientId","delete","filter","client","_id","handleEditSubmit","put","map","c","columns","field","headerName","width","renderCell","children","onClick","row","color","fileName","_jsxFileName","lineNumber","columnNumber","variant","gutterBottom","container","spacing","item","xs","sm","fullWidth","label","value","onChange","e","target","name","sx","height","marginTop","rows","getRowId","pageSize","open","Boolean","onClose","margin","client_name","contact_person","email","phone","_c","$RefreshReg$"],"sources":["/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/Dashboard.js"],"sourcesContent":["\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './Dashboard.css';\n// import PendingUsers from \"../components/PendingUser\";\n// import { Link } from 'react-router-dom';\n\n// const Dashboard = () => {\n//   const [clients, setClients] = useState([]);\n//   const [search, setSearch] = useState('');\n//   const [filters, setFilters] = useState({\n//     region: '',\n//     industry: '',\n//     status: '',\n//   });\n//   const [sortOrder, setSortOrder] = useState('asc');\n//   const [sortColumn, setSortColumn] = useState('client_name');\n//   const [authToken, setAuthToken] = useState(localStorage.getItem('token') || '');\n//   const [editingClient, setEditingClient] = useState(null); // Client being edited\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     fetchClients();\n//   }, [filters, sortColumn, sortOrder]);\n\n//   const fetchClients = () => {\n//     const query = new URLSearchParams({\n//       search,\n//       region: filters.region,\n//       industry: filters.industry,\n//       status: filters.status,\n//       sortColumn,\n//       sortOrder,\n//     });\n\n//     axios\n//       .get(`http://localhost:5005/api/users?${query.toString()}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then((response) => {\n//         setClients(response.data);\n//       })\n//       .catch((err) => {\n//         console.error('Error fetching clients:', err);\n//       });\n//   };\n\n//   const handleSearch = (e) => {\n//     setSearch(e.target.value);\n//   };\n\n//   const handleFilterChange = (e) => {\n//     const { name, value } = e.target;\n//     setFilters({ ...filters, [name]: value });\n//   };\n\n//   const handleSort = (column) => {\n//     const newSortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n//     setSortOrder(newSortOrder);\n//     setSortColumn(column);\n//   };\n\n//   const handleEditClick = (client) => {\n//     setEditingClient(client); // Set the client for editing\n//   };\n\n//   const handleEditChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditingClient({ ...editingClient, [name]: value });\n//   };\n\n//   const handleAddressChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditingClient({\n//       ...editingClient,\n//       address: {\n//         ...editingClient.address,\n//         [name]: value,\n//       },\n//     });\n//   };\n\n//   const handleEditSubmit = async () => {\n//     try {\n//       await axios.put(\n//         `http://localhost:5005/api/users/${editingClient._id}`,\n//         editingClient,\n//         {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         }\n//       );\n//       // Update client list with the new details\n//       setClients(\n//         clients.map((client) =>\n//           client._id === editingClient._id ? editingClient : client\n//         )\n//       );\n//       setEditingClient(null); // Close the editing form\n//     } catch (err) {\n//       console.error('Error updating client:', err);\n//       setError('Failed to update client. Please try again.');\n//     }\n//   };\n\n//   const handleDelete = (clientId) => {\n//     axios\n//       .delete(`http://localhost:5005/api/users/${clientId}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then(() => {\n//         setClients(clients.filter((client) => client._id !== clientId));\n//         alert('Client deleted successfully');\n//       })\n//       .catch((err) => {\n//         console.error('Error deleting client:', err);\n//       });\n//   };\n\n//   return (\n//     <div className=\"dashboard\">\n//       {/* <h1 className='Dash'>Client Dashboard</h1> */}\n//       <PendingUsers />\n//       <h1 className='Dash'>Clients</h1>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Search clients...\"\n//         value={search}\n//         onChange={handleSearch}\n//       />\n\n//       {/* Filter Options */}\n//       <select name=\"region\" onChange={handleFilterChange} value={filters.region}>\n//         <option value=\"\">All Regions</option>\n//         <option value=\"North America\">North America</option>\n//         <option value=\"Europe\">Europe</option>\n//         <option value=\"Asia\">Asia</option>\n//       </select>\n//       <select\n//         name=\"industry\"\n//         onChange={handleFilterChange}\n//         value={filters.industry}\n//       >\n//         <option value=\"\">All Industries</option>\n//         <option value=\"Finance\">Finance</option>\n//         <option value=\"Technology\">Technology</option>\n//         <option value=\"Healthcare\">Healthcare</option>\n//       </select>\n//       <select\n//         name=\"status\"\n//         onChange={handleFilterChange}\n//         value={filters.status}\n//       >\n//         <option value=\"\">All Statuses</option>\n//         <option value=\"Active\">Active</option>\n//         <option value=\"Inactive\">Inactive</option>\n//       </select>\n\n//       <table>\n//         <thead>\n//           <tr>\n//             <th onClick={() => handleSort('client_name')}>Client Name</th>\n//             <th onClick={() => handleSort('status')}>Status</th>\n//             <th onClick={() => handleSort('industry')}>Industry</th>\n            \n//             <th>Email</th>\n//             <th>Phone</th>\n//             <th>Contact Person</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {clients.map((client) => (\n//             <tr key={client._id}>\n//                 <td>\n//                   <Link to={`/client/${client._id}`}>{client.client_name}</Link>\n//                 </td>\n              \n              \n//             <td>{client.status}</td>\n//               <td>{client.industry}</td>\n//               <td>{client.email}</td>\n//               <td>{client.phone}</td>\n//               <td>{client.contact_person}</td>\n//               <td>\n//                 <button onClick={() => handleEditClick(client)}>Edit</button>\n//                 <button onClick={() => handleDelete(client._id)}>Delete</button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n\n//       {editingClient && (\n//         <div className=\"edit-modal\">\n//           <h3>Edit Client</h3>\n//           <input\n//             type=\"text\"\n//             name=\"client_name\"\n//             value={editingClient.client_name}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"contact_person\"\n//             value={editingClient.contact_person}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"email\"\n//             value={editingClient.email}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"phone\"\n//             value={editingClient.phone}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"industry\"\n//             value={editingClient.industry}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <h3>Address</h3>\n//           <input\n//             type=\"text\"\n//             name=\"street\"\n//             value={editingClient.address?.street}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"city\"\n//             value={editingClient.address?.city}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"state\"\n//             value={editingClient.address?.state}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"postal_code\"\n//             value={editingClient.address?.postal_code}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"country\"\n//             value={editingClient.address?.country}\n//             onChange={handleAddressChange}\n//           />\n//           <button onClick={handleEditSubmit}>Save</button>\n//           <button onClick={() => setEditingClient(null)}>Cancel</button>\n//           {error && <p>{error}</p>}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, Paper, Typography, TextField, Select, MenuItem, IconButton, Button, Dialog, DialogActions, DialogContent, DialogTitle, InputLabel, FormControl, Grid } from '@mui/material';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { Edit, Delete } from '@mui/icons-material';\nimport PendingUsers from '../components/PendingUser';\n\nconst Dashboard = () => {\n  const [clients, setClients] = useState([]);\n  const [search, setSearch] = useState('');\n  const [filters, setFilters] = useState({ region: '', industry: '', status: '' });\n  const [editingClient, setEditingClient] = useState(null);\n  const [error, setError] = useState('');\n  const authToken = localStorage.getItem('token') || '';\n\n  useEffect(() => {\n    fetchClients();\n  }, [filters, search]);\n\n  const fetchClients = () => {\n    axios.get(`http://localhost:5005/api/users`, {\n      headers: { Authorization: `Bearer ${authToken}` },\n      params: { ...filters, search },\n    })\n    .then((res) => setClients(res.data))\n    .catch((err) => console.error('Error fetching clients:', err));\n  };\n\n  const handleDelete = (clientId) => {\n    axios.delete(`http://localhost:5005/api/users/${clientId}`, {\n      headers: { Authorization: `Bearer ${authToken}` },\n    })\n    .then(() => setClients(clients.filter((client) => client._id !== clientId)))\n    .catch((err) => console.error('Error deleting client:', err));\n  };\n\n  const handleEditSubmit = async () => {\n    try {\n      await axios.put(`http://localhost:5005/api/users/${editingClient._id}`, editingClient, {\n        headers: { Authorization: `Bearer ${authToken}` },\n      });\n      setClients(clients.map((c) => (c._id === editingClient._id ? editingClient : c)));\n      setEditingClient(null);\n    } catch (err) {\n      console.error('Error updating client:', err);\n      setError('Failed to update client. Please try again.');\n    }\n  };\n\n  const columns = [\n    { field: 'client_name', headerName: 'Client Name', width: 200 },\n    { field: 'status', headerName: 'Status', width: 120 },\n    { field: 'industry', headerName: 'Industry', width: 150 },\n    { field: 'email', headerName: 'Email', width: 200 },\n    { field: 'phone', headerName: 'Phone', width: 150 },\n    { field: 'contact_person', headerName: 'Contact Person', width: 180 },\n    {\n      field: 'actions',\n      headerName: 'Actions',\n      width: 120,\n      renderCell: (params) => (\n        <>\n          <IconButton onClick={() => setEditingClient(params.row)} color=\"primary\">\n            <Edit />\n          </IconButton>\n          <IconButton onClick={() => handleDelete(params.row._id)} color=\"secondary\">\n            <Delete />\n          </IconButton>\n        </>\n      ),\n    },\n  ];\n\n  return (\n    <Container>\n      <PendingUsers />\n      <Typography variant=\"h4\" gutterBottom>Client Dashboard</Typography>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={4}>\n          <TextField fullWidth label=\"Search\" value={search} onChange={(e) => setSearch(e.target.value)} />\n        </Grid>\n        <Grid item xs={12} sm={3}>\n          <FormControl fullWidth>\n            <InputLabel>Region</InputLabel>\n            <Select name=\"region\" value={filters.region} onChange={(e) => setFilters({ ...filters, region: e.target.value })}>\n              <MenuItem value=\"\">All Regions</MenuItem>\n              <MenuItem value=\"North America\">North America</MenuItem>\n              <MenuItem value=\"Europe\">Europe</MenuItem>\n              <MenuItem value=\"Asia\">Asia</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} sm={3}>\n          <FormControl fullWidth>\n            <InputLabel>Industry</InputLabel>\n            <Select name=\"industry\" value={filters.industry} onChange={(e) => setFilters({ ...filters, industry: e.target.value })}>\n              <MenuItem value=\"\">All Industries</MenuItem>\n              <MenuItem value=\"Finance\">Finance</MenuItem>\n              <MenuItem value=\"Technology\">Technology</MenuItem>\n              <MenuItem value=\"Healthcare\">Healthcare</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n      <Paper sx={{ height: 400, width: '100%', marginTop: 3 }}>\n        <DataGrid rows={clients} columns={columns} getRowId={(row) => row._id} pageSize={5} />\n      </Paper>\n\n      {editingClient && (\n        <Dialog open={Boolean(editingClient)} onClose={() => setEditingClient(null)}>\n          <DialogTitle>Edit Client</DialogTitle>\n          <DialogContent>\n            <TextField fullWidth margin=\"dense\" label=\"Client Name\" value={editingClient.client_name} onChange={(e) => setEditingClient({ ...editingClient, client_name: e.target.value })} />\n            <TextField fullWidth margin=\"dense\" label=\"Contact Person\" value={editingClient.contact_person} onChange={(e) => setEditingClient({ ...editingClient, contact_person: e.target.value })} />\n            <TextField fullWidth margin=\"dense\" label=\"Email\" value={editingClient.email} onChange={(e) => setEditingClient({ ...editingClient, email: e.target.value })} />\n            <TextField fullWidth margin=\"dense\" label=\"Phone\" value={editingClient.phone} onChange={(e) => setEditingClient({ ...editingClient, phone: e.target.value })} />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setEditingClient(null)}>Cancel</Button>\n            <Button onClick={handleEditSubmit} color=\"primary\">Save</Button>\n          </DialogActions>\n          {error && <Typography color=\"error\">{error}</Typography>}\n        </Dialog>\n      )}\n    </Container>\n  );\n};\n\nexport default Dashboard;\n"],"mappingslD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,KAAK,EAAEC,UAAU,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,MAAM,EAAEC,MAAM,EAAEC,aAAa,EAAEC,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,WAAW,EAAEC,IAAI,QAAQ,eAAe;AAC/L,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,IAAI,EAAEC,MAAM,QAAQ,qBAAqB;AAClD,OAAOC,YAAY,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC8B,MAAM,EAAEC,SAAS,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACgC,OAAO,EAAEC,UAAU,CAAC,GAAGjC,QAAQ,CAAC;IAAEkC,MAAM,EAAE,EAAE;IAAEC,QAAQ,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAG,CAAC,CAAC;EAChF,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGtC,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACuC,KAAK,EAAEC,QAAQ,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMyC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE;EAErD1C,SAAS,CAAC,MAAM;IACd2C,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACZ,OAAO,EAAEF,MAAM,CAAC,CAAC;EAErB,MAAMc,YAAY,GAAGA,CAAA,KAAM;IACzB1C,KAAK,CAAC2C,GAAG,CAAC,iCAAiC,EAAE;MAC3CC,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUN,SAAS;MAAG,CAAC;MACjDO,MAAM,EAAE;QAAE,GAAGhB,OAAO;QAAEF;MAAO;IAC/B,CAAC,CAAC,CACDmB,IAAI,CAAEC,GAAG,IAAKrB,UAAU,CAACqB,GAAG,CAACC,IAAI,CAAC,CAAC,CACnCC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACf,KAAK,CAAC,yBAAyB,EAAEc,GAAG,CAAC,CAAC;EAChE,CAAC;EAED,MAAME,YAAY,GAAIC,QAAQ,IAAK;IACjCtD,KAAK,CAACuD,MAAM,CAAC,mCAAmCD,QAAQ,EAAE,EAAE;MAC1DV,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUN,SAAS;MAAG;IAClD,CAAC,CAAC,CACDQ,IAAI,CAAC,MAAMpB,UAAU,CAACD,OAAO,CAAC8B,MAAM,CAAEC,MAAM,IAAKA,MAAM,CAACC,GAAG,KAAKJ,QAAQ,CAAC,CAAC,CAAC,CAC3EJ,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACf,KAAK,CAAC,wBAAwB,EAAEc,GAAG,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMQ,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAM3D,KAAK,CAAC4D,GAAG,CAAC,mCAAmCzB,aAAa,CAACuB,GAAG,EAAE,EAAEvB,aAAa,EAAE;QACrFS,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUN,SAAS;QAAG;MAClD,CAAC,CAAC;MACFZ,UAAU,CAACD,OAAO,CAACmC,GAAG,CAAEC,CAAC,IAAMA,CAAC,CAACJ,GAAG,KAAKvB,aAAa,CAACuB,GAAG,GAAGvB,aAAa,GAAG2B,CAAE,CAAC,CAAC;MACjF1B,gBAAgB,CAAC,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOe,GAAG,EAAE;MACZC,OAAO,CAACf,KAAK,CAAC,wBAAwB,EAAEc,GAAG,CAAC;MAC5Cb,QAAQ,CAAC,4CAA4C,CAAC;IACxD;EACF,CAAC;EAED,MAAMyB,OAAO,GAAG,CACd;IAAEC,KAAK,EAAE,aAAa;IAAEC,UAAU,EAAE,aAAa;IAAEC,KAAK,EAAE;EAAI,CAAC,EAC/D;IAAEF,KAAK,EAAE,QAAQ;IAAEC,UAAU,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAI,CAAC,EACrD;IAAEF,KAAK,EAAE,UAAU;IAAEC,UAAU,EAAE,UAAU;IAAEC,KAAK,EAAE;EAAI,CAAC,EACzD;IAAEF,KAAK,EAAE,OAAO;IAAEC,UAAU,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAI,CAAC,EACnD;IAAEF,KAAK,EAAE,OAAO;IAAEC,UAAU,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAI,CAAC,EACnD;IAAEF,KAAK,EAAE,gBAAgB;IAAEC,UAAU,EAAE,gBAAgB;IAAEC,KAAK,EAAE;EAAI,CAAC,EACrE;IACEF,KAAK,EAAE,SAAS;IAChBC,UAAU,EAAE,SAAS;IACrBC,KAAK,EAAE,GAAG;IACVC,UAAU,EAAGrB,MAAM,iBACjBzB,OAAA,CAAAE,SAAA;MAAA6C,QAAA,gBACE/C,OAAA,CAACd,UAAU;QAAC8D,OAAO,EAAEA,CAAA,KAAMjC,gBAAgB,CAACU,MAAM,CAACwB,GAAG,CAAE;QAACC,KAAK,EAAC,SAAS;QAAAH,QAAA,eACtE/C,OAAA,CAACJ,IAAI;UAAAuD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACbtD,OAAA,CAACd,UAAU;QAAC8D,OAAO,EAAEA,CAAA,KAAMhB,YAAY,CAACP,MAAM,CAACwB,GAAG,CAACZ,GAAG,CAAE;QAACa,KAAK,EAAC,WAAW;QAAAH,QAAA,eACxE/C,OAAA,CAACH,MAAM;UAAAsD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA,eACb;EAEN,CAAC,CACF;EAED,oBACEtD,OAAA,CAACpB,SAAS;IAAAmE,QAAA,gBACR/C,OAAA,CAACF,YAAY;MAAAqD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChBtD,OAAA,CAAClB,UAAU;MAACyE,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAT,QAAA,EAAC;IAAgB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACnEtD,OAAA,CAACN,IAAI;MAAC+D,SAAS;MAACC,OAAO,EAAE,CAAE;MAAAX,QAAA,gBACzB/C,OAAA,CAACN,IAAI;QAACiE,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAAd,QAAA,eACvB/C,OAAA,CAACjB,SAAS;UAAC+E,SAAS;UAACC,KAAK,EAAC,QAAQ;UAACC,KAAK,EAAEzD,MAAO;UAAC0D,QAAQ,EAAGC,CAAC,IAAK1D,SAAS,CAAC0D,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7F,CAAC,eACPtD,OAAA,CAACN,IAAI;QAACiE,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAAd,QAAA,eACvB/C,OAAA,CAACP,WAAW;UAACqE,SAAS;UAAAf,QAAA,gBACpB/C,OAAA,CAACR,UAAU;YAAAuD,QAAA,EAAC;UAAM;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAC/BtD,OAAA,CAAChB,MAAM;YAACoF,IAAI,EAAC,QAAQ;YAACJ,KAAK,EAAEvD,OAAO,CAACE,MAAO;YAACsD,QAAQ,EAAGC,CAAC,IAAKxD,UAAU,CAAC;cAAE,GAAGD,OAAO;cAAEE,MAAM,EAAEuD,CAAC,CAACC,MAAM,CAACH;YAAM,CAAC,CAAE;YAAAjB,QAAA,gBAC/G/C,OAAA,CAACf,QAAQ;cAAC+E,KAAK,EAAC,EAAE;cAAAjB,QAAA,EAAC;YAAW;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC,eACzCtD,OAAA,CAACf,QAAQ;cAAC+E,KAAK,EAAC,eAAe;cAAAjB,QAAA,EAAC;YAAa;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC,eACxDtD,OAAA,CAACf,QAAQ;cAAC+E,KAAK,EAAC,QAAQ;cAAAjB,QAAA,EAAC;YAAM;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC,eAC1CtD,OAAA,CAACf,QAAQ;cAAC+E,KAAK,EAAC,MAAM;cAAAjB,QAAA,EAAC;YAAI;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,eACPtD,OAAA,CAACN,IAAI;QAACiE,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAAd,QAAA,eACvB/C,OAAA,CAACP,WAAW;UAACqE,SAAS;UAAAf,QAAA,gBACpB/C,OAAA,CAACR,UAAU;YAAAuD,QAAA,EAAC;UAAQ;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACjCtD,OAAA,CAAChB,MAAM;YAACoF,IAAI,EAAC,UAAU;YAACJ,KAAK,EAAEvD,OAAO,CAACG,QAAS;YAACqD,QAAQ,EAAGC,CAAC,IAAKxD,UAAU,CAAC;cAAE,GAAGD,OAAO;cAAEG,QAAQ,EAAEsD,CAAC,CAACC,MAAM,CAACH;YAAM,CAAC,CAAE;YAAAjB,QAAA,gBACrH/C,OAAA,CAACf,QAAQ;cAAC+E,KAAK,EAAC,EAAE;cAAAjB,QAAA,EAAC;YAAc;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC,eAC5CtD,OAAA,CAACf,QAAQ;cAAC+E,KAAK,EAAC,SAAS;cAAAjB,QAAA,EAAC;YAAO;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC,eAC5CtD,OAAA,CAACf,QAAQ;cAAC+E,KAAK,EAAC,YAAY;cAAAjB,QAAA,EAAC;YAAU;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC,eAClDtD,OAAA,CAACf,QAAQ;cAAC+E,KAAK,EAAC,YAAY;cAAAjB,QAAA,EAAC;YAAU;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACPtD,OAAA,CAACnB,KAAK;MAACwF,EAAE,EAAE;QAAEC,MAAM,EAAE,GAAG;QAAEzB,KAAK,EAAE,MAAM;QAAE0B,SAAS,EAAE;MAAE,CAAE;MAAAxB,QAAA,eACtD/C,OAAA,CAACL,QAAQ;QAAC6E,IAAI,EAAEnE,OAAQ;QAACqC,OAAO,EAAEA,OAAQ;QAAC+B,QAAQ,EAAGxB,GAAG,IAAKA,GAAG,CAACZ,GAAI;QAACqC,QAAQ,EAAE;MAAE;QAAAvB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjF,CAAC,EAEPxC,aAAa,iBACZd,OAAA,CAACZ,MAAM;MAACuF,IAAI,EAAEC,OAAO,CAAC9D,aAAa,CAAE;MAAC+D,OAAO,EAAEA,CAAA,KAAM9D,gBAAgB,CAAC,IAAI,CAAE;MAAAgC,QAAA,gBAC1E/C,OAAA,CAACT,WAAW;QAAAwD,QAAA,EAAC;MAAW;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eACtCtD,OAAA,CAACV,aAAa;QAAAyD,QAAA,gBACZ/C,OAAA,CAACjB,SAAS;UAAC+E,SAAS;UAACgB,MAAM,EAAC,OAAO;UAACf,KAAK,EAAC,aAAa;UAACC,KAAK,EAAElD,aAAa,CAACiE,WAAY;UAACd,QAAQ,EAAGC,CAAC,IAAKnD,gBAAgB,CAAC;YAAE,GAAGD,aAAa;YAAEiE,WAAW,EAAEb,CAAC,CAACC,MAAM,CAACH;UAAM,CAAC;QAAE;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAClLtD,OAAA,CAACjB,SAAS;UAAC+E,SAAS;UAACgB,MAAM,EAAC,OAAO;UAACf,KAAK,EAAC,gBAAgB;UAACC,KAAK,EAAElD,aAAa,CAACkE,cAAe;UAACf,QAAQ,EAAGC,CAAC,IAAKnD,gBAAgB,CAAC;YAAE,GAAGD,aAAa;YAAEkE,cAAc,EAAEd,CAAC,CAACC,MAAM,CAACH;UAAM,CAAC;QAAE;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC3LtD,OAAA,CAACjB,SAAS;UAAC+E,SAAS;UAACgB,MAAM,EAAC,OAAO;UAACf,KAAK,EAAC,OAAO;UAACC,KAAK,EAAElD,aAAa,CAACmE,KAAM;UAAChB,QAAQ,EAAGC,CAAC,IAAKnD,gBAAgB,CAAC;YAAE,GAAGD,aAAa;YAAEmE,KAAK,EAAEf,CAAC,CAACC,MAAM,CAACH;UAAM,CAAC;QAAE;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAChKtD,OAAA,CAACjB,SAAS;UAAC+E,SAAS;UAACgB,MAAM,EAAC,OAAO;UAACf,KAAK,EAAC,OAAO;UAACC,KAAK,EAAElD,aAAa,CAACoE,KAAM;UAACjB,QAAQ,EAAGC,CAAC,IAAKnD,gBAAgB,CAAC;YAAE,GAAGD,aAAa;YAAEoE,KAAK,EAAEhB,CAAC,CAACC,MAAM,CAACH;UAAM,CAAC;QAAE;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnJ,CAAC,eAChBtD,OAAA,CAACX,aAAa;QAAA0D,QAAA,gBACZ/C,OAAA,CAACb,MAAM;UAAC6D,OAAO,EAAEA,CAAA,KAAMjC,gBAAgB,CAAC,IAAI,CAAE;UAAAgC,QAAA,EAAC;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC9DtD,OAAA,CAACb,MAAM;UAAC6D,OAAO,EAAEV,gBAAiB;UAACY,KAAK,EAAC,SAAS;UAAAH,QAAA,EAAC;QAAI;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,EACftC,KAAK,iBAAIhB,OAAA,CAAClB,UAAU;QAACoE,KAAK,EAAC,OAAO;QAAAH,QAAA,EAAE/B;MAAK;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CACT;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEhB,CAAC;AAAClD,EAAA,CAvHID,SAAS;AAAAgF,EAAA,GAAThF,SAAS;AAyHf,eAAeA,SAAS;AAAC,IAAAgF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}