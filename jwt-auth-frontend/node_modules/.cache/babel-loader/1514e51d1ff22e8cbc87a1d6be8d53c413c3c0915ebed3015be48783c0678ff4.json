{"ast":null,"code":"var _jsxFileName = \"/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/ProjectPage.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n\n// const ProjectsPage = () => {\n//   const [pendingProjects, setPendingProjects] = useState([]);\n//   const [approvedProjects, setApprovedProjects] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [editProject, setEditProject] = useState(null);\n//   const [formData, setFormData] = useState({\n//     project_name: '',\n//     description: '',\n//     start_date: '',\n//     end_date: '',\n//     status: 'Pending',\n//     budget: '',\n//     team_members: '',\n//   });\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const fetchProjects = async () => {\n//       try {\n//         const response = await axios.get(\"http://localhost:5005/api/projects\");\n//         const allProjects = response.data;\n\n//         setPendingProjects(allProjects.filter(project => !project.isApproved));\n//         setApprovedProjects(allProjects.filter(project => project.isApproved));\n\n//         setLoading(false);\n//       } catch (err) {\n//         setError(\"Failed to fetch projects. Please try again later.\");\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchProjects();\n//   }, []);\n\n//   const handleViewDetails = (projectId) => {\n//     navigate(`/project/${projectId}`);\n//   };\n\n//   const handleApprove = async (projectId) => {\n//     try {\n//       await axios.put(`http://localhost:5005/api/projects/${projectId}/approve`);\n//       alert(\"Project approved successfully\");\n//       setPendingProjects(prev => prev.filter(project => project._id !== projectId));\n//       const approvedProject = pendingProjects.find(project => project._id === projectId);\n//       setApprovedProjects(prev => [...prev, { ...approvedProject, isApproved: true }]);\n//     } catch (err) {\n//       console.error(\"Error approving project:\", err);\n//       alert(\"Failed to approve project\");\n//     }\n//   };\n\n//   const handleReject = async (projectId) => {\n//     try {\n//       await axios.put(`http://localhost:5005/api/projects/${projectId}/reject`);\n//       alert(\"Project rejected successfully\");\n//       setPendingProjects(prev => prev.filter(project => project._id !== projectId));\n//     } catch (err) {\n//       console.error(\"Error rejecting project:\", err);\n//       alert(\"Failed to reject project\");\n//     }\n//   };\n\n//   const handleStatusChange = async (projectId, status) => {\n//     try {\n//       await axios.put(`http://localhost:5005/api/projects/${projectId}`, { status });\n//       alert(\"Project status updated successfully\");\n//       setApprovedProjects(prevProjects =>\n//         prevProjects.map(project =>\n//           project._id === projectId ? { ...project, status: status } : project\n//         )\n//       );\n//     } catch (err) {\n//       console.error(\"Error updating project status:\", err);\n//       alert(\"Failed to update project status\");\n//     }\n//   };\n\n//   const handleEdit = (project) => {\n//     setEditProject(project);\n//     setFormData({\n//       project_name: project.project_name,\n//       description: project.description,\n//       start_date: project.start_date,\n//       end_date: project.end_date,\n//       status: project.status,\n//       budget: project.budget,\n//       team_members: project.team_members.join(', '), // Assuming team_members is an array of names\n//     });\n//   };\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData(prevData => ({\n//       ...prevData,\n//       [name]: value,\n//     }));\n//   };\n\n//   const handleSubmitEdit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const updatedProject = {\n//         ...formData,\n//         team_members: formData.team_members.split(',').map(member => member.trim()), // Convert to an array\n//       };\n//       await axios.put(`http://localhost:5005/api/projects/${editProject._id}`, updatedProject);\n//       alert(\"Project updated successfully\");\n//       setApprovedProjects(prev =>\n//         prev.map(project =>\n//           project._id === editProject._id ? { ...project, ...updatedProject } : project\n//         )\n//       );\n//       setEditProject(null);\n//       setFormData({ project_name: '', description: '', start_date: '', end_date: '', status: 'Pending', budget: '', team_members: '' });\n//     } catch (err) {\n//       console.error(\"Error updating project:\", err);\n//       alert(\"Failed to update project\");\n//     }\n//   };\n\n//   if (loading) return <div>Loading...</div>;\n//   if (error) return <div>{error}</div>;\n\n//   return (\n//     <div style={pageStyle}>\n//       <h2>Pending Projects</h2>\n//       {pendingProjects.length === 0 ? (\n//         <p>No pending projects found.</p>\n//       ) : (\n//         <table style={tableStyle}>\n//           <thead>\n//             <tr>\n//               <th>Project ID</th>\n//               <th>Project Name</th>\n//               <th>Client</th>\n//               <th>Actions</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {pendingProjects.map((project) => (\n//               <tr key={project._id}>\n//                 <td>{project._id}</td>\n//                 <td>{project.project_name}</td>\n//                 <td>{project.client_id.client_name}</td>\n//                 <td>\n//                   <button onClick={() => handleApprove(project._id)} style={{ ...buttonStyle, backgroundColor: \"#28a745\" }}>\n//                     Approve\n//                   </button>\n//                   <button onClick={() => handleReject(project._id)} style={{ ...buttonStyle, backgroundColor: \"#dc3545\" }}>\n//                     Reject\n//                   </button>\n//                 </td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       )}\n\n//       <h2>Approved Projects</h2>\n//       {approvedProjects.length === 0 ? (\n//         <p>No approved projects found.</p>\n//       ) : (\n//         <table style={tableStyle}>\n//           <thead>\n//             <tr>\n//               <th>Project ID</th>\n//               <th>Project Name</th>\n//               <th>Client</th>\n//               <th>Status</th>\n//               <th>Actions</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {approvedProjects.map((project) => (\n//               <tr key={project._id}>\n//                 <td>{project._id}</td>\n//                 <td>{project.project_name}</td>\n//                 <td>{project.client_id.client_name}</td>\n//                 <td>\n//                   <select\n//                     value={project.status}\n//                     onChange={(e) => handleStatusChange(project._id, e.target.value)}\n//                     style={selectStyle}\n//                   >\n//                     <option value=\"Pending\">Pending</option>\n//                     <option value=\"Ongoing\">Ongoing</option>\n//                     <option value=\"Completed\">Completed</option>\n//                   </select>\n//                 </td>\n//                 <td>\n//                   <button onClick={() => handleViewDetails(project._id)} style={buttonStyle}>\n//                     View Details\n//                   </button>\n//                   <button onClick={() => handleEdit(project)} style={{ ...buttonStyle, backgroundColor: \"#ffc107\" }}>\n//                     Edit\n//                   </button>\n//                 </td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       )}\n\n//       {/* Edit Project Form */}\n//       {editProject && (\n//         <div style={editFormStyle}>\n//           <h3>Edit Project</h3>\n//           <form onSubmit={handleSubmitEdit}>\n//             <label>\n//               Project Name:\n//               <input\n//                 type=\"text\"\n//                 name=\"project_name\"\n//                 value={formData.project_name}\n//                 onChange={handleInputChange}\n//                 required\n//               />\n//             </label>\n//             <label>\n//               Description:\n//               <textarea\n//                 name=\"description\"\n//                 value={formData.description}\n//                 onChange={handleInputChange}\n//                 required\n//               />\n//             </label>\n//             <label>\n//               Start Date:\n//               <input\n//                 type=\"date\"\n//                 name=\"start_date\"\n//                 value={formData.start_date}\n//                 onChange={handleInputChange}\n//                 required\n//               />\n//             </label>\n//             <label>\n//               End Date:\n//               <input\n//                 type=\"date\"\n//                 name=\"end_date\"\n//                 value={formData.end_date}\n//                 onChange={handleInputChange}\n//                 required\n//               />\n//             </label>\n//             <label>\n//               Status:\n//               <select\n//                 name=\"status\"\n//                 value={formData.status}\n//                 onChange={handleInputChange}\n//                 required\n//               >\n//                 <option value=\"Pending\">Pending</option>\n//                 <option value=\"Ongoing\">Ongoing</option>\n//                 <option value=\"Completed\">Completed</option>\n//               </select>\n//             </label>\n//             <label>\n//               Budget:\n//               <input\n//                 type=\"number\"\n//                 name=\"budget\"\n//                 value={formData.budget}\n//                 onChange={handleInputChange}\n//                 required\n//               />\n//             </label>\n//             <label>\n//               Team Members (comma separated):\n//               <input\n//                 type=\"text\"\n//                 name=\"team_members\"\n//                 value={formData.team_members}\n//                 onChange={handleInputChange}\n//                 required\n//               />\n//             </label>\n//             <button type=\"submit\" style={{ ...buttonStyle, backgroundColor: \"#007bff\" }}>\n//               Update Project\n//             </button>\n//             <button type=\"button\" onClick={() => setEditProject(null)} style={buttonStyle}>\n//               Cancel\n//             </button>\n//           </form>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// const pageStyle = {\n//   padding: \"20px\",\n//   fontFamily: \"Arial, sans-serif\",\n// };\n\n// const tableStyle = {\n//   width: \"100%\",\n//   borderCollapse: \"collapse\",\n//   marginTop: \"20px\",\n//   border: \"1px solid #ccc\",\n// };\n\n// const buttonStyle = {\n//   padding: \"10px 20px\",\n//   margin: \"10px 5px\",\n//   border: \"none\",\n//   borderRadius: \"4px\",\n//   backgroundColor: \"#739ea7\",\n//   color: \"white\",\n//   cursor: \"pointer\",\n//   fontSize: \"14px\",\n// };\n\n// const selectStyle = {\n//   padding: \"5px 10px\",\n//   border: \"1px solid #ccc\",\n//   borderRadius: \"4px\",\n//   backgroundColor: \"#fff\",\n// };\n\n// const editFormStyle = {\n//   padding: \"20px\",\n//   border: \"1px solid #ccc\",\n//   marginTop: \"20px\",\n//   borderRadius: \"4px\",\n//   backgroundColor: \"#f8f9fa\",\n// };\n\n// export default ProjectsPage;\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Button, Table, Select, Modal, Input, Form, Typography, message, Spin, Card, Space, Alert } from \"antd\";\nimport { EditOutlined, EyeOutlined, CheckOutlined, CloseOutlined } from \"@ant-design/icons\";\nimport \"antd/dist/reset.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\nconst {\n  Option\n} = Select;\nconst ProjectsPage = () => {\n  _s();\n  const [pendingProjects, setPendingProjects] = useState([]);\n  const [approvedProjects, setApprovedProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [editProject, setEditProject] = useState(null);\n  const [form] = Form.useForm();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5005/api/projects\");\n        const allProjects = response.data;\n        setPendingProjects(allProjects.filter(project => !project.isApproved));\n        setApprovedProjects(allProjects.filter(project => project.isApproved));\n      } catch (err) {\n        setError(\"Failed to fetch projects. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProjects();\n  }, []);\n  const handleViewDetails = projectId => navigate(`/project/${projectId}`);\n  const handleApprove = async projectId => {\n    try {\n      await axios.put(`http://localhost:5005/api/projects/${projectId}/approve`);\n      message.success(\"Project approved successfully\");\n      setPendingProjects(prev => prev.filter(project => project._id !== projectId));\n      const approvedProject = pendingProjects.find(project => project._id === projectId);\n      setApprovedProjects(prev => [...prev, {\n        ...approvedProject,\n        isApproved: true\n      }]);\n    } catch (err) {\n      message.error(\"Failed to approve project\");\n    }\n  };\n  const handleReject = async projectId => {\n    try {\n      await axios.put(`http://localhost:5005/api/projects/${projectId}/reject`);\n      message.success(\"Project rejected successfully\");\n      setPendingProjects(prev => prev.filter(project => project._id !== projectId));\n    } catch (err) {\n      message.error(\"Failed to reject project\");\n    }\n  };\n  const handleStatusChange = async (projectId, status) => {\n    try {\n      await axios.put(`http://localhost:5005/api/projects/${projectId}`, {\n        status\n      });\n      message.success(\"Project status updated successfully\");\n      setApprovedProjects(prevProjects => prevProjects.map(project => project._id === projectId ? {\n        ...project,\n        status\n      } : project));\n    } catch (err) {\n      message.error(\"Failed to update project status\");\n    }\n  };\n  const handleEdit = project => {\n    setEditProject(project);\n    form.setFieldsValue({\n      ...project,\n      team_members: project.team_members.join(\", \")\n    });\n  };\n  const handleEditSubmit = async () => {\n    try {\n      const updatedProject = {\n        ...form.getFieldsValue(),\n        team_members: form.getFieldValue(\"team_members\").split(\", \")\n      };\n      await axios.put(`http://localhost:5005/api/projects/${editProject._id}`, updatedProject);\n      message.success(\"Project updated successfully\");\n      setApprovedProjects(prev => prev.map(p => p._id === editProject._id ? updatedProject : p));\n      setEditProject(null);\n    } catch (err) {\n      message.error(\"Failed to update project\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"24px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      level: 2,\n      style: {\n        textAlign: \"center\",\n        marginBottom: \"24px\"\n      },\n      children: \"Projects Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Spin, {\n      size: \"large\",\n      style: {\n        display: \"block\",\n        margin: \"auto\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Alert, {\n      message: error,\n      type: \"error\",\n      showIcon: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        title: \"Pending Projects\",\n        bordered: false,\n        style: {\n          marginBottom: \"20px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          dataSource: pendingProjects,\n          rowKey: \"_id\",\n          columns: [{\n            title: \"Project ID\",\n            dataIndex: \"_id\"\n          }, {\n            title: \"Project Name\",\n            dataIndex: \"project_name\"\n          }, {\n            title: \"Client\",\n            dataIndex: [\"client_id\", \"client_name\"]\n          }, {\n            title: \"Actions\",\n            render: (_, project) => /*#__PURE__*/_jsxDEV(Space, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                icon: /*#__PURE__*/_jsxDEV(CheckOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 52\n                }, this),\n                onClick: () => handleApprove(project._id),\n                children: \"Approve\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                danger: true,\n                icon: /*#__PURE__*/_jsxDEV(CloseOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 476,\n                  columnNumber: 44\n                }, this),\n                onClick: () => handleReject(project._id),\n                children: \"Reject\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 21\n            }, this)\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        title: \"Approved Projects\",\n        bordered: false,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          dataSource: approvedProjects,\n          rowKey: \"_id\",\n          columns: [{\n            title: \"Project ID\",\n            dataIndex: \"_id\"\n          }, {\n            title: \"Project Name\",\n            dataIndex: \"project_name\"\n          }, {\n            title: \"Client\",\n            dataIndex: [\"client_id\", \"client_name\"]\n          }, {\n            title: \"Status\",\n            render: (_, project) => /*#__PURE__*/_jsxDEV(Select, {\n              defaultValue: project.status,\n              onChange: value => handleStatusChange(project._id, value),\n              children: [/*#__PURE__*/_jsxDEV(Option, {\n                value: \"Pending\",\n                children: \"Pending\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Option, {\n                value: \"Ongoing\",\n                children: \"Ongoing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Option, {\n                value: \"Completed\",\n                children: \"Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 21\n            }, this)\n          }, {\n            title: \"Actions\",\n            render: (_, project) => /*#__PURE__*/_jsxDEV(Space, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                icon: /*#__PURE__*/_jsxDEV(EyeOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 512,\n                  columnNumber: 37\n                }, this),\n                onClick: () => handleViewDetails(project._id),\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                icon: /*#__PURE__*/_jsxDEV(EditOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 515,\n                  columnNumber: 37\n                }, this),\n                onClick: () => handleEdit(project),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 21\n            }, this)\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Edit Project\",\n      open: !!editProject,\n      onCancel: () => setEditProject(null),\n      onOk: handleEditSubmit,\n      okText: \"Save\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        form: form,\n        layout: \"vertical\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"project_name\",\n          label: \"Project Name\",\n          rules: [{\n            required: true,\n            message: \"Please enter a project name\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"description\",\n          label: \"Description\",\n          children: /*#__PURE__*/_jsxDEV(Input.TextArea, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"status\",\n          label: \"Status\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            children: [/*#__PURE__*/_jsxDEV(Option, {\n              value: \"Pending\",\n              children: \"Pending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Ongoing\",\n              children: \"Ongoing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Completed\",\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"team_members\",\n          label: \"Team Members\",\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 449,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectsPage, \"Y4TnbjWXLpTZC+ukrN4kCLKI/Dg=\", false, function () {\n  return [Form.useForm, useNavigate];\n});\n_c = ProjectsPage;\nexport default ProjectsPage;\nvar _c;\n$RefreshReg$(_c, \"ProjectsPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","Button","Table","Select","Modal","Input","Form","Typography","message","Spin","Card","Space","Alert","EditOutlined","EyeOutlined","CheckOutlined","CloseOutlined","jsxDEV","_jsxDEV","Fragment","_Fragment","Title","Option","ProjectsPage","_s","pendingProjects","setPendingProjects","approvedProjects","setApprovedProjects","loading","setLoading","error","setError","editProject","setEditProject","form","useForm","navigate","fetchProjects","response","get","allProjects","data","filter","project","isApproved","err","handleViewDetails","projectId","handleApprove","put","success","prev","_id","approvedProject","find","handleReject","handleStatusChange","status","prevProjects","map","handleEdit","setFieldsValue","team_members","join","handleEditSubmit","updatedProject","getFieldsValue","getFieldValue","split","p","style","padding","children","level","textAlign","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","size","display","margin","type","showIcon","title","bordered","dataSource","rowKey","columns","dataIndex","render","_","icon","onClick","danger","defaultValue","onChange","value","open","onCancel","onOk","okText","layout","Item","name","label","rules","required","TextArea","_c","$RefreshReg$"],"sources":["/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/ProjectPage.js"],"sourcesContent":["\n// import React, { useEffect, useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n\n// const ProjectsPage = () => {\n//   const [pendingProjects, setPendingProjects] = useState([]);\n//   const [approvedProjects, setApprovedProjects] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [editProject, setEditProject] = useState(null);\n//   const [formData, setFormData] = useState({\n//     project_name: '',\n//     description: '',\n//     start_date: '',\n//     end_date: '',\n//     status: 'Pending',\n//     budget: '',\n//     team_members: '',\n//   });\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const fetchProjects = async () => {\n//       try {\n//         const response = await axios.get(\"http://localhost:5005/api/projects\");\n//         const allProjects = response.data;\n\n//         setPendingProjects(allProjects.filter(project => !project.isApproved));\n//         setApprovedProjects(allProjects.filter(project => project.isApproved));\n\n//         setLoading(false);\n//       } catch (err) {\n//         setError(\"Failed to fetch projects. Please try again later.\");\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchProjects();\n//   }, []);\n\n//   const handleViewDetails = (projectId) => {\n//     navigate(`/project/${projectId}`);\n//   };\n\n//   const handleApprove = async (projectId) => {\n//     try {\n//       await axios.put(`http://localhost:5005/api/projects/${projectId}/approve`);\n//       alert(\"Project approved successfully\");\n//       setPendingProjects(prev => prev.filter(project => project._id !== projectId));\n//       const approvedProject = pendingProjects.find(project => project._id === projectId);\n//       setApprovedProjects(prev => [...prev, { ...approvedProject, isApproved: true }]);\n//     } catch (err) {\n//       console.error(\"Error approving project:\", err);\n//       alert(\"Failed to approve project\");\n//     }\n//   };\n\n//   const handleReject = async (projectId) => {\n//     try {\n//       await axios.put(`http://localhost:5005/api/projects/${projectId}/reject`);\n//       alert(\"Project rejected successfully\");\n//       setPendingProjects(prev => prev.filter(project => project._id !== projectId));\n//     } catch (err) {\n//       console.error(\"Error rejecting project:\", err);\n//       alert(\"Failed to reject project\");\n//     }\n//   };\n\n//   const handleStatusChange = async (projectId, status) => {\n//     try {\n//       await axios.put(`http://localhost:5005/api/projects/${projectId}`, { status });\n//       alert(\"Project status updated successfully\");\n//       setApprovedProjects(prevProjects =>\n//         prevProjects.map(project =>\n//           project._id === projectId ? { ...project, status: status } : project\n//         )\n//       );\n//     } catch (err) {\n//       console.error(\"Error updating project status:\", err);\n//       alert(\"Failed to update project status\");\n//     }\n//   };\n\n//   const handleEdit = (project) => {\n//     setEditProject(project);\n//     setFormData({\n//       project_name: project.project_name,\n//       description: project.description,\n//       start_date: project.start_date,\n//       end_date: project.end_date,\n//       status: project.status,\n//       budget: project.budget,\n//       team_members: project.team_members.join(', '), // Assuming team_members is an array of names\n//     });\n//   };\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData(prevData => ({\n//       ...prevData,\n//       [name]: value,\n//     }));\n//   };\n\n//   const handleSubmitEdit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const updatedProject = {\n//         ...formData,\n//         team_members: formData.team_members.split(',').map(member => member.trim()), // Convert to an array\n//       };\n//       await axios.put(`http://localhost:5005/api/projects/${editProject._id}`, updatedProject);\n//       alert(\"Project updated successfully\");\n//       setApprovedProjects(prev =>\n//         prev.map(project =>\n//           project._id === editProject._id ? { ...project, ...updatedProject } : project\n//         )\n//       );\n//       setEditProject(null);\n//       setFormData({ project_name: '', description: '', start_date: '', end_date: '', status: 'Pending', budget: '', team_members: '' });\n//     } catch (err) {\n//       console.error(\"Error updating project:\", err);\n//       alert(\"Failed to update project\");\n//     }\n//   };\n\n//   if (loading) return <div>Loading...</div>;\n//   if (error) return <div>{error}</div>;\n\n//   return (\n//     <div style={pageStyle}>\n//       <h2>Pending Projects</h2>\n//       {pendingProjects.length === 0 ? (\n//         <p>No pending projects found.</p>\n//       ) : (\n//         <table style={tableStyle}>\n//           <thead>\n//             <tr>\n//               <th>Project ID</th>\n//               <th>Project Name</th>\n//               <th>Client</th>\n//               <th>Actions</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {pendingProjects.map((project) => (\n//               <tr key={project._id}>\n//                 <td>{project._id}</td>\n//                 <td>{project.project_name}</td>\n//                 <td>{project.client_id.client_name}</td>\n//                 <td>\n//                   <button onClick={() => handleApprove(project._id)} style={{ ...buttonStyle, backgroundColor: \"#28a745\" }}>\n//                     Approve\n//                   </button>\n//                   <button onClick={() => handleReject(project._id)} style={{ ...buttonStyle, backgroundColor: \"#dc3545\" }}>\n//                     Reject\n//                   </button>\n//                 </td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       )}\n\n//       <h2>Approved Projects</h2>\n//       {approvedProjects.length === 0 ? (\n//         <p>No approved projects found.</p>\n//       ) : (\n//         <table style={tableStyle}>\n//           <thead>\n//             <tr>\n//               <th>Project ID</th>\n//               <th>Project Name</th>\n//               <th>Client</th>\n//               <th>Status</th>\n//               <th>Actions</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {approvedProjects.map((project) => (\n//               <tr key={project._id}>\n//                 <td>{project._id}</td>\n//                 <td>{project.project_name}</td>\n//                 <td>{project.client_id.client_name}</td>\n//                 <td>\n//                   <select\n//                     value={project.status}\n//                     onChange={(e) => handleStatusChange(project._id, e.target.value)}\n//                     style={selectStyle}\n//                   >\n//                     <option value=\"Pending\">Pending</option>\n//                     <option value=\"Ongoing\">Ongoing</option>\n//                     <option value=\"Completed\">Completed</option>\n//                   </select>\n//                 </td>\n//                 <td>\n//                   <button onClick={() => handleViewDetails(project._id)} style={buttonStyle}>\n//                     View Details\n//                   </button>\n//                   <button onClick={() => handleEdit(project)} style={{ ...buttonStyle, backgroundColor: \"#ffc107\" }}>\n//                     Edit\n//                   </button>\n//                 </td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       )}\n\n//       {/* Edit Project Form */}\n//       {editProject && (\n//         <div style={editFormStyle}>\n//           <h3>Edit Project</h3>\n//           <form onSubmit={handleSubmitEdit}>\n//             <label>\n//               Project Name:\n//               <input\n//                 type=\"text\"\n//                 name=\"project_name\"\n//                 value={formData.project_name}\n//                 onChange={handleInputChange}\n//                 required\n//               />\n//             </label>\n//             <label>\n//               Description:\n//               <textarea\n//                 name=\"description\"\n//                 value={formData.description}\n//                 onChange={handleInputChange}\n//                 required\n//               />\n//             </label>\n//             <label>\n//               Start Date:\n//               <input\n//                 type=\"date\"\n//                 name=\"start_date\"\n//                 value={formData.start_date}\n//                 onChange={handleInputChange}\n//                 required\n//               />\n//             </label>\n//             <label>\n//               End Date:\n//               <input\n//                 type=\"date\"\n//                 name=\"end_date\"\n//                 value={formData.end_date}\n//                 onChange={handleInputChange}\n//                 required\n//               />\n//             </label>\n//             <label>\n//               Status:\n//               <select\n//                 name=\"status\"\n//                 value={formData.status}\n//                 onChange={handleInputChange}\n//                 required\n//               >\n//                 <option value=\"Pending\">Pending</option>\n//                 <option value=\"Ongoing\">Ongoing</option>\n//                 <option value=\"Completed\">Completed</option>\n//               </select>\n//             </label>\n//             <label>\n//               Budget:\n//               <input\n//                 type=\"number\"\n//                 name=\"budget\"\n//                 value={formData.budget}\n//                 onChange={handleInputChange}\n//                 required\n//               />\n//             </label>\n//             <label>\n//               Team Members (comma separated):\n//               <input\n//                 type=\"text\"\n//                 name=\"team_members\"\n//                 value={formData.team_members}\n//                 onChange={handleInputChange}\n//                 required\n//               />\n//             </label>\n//             <button type=\"submit\" style={{ ...buttonStyle, backgroundColor: \"#007bff\" }}>\n//               Update Project\n//             </button>\n//             <button type=\"button\" onClick={() => setEditProject(null)} style={buttonStyle}>\n//               Cancel\n//             </button>\n//           </form>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// const pageStyle = {\n//   padding: \"20px\",\n//   fontFamily: \"Arial, sans-serif\",\n// };\n\n// const tableStyle = {\n//   width: \"100%\",\n//   borderCollapse: \"collapse\",\n//   marginTop: \"20px\",\n//   border: \"1px solid #ccc\",\n// };\n\n// const buttonStyle = {\n//   padding: \"10px 20px\",\n//   margin: \"10px 5px\",\n//   border: \"none\",\n//   borderRadius: \"4px\",\n//   backgroundColor: \"#739ea7\",\n//   color: \"white\",\n//   cursor: \"pointer\",\n//   fontSize: \"14px\",\n// };\n\n// const selectStyle = {\n//   padding: \"5px 10px\",\n//   border: \"1px solid #ccc\",\n//   borderRadius: \"4px\",\n//   backgroundColor: \"#fff\",\n// };\n\n// const editFormStyle = {\n//   padding: \"20px\",\n//   border: \"1px solid #ccc\",\n//   marginTop: \"20px\",\n//   borderRadius: \"4px\",\n//   backgroundColor: \"#f8f9fa\",\n// };\n\n// export default ProjectsPage;\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Table,\n  Select,\n  Modal,\n  Input,\n  Form,\n  Typography,\n  message,\n  Spin,\n  Card,\n  Space,\n  Alert,\n} from \"antd\";\nimport { EditOutlined, EyeOutlined, CheckOutlined, CloseOutlined } from \"@ant-design/icons\";\nimport \"antd/dist/reset.css\";\n\nconst { Title } = Typography;\nconst { Option } = Select;\n\nconst ProjectsPage = () => {\n  const [pendingProjects, setPendingProjects] = useState([]);\n  const [approvedProjects, setApprovedProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [editProject, setEditProject] = useState(null);\n  const [form] = Form.useForm();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5005/api/projects\");\n        const allProjects = response.data;\n        setPendingProjects(allProjects.filter((project) => !project.isApproved));\n        setApprovedProjects(allProjects.filter((project) => project.isApproved));\n      } catch (err) {\n        setError(\"Failed to fetch projects. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProjects();\n  }, []);\n\n  const handleViewDetails = (projectId) => navigate(`/project/${projectId}`);\n\n  const handleApprove = async (projectId) => {\n    try {\n      await axios.put(`http://localhost:5005/api/projects/${projectId}/approve`);\n      message.success(\"Project approved successfully\");\n      setPendingProjects((prev) => prev.filter((project) => project._id !== projectId));\n      const approvedProject = pendingProjects.find((project) => project._id === projectId);\n      setApprovedProjects((prev) => [...prev, { ...approvedProject, isApproved: true }]);\n    } catch (err) {\n      message.error(\"Failed to approve project\");\n    }\n  };\n\n  const handleReject = async (projectId) => {\n    try {\n      await axios.put(`http://localhost:5005/api/projects/${projectId}/reject`);\n      message.success(\"Project rejected successfully\");\n      setPendingProjects((prev) => prev.filter((project) => project._id !== projectId));\n    } catch (err) {\n      message.error(\"Failed to reject project\");\n    }\n  };\n\n  const handleStatusChange = async (projectId, status) => {\n    try {\n      await axios.put(`http://localhost:5005/api/projects/${projectId}`, { status });\n      message.success(\"Project status updated successfully\");\n      setApprovedProjects((prevProjects) =>\n        prevProjects.map((project) =>\n          project._id === projectId ? { ...project, status } : project\n        )\n      );\n    } catch (err) {\n      message.error(\"Failed to update project status\");\n    }\n  };\n\n  const handleEdit = (project) => {\n    setEditProject(project);\n    form.setFieldsValue({ ...project, team_members: project.team_members.join(\", \") });\n  };\n\n  const handleEditSubmit = async () => {\n    try {\n      const updatedProject = {\n        ...form.getFieldsValue(),\n        team_members: form.getFieldValue(\"team_members\").split(\", \"),\n      };\n      await axios.put(`http://localhost:5005/api/projects/${editProject._id}`, updatedProject);\n      message.success(\"Project updated successfully\");\n      setApprovedProjects((prev) =>\n        prev.map((p) => (p._id === editProject._id ? updatedProject : p))\n      );\n      setEditProject(null);\n    } catch (err) {\n      message.error(\"Failed to update project\");\n    }\n  };\n\n  return (\n    <div style={{ padding: \"24px\" }}>\n      <Title level={2} style={{ textAlign: \"center\", marginBottom: \"24px\" }}>\n        Projects Management\n      </Title>\n\n      {loading ? (\n        <Spin size=\"large\" style={{ display: \"block\", margin: \"auto\" }} />\n      ) : error ? (\n        <Alert message={error} type=\"error\" showIcon />\n      ) : (\n        <>\n          {/* Pending Projects Section */}\n          <Card title=\"Pending Projects\" bordered={false} style={{ marginBottom: \"20px\" }}>\n            <Table\n              dataSource={pendingProjects}\n              rowKey=\"_id\"\n              columns={[\n                { title: \"Project ID\", dataIndex: \"_id\" },\n                { title: \"Project Name\", dataIndex: \"project_name\" },\n                { title: \"Client\", dataIndex: [\"client_id\", \"client_name\"] },\n                {\n                  title: \"Actions\",\n                  render: (_, project) => (\n                    <Space>\n                      <Button type=\"primary\" icon={<CheckOutlined />} onClick={() => handleApprove(project._id)}>\n                        Approve\n                      </Button>\n                      <Button danger icon={<CloseOutlined />} onClick={() => handleReject(project._id)}>\n                        Reject\n                      </Button>\n                    </Space>\n                  ),\n                },\n              ]}\n            />\n          </Card>\n\n          {/* Approved Projects Section */}\n          <Card title=\"Approved Projects\" bordered={false}>\n            <Table\n              dataSource={approvedProjects}\n              rowKey=\"_id\"\n              columns={[\n                { title: \"Project ID\", dataIndex: \"_id\" },\n                { title: \"Project Name\", dataIndex: \"project_name\" },\n                { title: \"Client\", dataIndex: [\"client_id\", \"client_name\"] },\n                {\n                  title: \"Status\",\n                  render: (_, project) => (\n                    <Select\n                      defaultValue={project.status}\n                      onChange={(value) => handleStatusChange(project._id, value)}\n                    >\n                      <Option value=\"Pending\">Pending</Option>\n                      <Option value=\"Ongoing\">Ongoing</Option>\n                      <Option value=\"Completed\">Completed</Option>\n                    </Select>\n                  ),\n                },\n                {\n                  title: \"Actions\",\n                  render: (_, project) => (\n                    <Space>\n                      <Button icon={<EyeOutlined />} onClick={() => handleViewDetails(project._id)}>\n                        View\n                      </Button>\n                      <Button icon={<EditOutlined />} onClick={() => handleEdit(project)}>\n                        Edit\n                      </Button>\n                    </Space>\n                  ),\n                },\n              ]}\n            />\n          </Card>\n        </>\n      )}\n\n      {/* Edit Modal */}\n      <Modal\n        title=\"Edit Project\"\n        open={!!editProject}\n        onCancel={() => setEditProject(null)}\n        onOk={handleEditSubmit}\n        okText=\"Save\"\n      >\n        <Form form={form} layout=\"vertical\">\n          <Form.Item name=\"project_name\" label=\"Project Name\" rules={[{ required: true, message: \"Please enter a project name\" }]}>\n            <Input />\n          </Form.Item>\n          <Form.Item name=\"description\" label=\"Description\">\n            <Input.TextArea />\n          </Form.Item>\n          <Form.Item name=\"status\" label=\"Status\">\n            <Select>\n              <Option value=\"Pending\">Pending</Option>\n              <Option value=\"Ongoing\">Ongoing</Option>\n              <Option value=\"Completed\">Completed</Option>\n            </Select>\n          </Form.Item>\n          <Form.Item name=\"team_members\" label=\"Team Members\">\n            <Input />\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  );\n};\n\nexport default ProjectsPage;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}