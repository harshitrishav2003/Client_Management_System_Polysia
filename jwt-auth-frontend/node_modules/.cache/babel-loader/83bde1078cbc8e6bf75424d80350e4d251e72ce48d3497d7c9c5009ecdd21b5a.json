{"ast":null,"code":"var _jsxFileName = \"/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom';\n// import axios from 'axios'; // Ensure axios is installed: `npm install axios`\n// import './Dashboard.css'; // Custom CSS for the dashboard\n\n// const Dashboard = () => {\n//   const [clients, setClients] = useState([]);\n//   const [search, setSearch] = useState('');\n//   const [filters, setFilters] = useState({\n//     region: '',\n//     industry: '',\n//     status: ''\n//   });\n//   const [sortOrder, setSortOrder] = useState('asc'); // 'asc' or 'desc'\n//   const [sortColumn, setSortColumn] = useState('client_name'); // Default column to sort\n//   const [authToken, setAuthToken] = useState(localStorage.getItem('token') || ''); // Get the token from localStorage\n\n//   // Fetch clients from backend when the component mounts or filters/sort change\n//   useEffect(() => {\n//     fetchClients();\n//   }, [filters, sortColumn, sortOrder]);\n\n//   const fetchClients = () => {\n//     const query = new URLSearchParams({\n//       search,\n//       region: filters.region,\n//       industry: filters.industry,\n//       status: filters.status,\n//       sortColumn,\n//       sortOrder\n//     });\n\n//     axios\n//       .get(`http://localhost:5005/api/users?${query.toString()}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`, // Pass token in Authorization header\n//         },\n//       })\n//       .then((response) => {\n//         setClients(response.data);\n//       })\n//       .catch((err) => {\n//         console.error('Error fetching clients:', err);\n//         // Handle error (e.g., logout if token is invalid)\n//       });\n//   };\n\n//   const handleSearch = (e) => {\n//     setSearch(e.target.value);\n//   };\n\n//   const handleFilterChange = (e) => {\n//     const { name, value } = e.target;\n//     setFilters({ ...filters, [name]: value });\n//   };\n\n//   const handleSort = (column) => {\n//     const newSortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n//     setSortOrder(newSortOrder);\n//     setSortColumn(column);\n//   };\n\n//   const handleEdit = (clientId) => {\n//     // Redirect to the client edit page (implement the edit page separately)\n//     window.location.href = `/edit-client/${clientId}`;\n//   };\n\n//   const handleDelete = (clientId) => {\n//     // Make API call to delete client\n//     axios\n//       .delete(`http://localhost:5005/api/users/${clientId}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then((response) => {\n//         // Remove deleted client from the list\n//         setClients(clients.filter((client) => client._id !== clientId));\n//         alert('Client deleted successfully');\n//       })\n//       .catch((err) => {\n//         console.error('Error deleting client:', err);\n//         alert('Failed to delete client');\n//       });\n//   };\n\n//   const exportData = (format) => {\n//     // Logic to export as excel, pdf, csv\n//     alert(`Exporting data as ${format}`);\n//   };\n\n//   return (\n//     <div className=\"dashboard\">\n//       <h1>Client Dashboard</h1>\n\n//       {/* Search Bar */}\n//       <input\n//         type=\"text\"\n//         placeholder=\"Search clients...\"\n//         value={search}\n//         onChange={handleSearch}\n//       />\n\n//       {/* Filter Options */}\n//       <select name=\"region\" onChange={handleFilterChange} value={filters.region}>\n//         <option value=\"\">All Regions</option>\n//         <option value=\"North America\">North America</option>\n//         <option value=\"Europe\">Europe</option>\n//         <option value=\"Asia\">Asia</option>\n//       </select>\n\n//       <select name=\"industry\" onChange={handleFilterChange} value={filters.industry}>\n//         <option value=\"\">All Industries</option>\n//         <option value=\"Finance\">Finance</option>\n//         <option value=\"Technology\">Technology</option>\n//         <option value=\"Healthcare\">Healthcare</option>\n//       </select>\n\n//       <select name=\"status\" onChange={handleFilterChange} value={filters.status}>\n//         <option value=\"\">All Statuses</option>\n//         <option value=\"Active\">Active</option>\n//         <option value=\"Inactive\">Inactive</option>\n//       </select>\n\n//       {/* Export Buttons */}\n//       <button onClick={() => exportData('excel')}>Export as Excel</button>\n//       <button onClick={() => exportData('pdf')}>Export as PDF</button>\n//       <button onClick={() => exportData('csv')}>Export as CSV</button>\n\n//       {/* Client Data Table */}\n//       <table>\n//         <thead>\n//           <tr>\n//             <th onClick={() => handleSort('client_name')}>Client Name</th>\n//             <th onClick={() => handleSort('industry')}>Industry</th>\n//             <th onClick={() => handleSort('status')}>Status</th>\n//             <th>Email</th>\n//             <th>Phone</th>\n//             <th>Contact Person</th>\n//             <th>Location</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {clients.length > 0 ? (\n//             clients.map((client) => (\n//               <tr key={client._id}>\n//                 <td>\n//                   <Link to={`/client/${client._id}`}>{client.client_name}</Link>\n//                 </td>\n//                 <td>{client.industry}</td>\n//                 <td>{client.status}</td>\n//                 <td>{client.email}</td>\n//                 <td>{client.phone}</td>\n//                 <td>{client.contact_person}</td>\n//                 <td>\n//                   {`${client.address.street}, ${client.address.city}, ${client.address.state}, ${client.address.postal_code}, ${client.address.country}`}\n//                 </td>\n//                 <td>\n//                   <button onClick={() => handleEdit(client._id)}>Edit</button>\n//                   <button onClick={() => handleDelete(client._id)}>Delete</button>\n//                 </td>\n//               </tr>\n//             ))\n//           ) : (\n//             <tr>\n//               <td colSpan=\"6\">No clients found</td>\n//             </tr>\n//           )}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [clients, setClients] = useState([]);\n  const [search, setSearch] = useState('');\n  const [filters, setFilters] = useState({\n    region: '',\n    industry: '',\n    status: ''\n  });\n  const [sortOrder, setSortOrder] = useState('asc');\n  const [sortColumn, setSortColumn] = useState('client_name');\n  const [authToken, setAuthToken] = useState(localStorage.getItem('token') || '');\n  const [editClientId, setEditClientId] = useState(null); // Track which client is being edited\n  const [editedClientData, setEditedClientData] = useState({}); // Store edited client data\n\n  useEffect(() => {\n    fetchClients();\n  }, [filters, sortColumn, sortOrder]);\n  const fetchClients = () => {\n    const query = new URLSearchParams({\n      search,\n      region: filters.region,\n      industry: filters.industry,\n      status: filters.status,\n      sortColumn,\n      sortOrder\n    });\n    axios.get(`http://localhost:5005/api/users?${query.toString()}`, {\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    }).then(response => {\n      setClients(response.data);\n    }).catch(err => {\n      console.error('Error fetching clients:', err);\n    });\n  };\n  const handleSearch = e => {\n    setSearch(e.target.value);\n  };\n  const handleFilterChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFilters({\n      ...filters,\n      [name]: value\n    });\n  };\n  const handleSort = column => {\n    const newSortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n    setSortOrder(newSortOrder);\n    setSortColumn(column);\n  };\n  const handleEdit = client => {\n    setEditClientId(client._id); // Set the client ID to indicate editing mode\n    setEditedClientData(client); // Populate the edited client data\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditedClientData({\n      ...editedClientData,\n      [name]: value\n    });\n  };\n  const handleSave = clientId => {\n    axios.put(`http://localhost:5005/api/users/${clientId}`, editedClientData, {\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    }).then(() => {\n      setClients(clients.map(client => client._id === clientId ? {\n        ...client,\n        ...editedClientData\n      } : client));\n      setEditClientId(null); // Exit edit mode after saving\n      alert('Client updated successfully');\n    }).catch(err => {\n      console.error('Error updating client:', err);\n      alert('Failed to update client');\n    });\n  };\n  const handleDelete = clientId => {\n    axios.delete(`http://localhost:5005/api/users/${clientId}`, {\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    }).then(() => {\n      setClients(clients.filter(client => client._id !== clientId));\n      alert('Client deleted successfully');\n    }).catch(err => {\n      console.error('Error deleting client:', err);\n      alert('Failed to delete client');\n    });\n  };\n  const exportData = format => {\n    alert(`Exporting data as ${format}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Client Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search clients...\",\n      value: search,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"region\",\n      onChange: handleFilterChange,\n      value: filters.region,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"All Regions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"North America\",\n        children: \"North America\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Europe\",\n        children: \"Europe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Asia\",\n        children: \"Asia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"industry\",\n      onChange: handleFilterChange,\n      value: filters.industry,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"All Industries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Finance\",\n        children: \"Finance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Technology\",\n        children: \"Technology\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Healthcare\",\n        children: \"Healthcare\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"status\",\n      onChange: handleFilterChange,\n      value: filters.status,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"All Statuses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Active\",\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Inactive\",\n        children: \"Inactive\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => exportData('excel'),\n      children: \"Export as Excel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => exportData('pdf'),\n      children: \"Export as PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => exportData('csv'),\n      children: \"Export as CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('client_name'),\n            children: \"Client Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('industry'),\n            children: \"Industry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('status'),\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Contact Person\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: clients.length > 0 ? clients.map(client => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: editClientId === client._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"client_name\",\n              value: editedClientData.client_name || '',\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 21\n            }, this) : client.client_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editClientId === client._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"industry\",\n              value: editedClientData.industry || '',\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 21\n            }, this) : client.industry\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editClientId === client._id ? /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"status\",\n              value: editedClientData.status || '',\n              onChange: handleInputChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Active\",\n                children: \"Active\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Inactive\",\n                children: \"Inactive\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 21\n            }, this) : client.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editClientId === client._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              value: editedClientData.email || '',\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 21\n            }, this) : client.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editClientId === client._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"phone\",\n              value: editedClientData.phone || '',\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 21\n            }, this) : client.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editClientId === client._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"contact_person\",\n              value: editedClientData.contact_person || '',\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 21\n            }, this) : client.contact_person\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editClientId === client._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"address\",\n              value: editedClientData.address || '',\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 21\n            }, this) : `${client.address ? client.address.street : 'No address available'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editClientId === client._id ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSave(client._id),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit(client),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(client._id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 17\n          }, this)]\n        }, client._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"8\",\n            children: \"No clients found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"/cWJpZ2gfhbROI2PfHrjgFerIDU=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","clients","setClients","search","setSearch","filters","setFilters","region","industry","status","sortOrder","setSortOrder","sortColumn","setSortColumn","authToken","setAuthToken","localStorage","getItem","editClientId","setEditClientId","editedClientData","setEditedClientData","fetchClients","query","URLSearchParams","get","toString","headers","Authorization","then","response","data","catch","err","console","error","handleSearch","e","target","value","handleFilterChange","name","handleSort","column","newSortOrder","handleEdit","client","_id","handleInputChange","handleSave","clientId","put","map","alert","handleDelete","delete","filter","exportData","format","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","length","client_name","email","phone","contact_person","address","street","colSpan","_c","$RefreshReg$"],"sources":["/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/Dashboard.js"],"sourcesContent":["\n// import React, { useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom';\n// import axios from 'axios'; // Ensure axios is installed: `npm install axios`\n// import './Dashboard.css'; // Custom CSS for the dashboard\n\n// const Dashboard = () => {\n//   const [clients, setClients] = useState([]);\n//   const [search, setSearch] = useState('');\n//   const [filters, setFilters] = useState({\n//     region: '',\n//     industry: '',\n//     status: ''\n//   });\n//   const [sortOrder, setSortOrder] = useState('asc'); // 'asc' or 'desc'\n//   const [sortColumn, setSortColumn] = useState('client_name'); // Default column to sort\n//   const [authToken, setAuthToken] = useState(localStorage.getItem('token') || ''); // Get the token from localStorage\n\n//   // Fetch clients from backend when the component mounts or filters/sort change\n//   useEffect(() => {\n//     fetchClients();\n//   }, [filters, sortColumn, sortOrder]);\n\n//   const fetchClients = () => {\n//     const query = new URLSearchParams({\n//       search,\n//       region: filters.region,\n//       industry: filters.industry,\n//       status: filters.status,\n//       sortColumn,\n//       sortOrder\n//     });\n\n//     axios\n//       .get(`http://localhost:5005/api/users?${query.toString()}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`, // Pass token in Authorization header\n//         },\n//       })\n//       .then((response) => {\n//         setClients(response.data);\n//       })\n//       .catch((err) => {\n//         console.error('Error fetching clients:', err);\n//         // Handle error (e.g., logout if token is invalid)\n//       });\n//   };\n\n//   const handleSearch = (e) => {\n//     setSearch(e.target.value);\n//   };\n\n//   const handleFilterChange = (e) => {\n//     const { name, value } = e.target;\n//     setFilters({ ...filters, [name]: value });\n//   };\n\n//   const handleSort = (column) => {\n//     const newSortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n//     setSortOrder(newSortOrder);\n//     setSortColumn(column);\n//   };\n\n//   const handleEdit = (clientId) => {\n//     // Redirect to the client edit page (implement the edit page separately)\n//     window.location.href = `/edit-client/${clientId}`;\n//   };\n\n//   const handleDelete = (clientId) => {\n//     // Make API call to delete client\n//     axios\n//       .delete(`http://localhost:5005/api/users/${clientId}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then((response) => {\n//         // Remove deleted client from the list\n//         setClients(clients.filter((client) => client._id !== clientId));\n//         alert('Client deleted successfully');\n//       })\n//       .catch((err) => {\n//         console.error('Error deleting client:', err);\n//         alert('Failed to delete client');\n//       });\n//   };\n\n//   const exportData = (format) => {\n//     // Logic to export as excel, pdf, csv\n//     alert(`Exporting data as ${format}`);\n//   };\n\n//   return (\n//     <div className=\"dashboard\">\n//       <h1>Client Dashboard</h1>\n\n//       {/* Search Bar */}\n//       <input\n//         type=\"text\"\n//         placeholder=\"Search clients...\"\n//         value={search}\n//         onChange={handleSearch}\n//       />\n\n//       {/* Filter Options */}\n//       <select name=\"region\" onChange={handleFilterChange} value={filters.region}>\n//         <option value=\"\">All Regions</option>\n//         <option value=\"North America\">North America</option>\n//         <option value=\"Europe\">Europe</option>\n//         <option value=\"Asia\">Asia</option>\n//       </select>\n\n//       <select name=\"industry\" onChange={handleFilterChange} value={filters.industry}>\n//         <option value=\"\">All Industries</option>\n//         <option value=\"Finance\">Finance</option>\n//         <option value=\"Technology\">Technology</option>\n//         <option value=\"Healthcare\">Healthcare</option>\n//       </select>\n\n//       <select name=\"status\" onChange={handleFilterChange} value={filters.status}>\n//         <option value=\"\">All Statuses</option>\n//         <option value=\"Active\">Active</option>\n//         <option value=\"Inactive\">Inactive</option>\n//       </select>\n\n//       {/* Export Buttons */}\n//       <button onClick={() => exportData('excel')}>Export as Excel</button>\n//       <button onClick={() => exportData('pdf')}>Export as PDF</button>\n//       <button onClick={() => exportData('csv')}>Export as CSV</button>\n\n//       {/* Client Data Table */}\n//       <table>\n//         <thead>\n//           <tr>\n//             <th onClick={() => handleSort('client_name')}>Client Name</th>\n//             <th onClick={() => handleSort('industry')}>Industry</th>\n//             <th onClick={() => handleSort('status')}>Status</th>\n//             <th>Email</th>\n//             <th>Phone</th>\n//             <th>Contact Person</th>\n//             <th>Location</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {clients.length > 0 ? (\n//             clients.map((client) => (\n//               <tr key={client._id}>\n//                 <td>\n//                   <Link to={`/client/${client._id}`}>{client.client_name}</Link>\n//                 </td>\n//                 <td>{client.industry}</td>\n//                 <td>{client.status}</td>\n//                 <td>{client.email}</td>\n//                 <td>{client.phone}</td>\n//                 <td>{client.contact_person}</td>\n//                 <td>\n//                   {`${client.address.street}, ${client.address.city}, ${client.address.state}, ${client.address.postal_code}, ${client.address.country}`}\n//                 </td>\n//                 <td>\n//                   <button onClick={() => handleEdit(client._id)}>Edit</button>\n//                   <button onClick={() => handleDelete(client._id)}>Delete</button>\n//                 </td>\n//               </tr>\n//             ))\n//           ) : (\n//             <tr>\n//               <td colSpan=\"6\">No clients found</td>\n//             </tr>\n//           )}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Dashboard.css';\n\nconst Dashboard = () => {\n  const [clients, setClients] = useState([]);\n  const [search, setSearch] = useState('');\n  const [filters, setFilters] = useState({\n    region: '',\n    industry: '',\n    status: ''\n  });\n  const [sortOrder, setSortOrder] = useState('asc');\n  const [sortColumn, setSortColumn] = useState('client_name');\n  const [authToken, setAuthToken] = useState(localStorage.getItem('token') || '');\n  \n  const [editClientId, setEditClientId] = useState(null); // Track which client is being edited\n  const [editedClientData, setEditedClientData] = useState({}); // Store edited client data\n\n  useEffect(() => {\n    fetchClients();\n  }, [filters, sortColumn, sortOrder]);\n\n  const fetchClients = () => {\n    const query = new URLSearchParams({\n      search,\n      region: filters.region,\n      industry: filters.industry,\n      status: filters.status,\n      sortColumn,\n      sortOrder\n    });\n\n    axios\n      .get(`http://localhost:5005/api/users?${query.toString()}`, {\n        headers: { Authorization: `Bearer ${authToken}` }\n      })\n      .then((response) => {\n        setClients(response.data);\n      })\n      .catch((err) => {\n        console.error('Error fetching clients:', err);\n      });\n  };\n\n  const handleSearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const handleFilterChange = (e) => {\n    const { name, value } = e.target;\n    setFilters({ ...filters, [name]: value });\n  };\n\n  const handleSort = (column) => {\n    const newSortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n    setSortOrder(newSortOrder);\n    setSortColumn(column);\n  };\n\n  const handleEdit = (client) => {\n    setEditClientId(client._id); // Set the client ID to indicate editing mode\n    setEditedClientData(client); // Populate the edited client data\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setEditedClientData({ ...editedClientData, [name]: value });\n  };\n\n  const handleSave = (clientId) => {\n    axios\n      .put(`http://localhost:5005/api/users/${clientId}`, editedClientData, {\n        headers: { Authorization: `Bearer ${authToken}` }\n      })\n      .then(() => {\n        setClients(clients.map((client) => (client._id === clientId ? { ...client, ...editedClientData } : client)));\n        setEditClientId(null); // Exit edit mode after saving\n        alert('Client updated successfully');\n      })\n      .catch((err) => {\n        console.error('Error updating client:', err);\n        alert('Failed to update client');\n      });\n  };\n\n  const handleDelete = (clientId) => {\n    axios\n      .delete(`http://localhost:5005/api/users/${clientId}`, {\n        headers: { Authorization: `Bearer ${authToken}` }\n      })\n      .then(() => {\n        setClients(clients.filter((client) => client._id !== clientId));\n        alert('Client deleted successfully');\n      })\n      .catch((err) => {\n        console.error('Error deleting client:', err);\n        alert('Failed to delete client');\n      });\n  };\n\n  const exportData = (format) => {\n    alert(`Exporting data as ${format}`);\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <h1>Client Dashboard</h1>\n\n      {/* Search Bar */}\n      <input type=\"text\" placeholder=\"Search clients...\" value={search} onChange={handleSearch} />\n\n      {/* Filter Options */}\n      <select name=\"region\" onChange={handleFilterChange} value={filters.region}>\n        <option value=\"\">All Regions</option>\n        <option value=\"North America\">North America</option>\n        <option value=\"Europe\">Europe</option>\n        <option value=\"Asia\">Asia</option>\n      </select>\n\n      <select name=\"industry\" onChange={handleFilterChange} value={filters.industry}>\n        <option value=\"\">All Industries</option>\n        <option value=\"Finance\">Finance</option>\n        <option value=\"Technology\">Technology</option>\n        <option value=\"Healthcare\">Healthcare</option>\n      </select>\n\n      <select name=\"status\" onChange={handleFilterChange} value={filters.status}>\n        <option value=\"\">All Statuses</option>\n        <option value=\"Active\">Active</option>\n        <option value=\"Inactive\">Inactive</option>\n      </select>\n\n      {/* Export Buttons */}\n      <button onClick={() => exportData('excel')}>Export as Excel</button>\n      <button onClick={() => exportData('pdf')}>Export as PDF</button>\n      <button onClick={() => exportData('csv')}>Export as CSV</button>\n\n      {/* Client Data Table */}\n      <table>\n        <thead>\n          <tr>\n            <th onClick={() => handleSort('client_name')}>Client Name</th>\n            <th onClick={() => handleSort('industry')}>Industry</th>\n            <th onClick={() => handleSort('status')}>Status</th>\n            <th>Email</th>\n            <th>Phone</th>\n            <th>Contact Person</th>\n            <th>Location</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {clients.length > 0 ? (\n            clients.map((client) => (\n              <tr key={client._id}>\n                <td>\n                  {editClientId === client._id ? (\n                    <input\n                      type=\"text\"\n                      name=\"client_name\"\n                      value={editedClientData.client_name || ''}\n                      onChange={handleInputChange}\n                    />\n                  ) : (\n                    client.client_name\n                  )}\n                </td>\n                <td>\n                  {editClientId === client._id ? (\n                    <input\n                      type=\"text\"\n                      name=\"industry\"\n                      value={editedClientData.industry || ''}\n                      onChange={handleInputChange}\n                    />\n                  ) : (\n                    client.industry\n                  )}\n                </td>\n                <td>\n                  {editClientId === client._id ? (\n                    <select\n                      name=\"status\"\n                      value={editedClientData.status || ''}\n                      onChange={handleInputChange}\n                    >\n                      <option value=\"Active\">Active</option>\n                      <option value=\"Inactive\">Inactive</option>\n                    </select>\n                  ) : (\n                    client.status\n                  )}\n                </td>\n                <td>\n                  {editClientId === client._id ? (\n                    <input\n                      type=\"email\"\n                      name=\"email\"\n                      value={editedClientData.email || ''}\n                      onChange={handleInputChange}\n                    />\n                  ) : (\n                    client.email\n                  )}\n                </td>\n                <td>\n                  {editClientId === client._id ? (\n                    <input\n                      type=\"text\"\n                      name=\"phone\"\n                      value={editedClientData.phone || ''}\n                      onChange={handleInputChange}\n                    />\n                  ) : (\n                    client.phone\n                  )}\n                </td>\n                <td>\n                  {editClientId === client._id ? (\n                    <input\n                      type=\"text\"\n                      name=\"contact_person\"\n                      value={editedClientData.contact_person || ''}\n                      onChange={handleInputChange}\n                    />\n                  ) : (\n                    client.contact_person\n                  )}\n                </td>\n                <td>\n                  {editClientId === client._id ? (\n                    <input\n                      type=\"text\"\n                      name=\"address\"\n                      value={editedClientData.address || ''}\n                      onChange={handleInputChange}\n                    />\n                  ) : (\n                    `${client.address ? client.address.street : 'No address available'}`\n                  )}\n                </td>\n                <td>\n                  {editClientId === client._id ? (\n                    <button onClick={() => handleSave(client._id)}>Save</button>\n                  ) : (\n                    <>\n                      <button onClick={() => handleEdit(client)}>Edit</button>\n                      <button onClick={() => handleDelete(client._id)}>Delete</button>\n                    </>\n                  )}\n                </td>\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td colSpan=\"8\">No clients found</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}