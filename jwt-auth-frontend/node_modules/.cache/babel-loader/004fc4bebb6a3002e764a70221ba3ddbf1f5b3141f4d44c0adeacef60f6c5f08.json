{"ast":null,"code":"var _jsxFileName = \"/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/Header.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import { logout } from \"../utils/auth\"; // Import the updated logout function\n\n// const Header = () => {\n//   const navigate = useNavigate();\n//   const [showDropdown, setShowDropdown] = useState(false);\n//   const token = localStorage.getItem(\"jwtToken\");\n//   const isAuthenticated = !!token;\n\n//   // Decode the token to check the role (assuming the token has the role info)\n//   const decodedToken = token ? JSON.parse(atob(token.split('.')[1])) : null;\n//   const isClient = decodedToken?.role === 'client';\n\n//   const handleLogout = () => {\n//     logout(navigate); // Redirect to home page after logout\n//   };\n\n//   const toggleDropdown = () => {\n//     setShowDropdown((prev) => !prev);\n//   };\n\n//   // Close dropdown after selecting an option\n//   const closeDropdown = () => {\n//     setShowDropdown(false);\n//   };\n\n//   return (\n//     <header style={headerStyle}>\n//       <div>\n//         <h1>Client Management System</h1>\n//       </div>\n//       <nav>\n//         {isAuthenticated ? (\n//           <>\n//             {isClient ? (\n//               <>\n//                 <button onClick={() => navigate(`/client/${decodedToken.clientId}`)} style={linkStyle}>\n//                   Client Profile\n//                 </button>\n//                 <button onClick={() => navigate(`/contract-management/${decodedToken.clientId}`)} style={linkStyle}>\n//                   Contract Management\n//                 </button>\n//                 <button onClick={() => navigate(`/activity-tracking`)} style={linkStyle}>\n//                   Activity Tracking\n//                 </button>\n//               </>\n//             ) : (\n//               <button onClick={() => navigate(`/dashboard`)} style={linkStyle}>\n//                 Dashboard\n//               </button>\n//             )}\n//             <button onClick={handleLogout} style={linkStyle}>Logout</button>\n//           </>\n//         ) : (\n//           <div style={{ position: 'relative', display: 'inline-block' }}>\n//             <button onClick={toggleDropdown} style={linkStyle}>\n//               Login\n//             </button>\n//             {showDropdown && (\n//               <div style={dropdownStyle}>\n//                 <button \n//                   onClick={() => { navigate('/admin-login'); closeDropdown(); }} \n//                   style={dropdownItemStyle}\n//                 >\n//                   Login as Admin\n//                 </button>\n//                 <button \n//                   onClick={() => { navigate('/client-login'); closeDropdown(); }} \n//                   style={dropdownItemStyle}\n//                 >\n//                   Login as Client\n//                 </button>\n//               </div>\n//             )}\n//           </div>\n//         )}\n//       </nav>\n//     </header>\n//   );\n// };\n\n// const headerStyle = {\n//   backgroundColor: '#000',\n//   color: '#fff',\n//   padding: '10px 20px',\n//   display: 'flex',\n//   justifyContent: 'space-between',\n//   alignItems: 'center',\n// };\n\n// const linkStyle = {\n//   color: '#fff',\n//   textDecoration: 'none',\n//   fontSize: '16px',\n//   margin: '0 10px',\n//   cursor: 'pointer',\n// };\n\n// const dropdownStyle = {\n//   position: 'absolute',\n//   top: '110%',\n//   right: '10%',\n//   backgroundColor: '#fff',\n//   boxShadow: '0px 4px 6px rgba(0, 0, 0, 0.1)',\n//   borderRadius: '12px',\n//   zIndex: 1000,\n//   minWidth: '150px',\n// };\n\n// const dropdownItemStyle = {\n//   padding: '10px 15px',\n//   color: '#000',\n//   textAlign: 'left',\n//   width: '100%',\n//   border: 'none',\n//   background: 'none',\n//   cursor: 'pointer',\n//   textDecoration: 'none',\n// };\n\n// export default Header;\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { logout } from \"../utils/auth\"; // Import the updated logout function\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  const navigate = useNavigate();\n  const [showDropdown, setShowDropdown] = useState(false);\n  const token = localStorage.getItem(\"jwtToken\");\n  const isAuthenticated = !!token;\n\n  // Decode the token to check the role (assuming the token has the role info)\n  const decodedToken = token ? JSON.parse(atob(token.split(\".\")[1])) : null;\n  const isClient = (decodedToken === null || decodedToken === void 0 ? void 0 : decodedToken.role) === \"client\";\n  const isAdmin = (decodedToken === null || decodedToken === void 0 ? void 0 : decodedToken.role) === \"admin\";\n  const handleLogout = () => {\n    logout(navigate); // Redirect to home page after logout\n  };\n  const toggleDropdown = () => {\n    setShowDropdown(prev => !prev);\n  };\n\n  // Close dropdown after selecting an option\n  const closeDropdown = () => {\n    setShowDropdown(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    style: headerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Client Management System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: isAuthenticated ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [isClient && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate(`/client/${decodedToken.clientId}`),\n            style: linkStyle,\n            children: \"Client Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate(`/contract-management/${decodedToken.clientId}`),\n            style: linkStyle,\n            children: \"Contract Management\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), isAdmin && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate(`/dashboard`),\n            style: linkStyle,\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate(`/activity-tracking`),\n            style: linkStyle,\n            children: \"Activity Tracking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          style: linkStyle,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\",\n          display: \"inline-block\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleDropdown,\n          style: linkStyle,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), showDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: dropdownStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              navigate(\"/admin-login\");\n              closeDropdown();\n            },\n            style: dropdownItemStyle,\n            children: \"Login as Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              navigate(\"/client-login\");\n              closeDropdown();\n            },\n            style: dropdownItemStyle,\n            children: \"Login as Client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"Qfx+vf8TY0op3oCOq9SyF1xNnAU=\", false, function () {\n  return [useNavigate];\n});\n_c = Header;\nconst headerStyle = {\n  backgroundColor: \"#000\",\n  color: \"#fff\",\n  padding: \"10px 20px\",\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\"\n};\nconst linkStyle = {\n  color: \"#fff\",\n  textDecoration: \"none\",\n  fontSize: \"16px\",\n  margin: \"0 10px\",\n  cursor: \"pointer\"\n};\nconst dropdownStyle = {\n  position: \"absolute\",\n  top: \"110%\",\n  right: \"10%\",\n  backgroundColor: \"#fff\",\n  boxShadow: \"0px 4px 6px rgba(0, 0, 0, 0.1)\",\n  borderRadius: \"12px\",\n  zIndex: 1000,\n  minWidth: \"150px\"\n};\nconst dropdownItemStyle = {\n  padding: \"10px 15px\",\n  color: \"#000\",\n  textAlign: \"left\",\n  width: \"100%\",\n  border: \"none\",\n  background: \"none\",\n  cursor: \"pointer\",\n  textDecoration: \"none\"\n};\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","useNavigate","logout","jsxDEV","_jsxDEV","Fragment","_Fragment","Header","_s","navigate","showDropdown","setShowDropdown","token","localStorage","getItem","isAuthenticated","decodedToken","JSON","parse","atob","split","isClient","role","isAdmin","handleLogout","toggleDropdown","prev","closeDropdown","style","headerStyle","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","clientId","linkStyle","position","display","dropdownStyle","dropdownItemStyle","_c","backgroundColor","color","padding","justifyContent","alignItems","textDecoration","fontSize","margin","cursor","top","right","boxShadow","borderRadius","zIndex","minWidth","textAlign","width","border","background","$RefreshReg$"],"sources":["/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/Header.js"],"sourcesContent":["\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import { logout } from \"../utils/auth\"; // Import the updated logout function\n\n\n\n// const Header = () => {\n//   const navigate = useNavigate();\n//   const [showDropdown, setShowDropdown] = useState(false);\n//   const token = localStorage.getItem(\"jwtToken\");\n//   const isAuthenticated = !!token;\n\n//   // Decode the token to check the role (assuming the token has the role info)\n//   const decodedToken = token ? JSON.parse(atob(token.split('.')[1])) : null;\n//   const isClient = decodedToken?.role === 'client';\n\n//   const handleLogout = () => {\n//     logout(navigate); // Redirect to home page after logout\n//   };\n\n//   const toggleDropdown = () => {\n//     setShowDropdown((prev) => !prev);\n//   };\n\n//   // Close dropdown after selecting an option\n//   const closeDropdown = () => {\n//     setShowDropdown(false);\n//   };\n\n//   return (\n//     <header style={headerStyle}>\n//       <div>\n//         <h1>Client Management System</h1>\n//       </div>\n//       <nav>\n//         {isAuthenticated ? (\n//           <>\n//             {isClient ? (\n//               <>\n//                 <button onClick={() => navigate(`/client/${decodedToken.clientId}`)} style={linkStyle}>\n//                   Client Profile\n//                 </button>\n//                 <button onClick={() => navigate(`/contract-management/${decodedToken.clientId}`)} style={linkStyle}>\n//                   Contract Management\n//                 </button>\n//                 <button onClick={() => navigate(`/activity-tracking`)} style={linkStyle}>\n//                   Activity Tracking\n//                 </button>\n//               </>\n//             ) : (\n//               <button onClick={() => navigate(`/dashboard`)} style={linkStyle}>\n//                 Dashboard\n//               </button>\n//             )}\n//             <button onClick={handleLogout} style={linkStyle}>Logout</button>\n//           </>\n//         ) : (\n//           <div style={{ position: 'relative', display: 'inline-block' }}>\n//             <button onClick={toggleDropdown} style={linkStyle}>\n//               Login\n//             </button>\n//             {showDropdown && (\n//               <div style={dropdownStyle}>\n//                 <button \n//                   onClick={() => { navigate('/admin-login'); closeDropdown(); }} \n//                   style={dropdownItemStyle}\n//                 >\n//                   Login as Admin\n//                 </button>\n//                 <button \n//                   onClick={() => { navigate('/client-login'); closeDropdown(); }} \n//                   style={dropdownItemStyle}\n//                 >\n//                   Login as Client\n//                 </button>\n//               </div>\n//             )}\n//           </div>\n//         )}\n//       </nav>\n//     </header>\n//   );\n// };\n\n// const headerStyle = {\n//   backgroundColor: '#000',\n//   color: '#fff',\n//   padding: '10px 20px',\n//   display: 'flex',\n//   justifyContent: 'space-between',\n//   alignItems: 'center',\n// };\n\n// const linkStyle = {\n//   color: '#fff',\n//   textDecoration: 'none',\n//   fontSize: '16px',\n//   margin: '0 10px',\n//   cursor: 'pointer',\n// };\n\n// const dropdownStyle = {\n//   position: 'absolute',\n//   top: '110%',\n//   right: '10%',\n//   backgroundColor: '#fff',\n//   boxShadow: '0px 4px 6px rgba(0, 0, 0, 0.1)',\n//   borderRadius: '12px',\n//   zIndex: 1000,\n//   minWidth: '150px',\n// };\n\n// const dropdownItemStyle = {\n//   padding: '10px 15px',\n//   color: '#000',\n//   textAlign: 'left',\n//   width: '100%',\n//   border: 'none',\n//   background: 'none',\n//   cursor: 'pointer',\n//   textDecoration: 'none',\n// };\n\n// export default Header;\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { logout } from \"../utils/auth\"; // Import the updated logout function\n\nconst Header = () => {\n  const navigate = useNavigate();\n  const [showDropdown, setShowDropdown] = useState(false);\n  const token = localStorage.getItem(\"jwtToken\");\n  const isAuthenticated = !!token;\n\n  // Decode the token to check the role (assuming the token has the role info)\n  const decodedToken = token ? JSON.parse(atob(token.split(\".\")[1])) : null;\n  const isClient = decodedToken?.role === \"client\";\n  const isAdmin = decodedToken?.role === \"admin\";\n\n  const handleLogout = () => {\n    logout(navigate); // Redirect to home page after logout\n  };\n\n  const toggleDropdown = () => {\n    setShowDropdown((prev) => !prev);\n  };\n\n  // Close dropdown after selecting an option\n  const closeDropdown = () => {\n    setShowDropdown(false);\n  };\n\n  return (\n    <header style={headerStyle}>\n      <div>\n        <h1>Client Management System</h1>\n      </div>\n      <nav>\n        {isAuthenticated ? (\n          <>\n            {isClient && (\n              <>\n                <button\n                  onClick={() => navigate(`/client/${decodedToken.clientId}`)}\n                  style={linkStyle}\n                >\n                  Client Profile\n                </button>\n                <button\n                  onClick={() =>\n                    navigate(`/contract-management/${decodedToken.clientId}`)\n                  }\n                  style={linkStyle}\n                >\n                  Contract Management\n                </button>\n                \n              </>\n            )}\n\n            {isAdmin && (\n              <>\n                <button\n                  onClick={() => navigate(`/dashboard`)}\n                  style={linkStyle}\n                >\n                  Dashboard\n                </button>\n                <button\n                  onClick={() => navigate(`/activity-tracking`)}\n                  style={linkStyle}\n                >\n                  Activity Tracking\n                </button>\n              </>\n            )}\n\n            <button onClick={handleLogout} style={linkStyle}>\n              Logout\n            </button>\n          </>\n        ) : (\n          <div style={{ position: \"relative\", display: \"inline-block\" }}>\n            <button onClick={toggleDropdown} style={linkStyle}>\n              Login\n            </button>\n            {showDropdown && (\n              <div style={dropdownStyle}>\n                <button\n                  onClick={() => {\n                    navigate(\"/admin-login\");\n                    closeDropdown();\n                  }}\n                  style={dropdownItemStyle}\n                >\n                  Login as Admin\n                </button>\n                <button\n                  onClick={() => {\n                    navigate(\"/client-login\");\n                    closeDropdown();\n                  }}\n                  style={dropdownItemStyle}\n                >\n                  Login as Client\n                </button>\n              </div>\n            )}\n          </div>\n        )}\n      </nav>\n    </header>\n  );\n};\n\nconst headerStyle = {\n  backgroundColor: \"#000\",\n  color: \"#fff\",\n  padding: \"10px 20px\",\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n};\n\nconst linkStyle = {\n  color: \"#fff\",\n  textDecoration: \"none\",\n  fontSize: \"16px\",\n  margin: \"0 10px\",\n  cursor: \"pointer\",\n};\n\nconst dropdownStyle = {\n  position: \"absolute\",\n  top: \"110%\",\n  right: \"10%\",\n  backgroundColor: \"#fff\",\n  boxShadow: \"0px 4px 6px rgba(0, 0, 0, 0.1)\",\n  borderRadius: \"12px\",\n  zIndex: 1000,\n  minWidth: \"150px\",\n};\n\nconst dropdownItemStyle = {\n  padding: \"10px 15px\",\n  color: \"#000\",\n  textAlign: \"left\",\n  width: \"100%\",\n  border: \"none\",\n  background: \"none\",\n  cursor: \"pointer\",\n  textDecoration: \"none\",\n};\n\nexport default Header;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}