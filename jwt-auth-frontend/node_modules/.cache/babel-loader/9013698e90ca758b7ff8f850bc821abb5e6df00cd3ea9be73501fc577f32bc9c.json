{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './Dashboard.css';\n// import PendingUsers from \"../components/PendingUser\";\n// import { Link } from 'react-router-dom';\n// const Dashboard = () => {\n//   const [clients, setClients] = useState([]);\n//   const [search, setSearch] = useState('');\n//   const [filters, setFilters] = useState({\n//     region: '',\n//     industry: '',\n//     status: '',\n//   });\n//   const [sortOrder, setSortOrder] = useState('asc');\n//   const [sortColumn, setSortColumn] = useState('client_name');\n//   const [authToken, setAuthToken] = useState(localStorage.getItem('token') || '');\n//   const [editingClient, setEditingClient] = useState(null); // Client being edited\n//   const [error, setError] = useState('');\n//   useEffect(() => {\n//     fetchClients();\n//   }, [filters, sortColumn, sortOrder]);\n//   const fetchClients = () => {\n//     const query = new URLSearchParams({\n//       search,\n//       region: filters.region,\n//       industry: filters.industry,\n//       status: filters.status,\n//       sortColumn,\n//       sortOrder,\n//     });\n//     axios\n//       .get(`http://localhost:5005/api/users?${query.toString()}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then((response) => {\n//         setClients(response.data);\n//       })\n//       .catch((err) => {\n//         console.error('Error fetching clients:', err);\n//       });\n//   };\n//   const handleSearch = (e) => {\n//     setSearch(e.target.value);\n//   };\n//   const handleFilterChange = (e) => {\n//     const { name, value } = e.target;\n//     setFilters({ ...filters, [name]: value });\n//   };\n//   const handleSort = (column) => {\n//     const newSortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n//     setSortOrder(newSortOrder);\n//     setSortColumn(column);\n//   };\n// const handleEditClick = (client) => {\n//   setEditingClient(client); // Set the client for editing\n// };\n// const handleEditChange = (e) => {\n//   const { name, value } = e.target;\n//   setEditingClient({ ...editingClient, [name]: value });\n// };\n//   const handleAddressChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditingClient({\n//       ...editingClient,\n//       address: {\n//         ...editingClient.address,\n//         [name]: value,\n//       },\n//     });\n//   };\n// const handleEditSubmit = async () => {\n//   try {\n//     await axios.put(\n//       `http://localhost:5005/api/users/${editingClient._id}`,\n//       editingClient,\n//       {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       }\n//     );\n//     // Update client list with the new details\n//     setClients(\n//       clients.map((client) =>\n//         client._id === editingClient._id ? editingClient : client\n//       )\n//     );\n//     setEditingClient(null); // Close the editing form\n//   } catch (err) {\n//     console.error('Error updating client:', err);\n//     setError('Failed to update client. Please try again.');\n//   }\n// };\n//   const handleDelete = (clientId) => {\n//     axios\n//       .delete(`http://localhost:5005/api/users/${clientId}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then(() => {\n//         setClients(clients.filter((client) => client._id !== clientId));\n//         alert('Client deleted successfully');\n//       })\n//       .catch((err) => {\n//         console.error('Error deleting client:', err);\n//       });\n//   };\n//   return (\n//     <div className=\"dashboard\">\n//       {/* <h1 className='Dash'>Client Dashboard</h1> */}\n//       <PendingUsers />\n//       <h1 className='Dash'>Clients</h1>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Search clients...\"\n//         value={search}\n//         onChange={handleSearch}\n//       />\n//       {/* Filter Options */}\n//       <select name=\"region\" onChange={handleFilterChange} value={filters.region}>\n//         <option value=\"\">All Regions</option>\n//         <option value=\"North America\">North America</option>\n//         <option value=\"Europe\">Europe</option>\n//         <option value=\"Asia\">Asia</option>\n//       </select>\n//       <select\n//         name=\"industry\"\n//         onChange={handleFilterChange}\n//         value={filters.industry}\n//       >\n//         <option value=\"\">All Industries</option>\n//         <option value=\"Finance\">Finance</option>\n//         <option value=\"Technology\">Technology</option>\n//         <option value=\"Healthcare\">Healthcare</option>\n//       </select>\n//       <select\n//         name=\"status\"\n//         onChange={handleFilterChange}\n//         value={filters.status}\n//       >\n//         <option value=\"\">All Statuses</option>\n//         <option value=\"Active\">Active</option>\n//         <option value=\"Inactive\">Inactive</option>\n//       </select>\n//       <table>\n//         <thead>\n//           <tr>\n//             <th onClick={() => handleSort('client_name')}>Client Name</th>\n//             <th onClick={() => handleSort('status')}>Status</th>\n//             <th onClick={() => handleSort('industry')}>Industry</th>\n//             <th>Email</th>\n//             <th>Phone</th>\n//             <th>Contact Person</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {clients.map((client) => (\n//             <tr key={client._id}>\n//                 <td>\n//                   <Link to={`/client/${client._id}`}>{client.client_name}</Link>\n//                 </td>\n//             <td>{client.status}</td>\n//               <td>{client.industry}</td>\n//               <td>{client.email}</td>\n//               <td>{client.phone}</td>\n//               <td>{client.contact_person}</td>\n//               <td>\n//                 <button onClick={() => handleEditClick(client)}>Edit</button>\n//                 <button onClick={() => handleDelete(client._id)}>Delete</button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//       {editingClient && (\n//         <div className=\"edit-modal\">\n//           <h3>Edit Client</h3>\n//           <input\n//             type=\"text\"\n//             name=\"client_name\"\n//             value={editingClient.client_name}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"contact_person\"\n//             value={editingClient.contact_person}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"email\"\n//             value={editingClient.email}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"phone\"\n//             value={editingClient.phone}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"industry\"\n//             value={editingClient.industry}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <h3>Address</h3>\n//           <input\n//             type=\"text\"\n//             name=\"street\"\n//             value={editingClient.address?.street}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"city\"\n//             value={editingClient.address?.city}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"state\"\n//             value={editingClient.address?.state}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"postal_code\"\n//             value={editingClient.address?.postal_code}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"country\"\n//             value={editingClient.address?.country}\n//             onChange={handleAddressChange}\n//           />\n//           <button onClick={handleEditSubmit}>Save</button>\n//           <button onClick={() => setEditingClient(null)}>Cancel</button>\n//           {error && <p>{error}</p>}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n// export default Dashboard;\nimport React,{useState,useEffect}from'react';import axios from'axios';import{Table,Input,Select,Button,Modal,Form,message,Space}from'antd';import{EditOutlined,DeleteOutlined,CheckCircleOutlined,CloseCircleOutlined}from'@ant-design/icons';import PendingUsers from\"../components/PendingUser\";import{Link}from'react-router-dom';import'./Dashboard.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const{Search}=Input;const{Option}=Select;const Dashboard=()=>{const[clients,setClients]=useState([]);const[search,setSearch]=useState('');const[filters,setFilters]=useState({region:'',industry:'',status:''});const[sortOrder,setSortOrder]=useState('asc');const[sortColumn,setSortColumn]=useState('client_name');const[authToken]=useState(localStorage.getItem('token')||'');const[editingClient,setEditingClient]=useState(null);const[isModalVisible,setIsModalVisible]=useState(false);const[form]=Form.useForm();useEffect(()=>{fetchClients();},[filters,sortColumn,sortOrder]);const fetchClients=()=>{const query=new URLSearchParams({search,...filters,sortColumn,sortOrder});axios.get(`http://localhost:5005/api/users?${query.toString()}`,{headers:{Authorization:`Bearer ${authToken}`}}).then(response=>{const filteredClients=response.data.filter(client=>client.isApproved===\"approved\"&&client.role===\"client\");setClients(filteredClients);}).catch(err=>console.error('Error fetching clients:',err));};const handleFilterChange=(name,value)=>{setFilters({...filters,[name]:value});};const handleSort=column=>{setSortOrder(sortOrder==='asc'?'desc':'asc');setSortColumn(column);};const handleEditClick=client=>{setEditingClient(client);setIsModalVisible(true);};const handleEditSubmit=async()=>{try{await axios.put(`http://localhost:5005/api/users/${editingClient._id}`,editingClient,{headers:{Authorization:`Bearer ${authToken}`}});setClients(clients.map(client=>client._id===editingClient._id?editingClient:client));setIsModalVisible(false);// Close the modal\nsetEditingClient(null);// Clear editing client\n}catch(err){console.error('Error updating client:',err);message.error('Failed to update client');// Use message.error instead of setError\n}};const handleDelete=clientId=>{axios.delete(`http://localhost:5005/api/users/${clientId}`,{headers:{Authorization:`Bearer ${authToken}`}}).then(()=>{setClients(clients.filter(client=>client._id!==clientId));message.success('Client deleted successfully');}).catch(err=>{console.error('Error deleting client:',err);message.error('Failed to delete client');});};const columns=[{title:'Client Name',dataIndex:'client_name',sorter:true,render:(text,record)=>/*#__PURE__*/_jsx(Link,{to:`/client/${record._id}`,children:text})},{title:'Status',dataIndex:'status',sorter:true,render:status=>/*#__PURE__*/_jsxs(\"span\",{children:[status==='Active'?/*#__PURE__*/_jsx(CheckCircleOutlined,{style:{color:'green',marginRight:5}}):/*#__PURE__*/_jsx(CloseCircleOutlined,{style:{color:'red',marginRight:5}}),status]})},{title:'Industry',dataIndex:'industry',sorter:true},{title:'Email',dataIndex:'email'},{title:'Phone',dataIndex:'phone'},{title:'Contact Person',dataIndex:'contact_person'},{title:'Action',render:(_,record)=>/*#__PURE__*/_jsxs(Space,{children:[/*#__PURE__*/_jsx(Button,{type:\"primary\",icon:/*#__PURE__*/_jsx(EditOutlined,{}),onClick:()=>handleEditClick(record)}),/*#__PURE__*/_jsx(Button,{type:\"danger\",icon:/*#__PURE__*/_jsx(DeleteOutlined,{}),onClick:()=>handleDelete(record._id)})]})}];return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard\",children:[/*#__PURE__*/_jsx(PendingUsers,{}),/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',alignItems:'center',justifyContent:'center',width:'100%'},children:/*#__PURE__*/_jsx(\"h2\",{style:{margin:'0 auto',fontSize:'24px',fontWeight:'bold'},children:\"Clients\"})}),/*#__PURE__*/_jsxs(Space,{children:[/*#__PURE__*/_jsx(Search,{placeholder:\"Search clients...\",onChange:e=>setSearch(e.target.value),enterButton:true}),/*#__PURE__*/_jsxs(Select,{placeholder:\"Region\",onChange:value=>handleFilterChange('region',value),children:[/*#__PURE__*/_jsx(Option,{value:\"\",children:\"All Regions\"}),/*#__PURE__*/_jsx(Option,{value:\"North America\",children:\"North America\"}),/*#__PURE__*/_jsx(Option,{value:\"Europe\",children:\"Europe\"}),/*#__PURE__*/_jsx(Option,{value:\"Asia\",children:\"Asia\"})]}),/*#__PURE__*/_jsxs(Select,{placeholder:\"Industry\",onChange:value=>handleFilterChange('industry',value),children:[/*#__PURE__*/_jsx(Option,{value:\"\",children:\"All Industries\"}),/*#__PURE__*/_jsx(Option,{value:\"Finance\",children:\"Finance\"}),/*#__PURE__*/_jsx(Option,{value:\"Technology\",children:\"Technology\"}),/*#__PURE__*/_jsx(Option,{value:\"Healthcare\",children:\"Healthcare\"})]}),/*#__PURE__*/_jsxs(Select,{placeholder:\"Status\",onChange:value=>handleFilterChange('status',value),children:[/*#__PURE__*/_jsx(Option,{value:\"\",children:\"All Statuses\"}),/*#__PURE__*/_jsx(Option,{value:\"Active\",children:\"Active\"}),/*#__PURE__*/_jsx(Option,{value:\"Inactive\",children:\"Inactive\"})]})]}),/*#__PURE__*/_jsx(Table,{columns:columns,dataSource:clients,rowKey:\"_id\",onChange:(pagination,filters,sorter)=>handleSort(sorter.columnKey)}),/*#__PURE__*/_jsx(Modal,{title:\"Edit Client\",visible:isModalVisible,onOk:handleEditSubmit,onCancel:()=>setIsModalVisible(false),children:/*#__PURE__*/_jsxs(Form,{form:form,layout:\"vertical\",children:[/*#__PURE__*/_jsxs(Form.Item,{name:\"client_name\",label:\"Client Name\",rules:[{required:true,message:'Client name is required'}],children:[\" \",/*#__PURE__*/_jsx(Input,{}),\" \"]}),/*#__PURE__*/_jsxs(Form.Item,{name:\"contact_person\",label:\"Contact Person\",children:[\" \",/*#__PURE__*/_jsx(Input,{}),\" \"]}),/*#__PURE__*/_jsxs(Form.Item,{name:\"email\",label:\"Email\",children:[\" \",/*#__PURE__*/_jsx(Input,{type:\"email\"}),\" \"]}),/*#__PURE__*/_jsxs(Form.Item,{name:\"phone\",label:\"Phone\",children:[\" \",/*#__PURE__*/_jsx(Input,{}),\" \"]}),/*#__PURE__*/_jsxs(Form.Item,{name:\"industry\",label:\"Industry\",children:[\" \",/*#__PURE__*/_jsx(Input,{}),\" \"]})]})})]});};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","axios","Table","Input","Select","Button","Modal","Form","message","Space","EditOutlined","DeleteOutlined","CheckCircleOutlined","CloseCircleOutlined","PendingUsers","Link","jsx","_jsx","jsxs","_jsxs","Search","Option","Dashboard","clients","setClients","search","setSearch","filters","setFilters","region","industry","status","sortOrder","setSortOrder","sortColumn","setSortColumn","authToken","localStorage","getItem","editingClient","setEditingClient","isModalVisible","setIsModalVisible","form","useForm","fetchClients","query","URLSearchParams","get","toString","headers","Authorization","then","response","filteredClients","data","filter","client","isApproved","role","catch","err","console","error","handleFilterChange","name","value","handleSort","column","handleEditClick","handleEditSubmit","put","_id","map","handleDelete","clientId","delete","success","columns","title","dataIndex","sorter","render","text","record","to","children","style","color","marginRight","_","type","icon","onClick","className","display","alignItems","justifyContent","width","margin","fontSize","fontWeight","placeholder","onChange","e","target","enterButton","dataSource","rowKey","pagination","columnKey","visible","onOk","onCancel","layout","Item","label","rules","required"],"sources":["/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/Dashboard.js"],"sourcesContent":["\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './Dashboard.css';\n// import PendingUsers from \"../components/PendingUser\";\n// import { Link } from 'react-router-dom';\n\n// const Dashboard = () => {\n//   const [clients, setClients] = useState([]);\n//   const [search, setSearch] = useState('');\n//   const [filters, setFilters] = useState({\n//     region: '',\n//     industry: '',\n//     status: '',\n//   });\n//   const [sortOrder, setSortOrder] = useState('asc');\n//   const [sortColumn, setSortColumn] = useState('client_name');\n//   const [authToken, setAuthToken] = useState(localStorage.getItem('token') || '');\n//   const [editingClient, setEditingClient] = useState(null); // Client being edited\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     fetchClients();\n//   }, [filters, sortColumn, sortOrder]);\n\n//   const fetchClients = () => {\n//     const query = new URLSearchParams({\n//       search,\n//       region: filters.region,\n//       industry: filters.industry,\n//       status: filters.status,\n//       sortColumn,\n//       sortOrder,\n//     });\n\n//     axios\n//       .get(`http://localhost:5005/api/users?${query.toString()}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then((response) => {\n//         setClients(response.data);\n//       })\n//       .catch((err) => {\n//         console.error('Error fetching clients:', err);\n//       });\n//   };\n\n//   const handleSearch = (e) => {\n//     setSearch(e.target.value);\n//   };\n\n//   const handleFilterChange = (e) => {\n//     const { name, value } = e.target;\n//     setFilters({ ...filters, [name]: value });\n//   };\n\n//   const handleSort = (column) => {\n//     const newSortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n//     setSortOrder(newSortOrder);\n//     setSortColumn(column);\n//   };\n\n  // const handleEditClick = (client) => {\n  //   setEditingClient(client); // Set the client for editing\n  // };\n\n  // const handleEditChange = (e) => {\n  //   const { name, value } = e.target;\n  //   setEditingClient({ ...editingClient, [name]: value });\n  // };\n\n//   const handleAddressChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditingClient({\n//       ...editingClient,\n//       address: {\n//         ...editingClient.address,\n//         [name]: value,\n//       },\n//     });\n//   };\n\n  // const handleEditSubmit = async () => {\n  //   try {\n  //     await axios.put(\n  //       `http://localhost:5005/api/users/${editingClient._id}`,\n  //       editingClient,\n  //       {\n  //         headers: {\n  //           Authorization: `Bearer ${authToken}`,\n  //         },\n  //       }\n  //     );\n  //     // Update client list with the new details\n  //     setClients(\n  //       clients.map((client) =>\n  //         client._id === editingClient._id ? editingClient : client\n  //       )\n  //     );\n  //     setEditingClient(null); // Close the editing form\n  //   } catch (err) {\n  //     console.error('Error updating client:', err);\n  //     setError('Failed to update client. Please try again.');\n  //   }\n  // };\n\n//   const handleDelete = (clientId) => {\n//     axios\n//       .delete(`http://localhost:5005/api/users/${clientId}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then(() => {\n//         setClients(clients.filter((client) => client._id !== clientId));\n//         alert('Client deleted successfully');\n//       })\n//       .catch((err) => {\n//         console.error('Error deleting client:', err);\n//       });\n//   };\n\n//   return (\n//     <div className=\"dashboard\">\n//       {/* <h1 className='Dash'>Client Dashboard</h1> */}\n//       <PendingUsers />\n//       <h1 className='Dash'>Clients</h1>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Search clients...\"\n//         value={search}\n//         onChange={handleSearch}\n//       />\n\n//       {/* Filter Options */}\n//       <select name=\"region\" onChange={handleFilterChange} value={filters.region}>\n//         <option value=\"\">All Regions</option>\n//         <option value=\"North America\">North America</option>\n//         <option value=\"Europe\">Europe</option>\n//         <option value=\"Asia\">Asia</option>\n//       </select>\n//       <select\n//         name=\"industry\"\n//         onChange={handleFilterChange}\n//         value={filters.industry}\n//       >\n//         <option value=\"\">All Industries</option>\n//         <option value=\"Finance\">Finance</option>\n//         <option value=\"Technology\">Technology</option>\n//         <option value=\"Healthcare\">Healthcare</option>\n//       </select>\n//       <select\n//         name=\"status\"\n//         onChange={handleFilterChange}\n//         value={filters.status}\n//       >\n//         <option value=\"\">All Statuses</option>\n//         <option value=\"Active\">Active</option>\n//         <option value=\"Inactive\">Inactive</option>\n//       </select>\n\n//       <table>\n//         <thead>\n//           <tr>\n//             <th onClick={() => handleSort('client_name')}>Client Name</th>\n//             <th onClick={() => handleSort('status')}>Status</th>\n//             <th onClick={() => handleSort('industry')}>Industry</th>\n            \n//             <th>Email</th>\n//             <th>Phone</th>\n//             <th>Contact Person</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {clients.map((client) => (\n//             <tr key={client._id}>\n//                 <td>\n//                   <Link to={`/client/${client._id}`}>{client.client_name}</Link>\n//                 </td>\n              \n              \n//             <td>{client.status}</td>\n//               <td>{client.industry}</td>\n//               <td>{client.email}</td>\n//               <td>{client.phone}</td>\n//               <td>{client.contact_person}</td>\n//               <td>\n//                 <button onClick={() => handleEditClick(client)}>Edit</button>\n//                 <button onClick={() => handleDelete(client._id)}>Delete</button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n\n//       {editingClient && (\n//         <div className=\"edit-modal\">\n//           <h3>Edit Client</h3>\n//           <input\n//             type=\"text\"\n//             name=\"client_name\"\n//             value={editingClient.client_name}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"contact_person\"\n//             value={editingClient.contact_person}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"email\"\n//             value={editingClient.email}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"phone\"\n//             value={editingClient.phone}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"industry\"\n//             value={editingClient.industry}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <h3>Address</h3>\n//           <input\n//             type=\"text\"\n//             name=\"street\"\n//             value={editingClient.address?.street}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"city\"\n//             value={editingClient.address?.city}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"state\"\n//             value={editingClient.address?.state}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"postal_code\"\n//             value={editingClient.address?.postal_code}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"country\"\n//             value={editingClient.address?.country}\n//             onChange={handleAddressChange}\n//           />\n//           <button onClick={handleEditSubmit}>Save</button>\n//           <button onClick={() => setEditingClient(null)}>Cancel</button>\n//           {error && <p>{error}</p>}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Table, Input, Select, Button, Modal, Form, message, Space } from 'antd';\nimport { EditOutlined, DeleteOutlined, CheckCircleOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport PendingUsers from \"../components/PendingUser\";\nimport { Link } from 'react-router-dom';\nimport './Dashboard.css';\n\nconst { Search } = Input;\nconst { Option } = Select;\n\nconst Dashboard = () => {\n  const [clients, setClients] = useState([]);\n  const [search, setSearch] = useState('');\n  const [filters, setFilters] = useState({ region: '', industry: '', status: '' });\n  const [sortOrder, setSortOrder] = useState('asc');\n  const [sortColumn, setSortColumn] = useState('client_name');\n  const [authToken] = useState(localStorage.getItem('token') || '');\n  const [editingClient, setEditingClient] = useState(null);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    fetchClients();\n  }, [filters, sortColumn, sortOrder]);\n\n  const fetchClients = () => {\n    const query = new URLSearchParams({ search, ...filters, sortColumn, sortOrder });\n    axios.get(`http://localhost:5005/api/users?${query.toString()}`, {\n      headers: { Authorization: `Bearer ${authToken}` },\n    })\n    .then((response) => {\n      \n      const filteredClients = response.data.filter(client => client.isApproved === \"approved\" && client.role === \"client\");\n      setClients(filteredClients);\n    })\n    .catch((err) => console.error('Error fetching clients:', err));\n  };\n\n  const handleFilterChange = (name, value) => {\n    setFilters({ ...filters, [name]: value });\n  };\n\n  const handleSort = (column) => {\n    setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n    setSortColumn(column);\n  };\n\n \n  const handleEditClick = (client) => {\n    setEditingClient(client);\n    setIsModalVisible(true);\n  };\n  const handleEditSubmit = async () => {\n    try {\n      await axios.put(\n        `http://localhost:5005/api/users/${editingClient._id}`,\n        editingClient,\n        {\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n          },\n        }\n      );\n      setClients(\n        clients.map((client) =>\n          client._id === editingClient._id ? editingClient : client\n        )\n      );\n      setIsModalVisible(false); // Close the modal\n      setEditingClient(null); // Clear editing client\n    } catch (err) {\n      console.error('Error updating client:', err);\n      message.error('Failed to update client'); // Use message.error instead of setError\n    }\n  };\n  const handleDelete = (clientId) => {\n    axios.delete(`http://localhost:5005/api/users/${clientId}`, {\n      headers: { Authorization: `Bearer ${authToken}` },\n    })\n    .then(() => {\n      setClients(clients.filter(client => client._id !== clientId));\n      message.success('Client deleted successfully');\n    })\n    .catch(err => {\n      console.error('Error deleting client:', err);\n      message.error('Failed to delete client');\n    });\n  };\n\n  const columns = [\n    { title: 'Client Name', dataIndex: 'client_name', sorter: true, render: (text, record) => <Link to={`/client/${record._id}`}>{text}</Link> },\n    { \n      title: 'Status', \n      dataIndex: 'status', \n      sorter: true,\n      render: (status) => (\n        <span>\n          {status === 'Active' ? (\n            <CheckCircleOutlined style={{ color: 'green', marginRight: 5 }} />\n          ) : (\n            <CloseCircleOutlined style={{ color: 'red', marginRight: 5 }} />\n          )}\n          {status}\n        </span>\n      )\n    },\n    { title: 'Industry', dataIndex: 'industry', sorter: true },\n    { title: 'Email', dataIndex: 'email' },\n    { title: 'Phone', dataIndex: 'phone' },\n    { title: 'Contact Person', dataIndex: 'contact_person' },\n    { title: 'Action', render: (_, record) => (\n      <Space>\n        <Button type=\"primary\" icon={<EditOutlined />} onClick={() => handleEditClick(record)} />\n        <Button type=\"danger\" icon={<DeleteOutlined />} onClick={() => handleDelete(record._id)} />\n      </Space>\n    )},\n  ];\n\n  return (\n    <div className=\"dashboard\">\n      <PendingUsers />\n      <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', width: '100%' }}>\n  <h2 style={{ margin: '0 auto', fontSize: '24px', fontWeight: 'bold' }}>Clients</h2>\n</div>\n      <Space>\n        <Search placeholder=\"Search clients...\" onChange={e => setSearch(e.target.value)} enterButton />\n        <Select placeholder=\"Region\" onChange={value => handleFilterChange('region', value)}>\n          <Option value=\"\">All Regions</Option>\n          <Option value=\"North America\">North America</Option>\n          <Option value=\"Europe\">Europe</Option>\n          <Option value=\"Asia\">Asia</Option>\n        </Select>\n        <Select placeholder=\"Industry\" onChange={value => handleFilterChange('industry', value)}>\n          <Option value=\"\">All Industries</Option>\n          <Option value=\"Finance\">Finance</Option>\n          <Option value=\"Technology\">Technology</Option>\n          <Option value=\"Healthcare\">Healthcare</Option>\n        </Select>\n        <Select placeholder=\"Status\" onChange={value => handleFilterChange('status', value)}>\n          <Option value=\"\">All Statuses</Option>\n          <Option value=\"Active\">Active</Option>\n          <Option value=\"Inactive\">Inactive</Option>\n        </Select>\n      </Space>\n      <Table columns={columns} dataSource={clients} rowKey=\"_id\" onChange={(pagination, filters, sorter) => handleSort(sorter.columnKey)} />\n      \n      <Modal title=\"Edit Client\" visible={isModalVisible} onOk={handleEditSubmit} onCancel={() => setIsModalVisible(false)}>\n        <Form form={form} layout=\"vertical\">\n          <Form.Item name=\"client_name\" label=\"Client Name\" rules={[{ required: true, message: 'Client name is required' }]}> <Input /> </Form.Item>\n          <Form.Item name=\"contact_person\" label=\"Contact Person\"> <Input /> </Form.Item>\n          <Form.Item name=\"email\" label=\"Email\"> <Input type=\"email\" /> </Form.Item>\n          <Form.Item name=\"phone\" label=\"Phone\"> <Input /> </Form.Item>\n          <Form.Item name=\"industry\" label=\"Industry\"> <Input /> </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEE;AACA;AACA;AAEA;AACA;AACA;AACA;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}