{"ast":null,"code":"var _jsxFileName = \"/Users/harshitrishav/Demo/jwt-auth-frontend/src/App.js\";\n// import React from 'react';\n// import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\n// import ProjectDetailPage from './components/ProjectDetail';\n// import AdminLogin from './components/AdminLogin'\n// import ClientLogin from './components/ClientLogin';\n// import Dashboard from './components/Dashboard';\n// import ClientProfile from './components/ClientProfile';\n// import HomePage from './components/HomePage';\n// import ContractManagement from './components/ContractManagement';\n// import ActivityTracking from './components/ActivityTracking';\n// import Header from './components/Header';\n// import Footer from './components/Footer';\n// import ProjectsPage from './components/ProjectPage';\n// import ClientRegister from './components/ClientRegister';\n\n// const App = () => {\n//   const token = localStorage.getItem('jwtToken'); // Get token from localStorage\n//   const isAuthenticated = !!token; // Check if the user is authenticated\n\n//   const getUserRole = () => {\n//     if (!token) return null;\n//     const decodedToken = JSON.parse(atob(token.split('.')[1])); // Decode the JWT\n//     return decodedToken.role; // Extract user role\n//   };\n\n//   const role = getUserRole();\n\n//   return (\n//     <Router>\n//       <Header />\n//       <Routes>\n//         {/* Public Routes */}\n//         <Route path=\"/\" element={<HomePage />} />\n//         <Route\n//           path=\"/admin-login\"\n//           element={isAuthenticated && role === 'admin' ? <Navigate to=\"/dashboard\" /> : <AdminLogin />}\n//         />\n//         <Route\n//           path=\"/client-login\"\n//           element={isAuthenticated && role === 'client' ? <Navigate to={`/client/${role.clientId}`} /> : <ClientLogin />}\n//         />\n//          <Route\n//           path=\"/client-register\"\n//           element={<ClientRegister />} // Add route for registration\n//         />\n\n//         {/* Protected Routes */}\n//         <Route\n//           path=\"/dashboard\"\n//           element={isAuthenticated && role === 'admin' ? <Dashboard /> : <Navigate to=\"/admin-login\" />}\n//         />\n//           <Route\n//           path=\"/activity-tracking\"\n//           element={\n//             isAuthenticated && role === \"admin\" ? (\n//               <ActivityTracking />\n//             ) : (\n//               <Navigate to=\"/admin-login\" />\n//             )\n//           }\n//         />\n//          <Route\n//               path=\"/admin/projects\"\n//               element={\n//                 isAuthenticated && role === \"admin\" ? (\n//                   <ProjectsPage />\n//                 ) : (\n//                   <Navigate to=\"/admin-login\" />\n//                 )\n//               }\n//             />\n//             <Route\n//               path=\"/project/:projectId\"\n//               element={\n//                 isAuthenticated && role === \"admin\" ? (\n//                   <ProjectDetailPage />\n//                 ) : (\n//                   <Navigate to=\"/admin-login\" />\n//                 )\n//               }\n//             />\n//          {/* <Route path=\"/project/:projectId\" component={ProjectDetailPage} /> */}\n//         <Route\n//           path=\"/client/:clientId\"\n//           element={isAuthenticated ? <ClientProfile /> : <Navigate to=\"/client-login\" />}\n//         />\n//        <Route path=\"/contract-management/:clientId\" element={<ContractManagement />} />\n//         <Route\n//           path=\"/activity-tracking\"\n//           element={isAuthenticated && role === 'client' ? <ActivityTracking /> : <Navigate to=\"/client-login\" />}\n//         />\n\n//         {/* Fallback Route */}\n//         <Route path=\"*\" element={<h2>404 - Page Not Found</h2>} />\n//       </Routes>\n//       <Footer />\n//     </Router>\n//   );\n// };\n\n// export default App;\nimport React from \"react\";\nimport Chatbot from \"./components/Chatbot\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Chatbot, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Chatbot","jsxDEV","_jsxDEV","App","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/harshitrishav/Demo/jwt-auth-frontend/src/App.js"],"sourcesContent":["\n// import React from 'react';\n// import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\n// import ProjectDetailPage from './components/ProjectDetail';\n// import AdminLogin from './components/AdminLogin'\n// import ClientLogin from './components/ClientLogin';\n// import Dashboard from './components/Dashboard';\n// import ClientProfile from './components/ClientProfile';\n// import HomePage from './components/HomePage';\n// import ContractManagement from './components/ContractManagement';\n// import ActivityTracking from './components/ActivityTracking';\n// import Header from './components/Header';\n// import Footer from './components/Footer';\n// import ProjectsPage from './components/ProjectPage';\n// import ClientRegister from './components/ClientRegister';\n\n\n// const App = () => {\n//   const token = localStorage.getItem('jwtToken'); // Get token from localStorage\n//   const isAuthenticated = !!token; // Check if the user is authenticated\n\n//   const getUserRole = () => {\n//     if (!token) return null;\n//     const decodedToken = JSON.parse(atob(token.split('.')[1])); // Decode the JWT\n//     return decodedToken.role; // Extract user role\n//   };\n\n//   const role = getUserRole();\n\n//   return (\n//     <Router>\n//       <Header />\n//       <Routes>\n//         {/* Public Routes */}\n//         <Route path=\"/\" element={<HomePage />} />\n//         <Route\n//           path=\"/admin-login\"\n//           element={isAuthenticated && role === 'admin' ? <Navigate to=\"/dashboard\" /> : <AdminLogin />}\n//         />\n//         <Route\n//           path=\"/client-login\"\n//           element={isAuthenticated && role === 'client' ? <Navigate to={`/client/${role.clientId}`} /> : <ClientLogin />}\n//         />\n//          <Route\n//           path=\"/client-register\"\n//           element={<ClientRegister />} // Add route for registration\n//         />\n\n//         {/* Protected Routes */}\n//         <Route\n//           path=\"/dashboard\"\n//           element={isAuthenticated && role === 'admin' ? <Dashboard /> : <Navigate to=\"/admin-login\" />}\n//         />\n//           <Route\n//           path=\"/activity-tracking\"\n//           element={\n//             isAuthenticated && role === \"admin\" ? (\n//               <ActivityTracking />\n//             ) : (\n//               <Navigate to=\"/admin-login\" />\n//             )\n//           }\n//         />\n//          <Route\n//               path=\"/admin/projects\"\n//               element={\n//                 isAuthenticated && role === \"admin\" ? (\n//                   <ProjectsPage />\n//                 ) : (\n//                   <Navigate to=\"/admin-login\" />\n//                 )\n//               }\n//             />\n//             <Route\n//               path=\"/project/:projectId\"\n//               element={\n//                 isAuthenticated && role === \"admin\" ? (\n//                   <ProjectDetailPage />\n//                 ) : (\n//                   <Navigate to=\"/admin-login\" />\n//                 )\n//               }\n//             />\n//          {/* <Route path=\"/project/:projectId\" component={ProjectDetailPage} /> */}\n//         <Route\n//           path=\"/client/:clientId\"\n//           element={isAuthenticated ? <ClientProfile /> : <Navigate to=\"/client-login\" />}\n//         />\n//        <Route path=\"/contract-management/:clientId\" element={<ContractManagement />} />\n//         <Route\n//           path=\"/activity-tracking\"\n//           element={isAuthenticated && role === 'client' ? <ActivityTracking /> : <Navigate to=\"/client-login\" />}\n//         />\n        \n//         {/* Fallback Route */}\n//         <Route path=\"*\" element={<h2>404 - Page Not Found</h2>} />\n//       </Routes>\n//       <Footer />\n//     </Router>\n//   );\n// };\n\n// export default App;\nimport React from \"react\";\nimport Chatbot from \"./components/Chatbot\";\n\nfunction App() {\n  return (\n    <div>\n      <Chatbot />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,GAAGA,CAAA,EAAG;EACb,oBACED,OAAA;IAAAE,QAAA,eACEF,OAAA,CAACF,OAAO;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV;AAACC,EAAA,GANQN,GAAG;AAQZ,eAAeA,GAAG;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}