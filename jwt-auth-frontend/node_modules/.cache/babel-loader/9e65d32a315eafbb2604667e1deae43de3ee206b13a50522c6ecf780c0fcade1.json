{"ast":null,"code":"var _jsxFileName = \"/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/ContractManagement.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { useParams } from \"react-router-dom\";\n// import axios from \"axios\";\n// import \"../App.css\";\n\n// const ClientProfile = () => {\n//   const { clientId } = useParams(); // Get the clientId from the URL params\n//   const [client, setClient] = useState(null);\n//   const [projects, setProjects] = useState([]); // State to store projects\n//   const [error, setError] = useState(\"\");\n//   const [showForm, setShowForm] = useState(false); // Toggle form visibility\n//   const [formData, setFormData] = useState({\n//     project_name: \"\",\n//     description: \"\",\n//     start_date: \"\",\n//     end_date: \"\",\n//     budget: \"\",\n//     client_id: clientId,\n//   });\n\n//   useEffect(() => {\n//     const fetchClientDetails = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5005/api/client/${clientId}`);\n//         setClient(response.data);\n//       } catch (err) {\n//         setError(\"Failed to load client details.\");\n//       }\n//     };\n\n//     const fetchClientProjects = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5005/api/projects/${clientId}`);\n//         // Make sure team_members is always an array\n//         const updatedProjects = response.data.map((project) => ({\n//           ...project,\n//           team_members: Array.isArray(project.team_members) ? project.team_members : [],\n//         }));\n//         setProjects(updatedProjects);\n//       } catch (err) {\n//         setError(\"Failed to load projects.\");\n//       }\n//     };\n\n//     fetchClientDetails();\n//     fetchClientProjects();\n//   }, [clientId]);\n\n//   const handleFormChange = (e) => {\n//     const { name, value } = e.target;\n\n//     setFormData({\n//       ...formData,\n//       [name]: value,\n//     });\n//   };\n\n//   const handleFormSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await axios.post(\"http://localhost:5005/api/projects\", formData);\n//       setProjects([...projects, response.data]); // Add new project to the list\n//       setShowForm(false); // Hide form after submission\n//       console.log(response.data); // Handle the response data (e.g., display success message)\n//     } catch (error) {\n//       console.error(\"Error submitting form:\", error);\n//     }\n//   };\n\n//   if (error) {\n//     return <div>{error}</div>;\n//   }\n\n//   if (!client) {\n//     return <div>Loading...</div>;\n//   }\n\n//   return (\n//     <div>\n//       <h1 style={{ textAlign: \"center\" }}>Projects for {client.client_name}</h1>\n\n//       {/* Display Projects in Table Format */}\n//       <h2>Projects</h2>\n//       {projects.length === 0 ? (\n//         <p>No projects found for this client.</p>\n//       ) : (\n//         <table className=\"project-table\">\n//           <thead>\n//             <tr>\n//               <th>Project Name</th>\n//               <th>Description</th>\n//               <th>Start Date</th>\n//               <th>End Date</th>\n//               <th>Budget</th>\n//               <th>Team Members</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {projects.map((project) => (\n//               <tr key={project._id}>\n//                 <td>{project.project_name}</td>\n//                 <td>{project.description}</td>\n//                 <td>{new Date(project.start_date).toLocaleDateString()}</td>\n//                 <td>{new Date(project.end_date).toLocaleDateString()}</td>\n//                 <td>{project.budget}</td>\n//                 <td>{(project.team_members || []).join(\", \")}</td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       )}\n\n//       <div className=\"client-profile-card\">\n//         {/* Button to Show/Hide Form */}\n//         <button onClick={() => setShowForm(!showForm)}>\n//           {showForm ? \"Cancel\" : \"Add New Project\"}\n//         </button>\n\n//         {/* Project Creation Form */}\n//         {showForm && (\n//           <div className=\"project-form\">\n//           <h2>Create a New Project</h2>\n//           <form onSubmit={handleFormSubmit}>\n//             <div>\n//               <label>Project Name</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"project_name\"\n//                 value={formData.project_name}\n//                 onChange={handleFormChange}\n//                 required\n//               />\n//             </div>\n//             <div>\n//               <label>Description</label>\n//               <textarea\n//                 name=\"description\"\n//                 value={formData.description}\n//                 onChange={handleFormChange}\n//                 className=\"description-input\"\n//               />\n//             </div>\n//             <div>\n//               <label>Start Date</label>\n//               <input\n//                 type=\"date\"\n//                 name=\"start_date\"\n//                 value={formData.start_date}\n//                 onChange={handleFormChange}\n//                 className=\"date-input\"\n//               />\n//             </div>\n//             <div>\n//               <label>End Date</label>\n//               <input\n//                 type=\"date\"\n//                 name=\"end_date\"\n//                 value={formData.end_date}\n//                 onChange={handleFormChange}\n//                 className=\"date-input\"\n//               />\n//             </div>\n//             <div>\n//               <label>Budget</label>\n//               <input\n//                 type=\"number\"\n//                 name=\"budget\"\n//                 value={formData.budget}\n//                 onChange={handleFormChange}\n//               />\n//             </div>\n//             <div>\n//               <button type=\"submit\">Create Project</button>\n//             </div>\n//           </form>\n//         </div>\n\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ClientProfile;\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Container, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button, TextField, Card, CardContent, CircularProgress, Alert, Grid } from \"@mui/material\";\nimport { Input } from \"@/components/ui/input\";\nimport { Card as ShadCard } from \"@/components/ui/card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClientProfile = () => {\n  _s();\n  const {\n    clientId\n  } = useParams();\n  const [client, setClient] = useState(null);\n  const [projects, setProjects] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [showForm, setShowForm] = useState(false);\n  const [formData, setFormData] = useState({\n    project_name: \"\",\n    description: \"\",\n    start_date: \"\",\n    end_date: \"\",\n    budget: \"\",\n    client_id: clientId\n  });\n  useEffect(() => {\n    const fetchClientData = async () => {\n      try {\n        const clientRes = await axios.get(`http://localhost:5005/api/client/${clientId}`);\n        const projectsRes = await axios.get(`http://localhost:5005/api/projects/${clientId}`);\n        setClient(clientRes.data);\n        setProjects(projectsRes.data);\n      } catch (err) {\n        setError(\"Failed to load client details or projects.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchClientData();\n  }, [clientId]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:5005/api/projects\", formData);\n      setProjects([...projects, response.data]);\n      setShowForm(false);\n    } catch (error) {\n      console.error(\"Error submitting form:\", error);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(CircularProgress, {\n    sx: {\n      display: \"block\",\n      margin: \"auto\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(Alert, {\n    severity: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      mt: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mb: 4,\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        textAlign: \"center\",\n        children: [client === null || client === void 0 ? void 0 : client.client_name, \"'s Projects\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      sx: {\n        mb: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Project Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Start Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"End Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Budget\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: projects.map(project => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: project.project_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: project.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: new Date(project.start_date).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: new Date(project.end_date).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [\"$\", project.budget]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this)]\n          }, project._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => setShowForm(!showForm),\n      sx: {\n        mb: 2\n      },\n      children: showForm ? \"Cancel\" : \"Add New Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(ShadCard, {\n      className: \"p-4 shadow-md border\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Create a New Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Project Name\",\n              name: \"project_name\",\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Description\",\n              name: \"description\",\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              type: \"date\",\n              name: \"start_date\",\n              label: \"Start Date\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              type: \"date\",\n              name: \"end_date\",\n              label: \"End Date\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Budget\",\n              type: \"number\",\n              name: \"budget\",\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"success\",\n              fullWidth: true,\n              children: \"Create Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 5\n  }, this);\n};\n_s(ClientProfile, \"FgzakxX01xQcfNnJJwcDLmTesHE=\", false, function () {\n  return [useParams];\n});\n_c = ClientProfile;\nexport default ClientProfile;\nvar _c;\n$RefreshReg$(_c, \"ClientProfile\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","Container","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","TextField","Card","CardContent","CircularProgress","Alert","Grid","Input","ShadCard","jsxDEV","_jsxDEV","ClientProfile","_s","clientId","client","setClient","projects","setProjects","error","setError","loading","setLoading","showForm","setShowForm","formData","setFormData","project_name","description","start_date","end_date","budget","client_id","fetchClientData","clientRes","get","projectsRes","data","err","handleChange","e","name","value","target","handleSubmit","preventDefault","response","post","console","sx","display","margin","fileName","_jsxFileName","lineNumber","columnNumber","severity","children","maxWidth","mt","mb","p","variant","textAlign","client_name","component","map","project","Date","toLocaleDateString","_id","color","onClick","className","onSubmit","container","spacing","item","xs","placeholder","onChange","required","fullWidth","type","label","_c","$RefreshReg$"],"sources":["/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/ContractManagement.js"],"sourcesContent":["\n// import React, { useState, useEffect } from \"react\";\n// import { useParams } from \"react-router-dom\";\n// import axios from \"axios\";\n// import \"../App.css\";\n\n// const ClientProfile = () => {\n//   const { clientId } = useParams(); // Get the clientId from the URL params\n//   const [client, setClient] = useState(null);\n//   const [projects, setProjects] = useState([]); // State to store projects\n//   const [error, setError] = useState(\"\");\n//   const [showForm, setShowForm] = useState(false); // Toggle form visibility\n//   const [formData, setFormData] = useState({\n//     project_name: \"\",\n//     description: \"\",\n//     start_date: \"\",\n//     end_date: \"\",\n//     budget: \"\",\n//     client_id: clientId,\n//   });\n\n//   useEffect(() => {\n//     const fetchClientDetails = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5005/api/client/${clientId}`);\n//         setClient(response.data);\n//       } catch (err) {\n//         setError(\"Failed to load client details.\");\n//       }\n//     };\n\n//     const fetchClientProjects = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5005/api/projects/${clientId}`);\n//         // Make sure team_members is always an array\n//         const updatedProjects = response.data.map((project) => ({\n//           ...project,\n//           team_members: Array.isArray(project.team_members) ? project.team_members : [],\n//         }));\n//         setProjects(updatedProjects);\n//       } catch (err) {\n//         setError(\"Failed to load projects.\");\n//       }\n//     };\n\n//     fetchClientDetails();\n//     fetchClientProjects();\n//   }, [clientId]);\n\n//   const handleFormChange = (e) => {\n//     const { name, value } = e.target;\n\n//     setFormData({\n//       ...formData,\n//       [name]: value,\n//     });\n//   };\n\n//   const handleFormSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await axios.post(\"http://localhost:5005/api/projects\", formData);\n//       setProjects([...projects, response.data]); // Add new project to the list\n//       setShowForm(false); // Hide form after submission\n//       console.log(response.data); // Handle the response data (e.g., display success message)\n//     } catch (error) {\n//       console.error(\"Error submitting form:\", error);\n//     }\n//   };\n\n//   if (error) {\n//     return <div>{error}</div>;\n//   }\n\n//   if (!client) {\n//     return <div>Loading...</div>;\n//   }\n\n//   return (\n//     <div>\n//       <h1 style={{ textAlign: \"center\" }}>Projects for {client.client_name}</h1>\n\n//       {/* Display Projects in Table Format */}\n//       <h2>Projects</h2>\n//       {projects.length === 0 ? (\n//         <p>No projects found for this client.</p>\n//       ) : (\n//         <table className=\"project-table\">\n//           <thead>\n//             <tr>\n//               <th>Project Name</th>\n//               <th>Description</th>\n//               <th>Start Date</th>\n//               <th>End Date</th>\n//               <th>Budget</th>\n//               <th>Team Members</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {projects.map((project) => (\n//               <tr key={project._id}>\n//                 <td>{project.project_name}</td>\n//                 <td>{project.description}</td>\n//                 <td>{new Date(project.start_date).toLocaleDateString()}</td>\n//                 <td>{new Date(project.end_date).toLocaleDateString()}</td>\n//                 <td>{project.budget}</td>\n//                 <td>{(project.team_members || []).join(\", \")}</td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       )}\n\n//       <div className=\"client-profile-card\">\n//         {/* Button to Show/Hide Form */}\n//         <button onClick={() => setShowForm(!showForm)}>\n//           {showForm ? \"Cancel\" : \"Add New Project\"}\n//         </button>\n\n//         {/* Project Creation Form */}\n//         {showForm && (\n//           <div className=\"project-form\">\n//           <h2>Create a New Project</h2>\n//           <form onSubmit={handleFormSubmit}>\n//             <div>\n//               <label>Project Name</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"project_name\"\n//                 value={formData.project_name}\n//                 onChange={handleFormChange}\n//                 required\n//               />\n//             </div>\n//             <div>\n//               <label>Description</label>\n//               <textarea\n//                 name=\"description\"\n//                 value={formData.description}\n//                 onChange={handleFormChange}\n//                 className=\"description-input\"\n//               />\n//             </div>\n//             <div>\n//               <label>Start Date</label>\n//               <input\n//                 type=\"date\"\n//                 name=\"start_date\"\n//                 value={formData.start_date}\n//                 onChange={handleFormChange}\n//                 className=\"date-input\"\n//               />\n//             </div>\n//             <div>\n//               <label>End Date</label>\n//               <input\n//                 type=\"date\"\n//                 name=\"end_date\"\n//                 value={formData.end_date}\n//                 onChange={handleFormChange}\n//                 className=\"date-input\"\n//               />\n//             </div>\n//             <div>\n//               <label>Budget</label>\n//               <input\n//                 type=\"number\"\n//                 name=\"budget\"\n//                 value={formData.budget}\n//                 onChange={handleFormChange}\n//               />\n//             </div>\n//             <div>\n//               <button type=\"submit\">Create Project</button>\n//             </div>\n//           </form>\n//         </div>\n        \n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ClientProfile;\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { \n  Container, Typography, Table, TableBody, TableCell, \n  TableContainer, TableHead, TableRow, Paper, Button, \n  TextField, Card, CardContent, CircularProgress, Alert, Grid \n} from \"@mui/material\";\nimport { Input } from \"@/components/ui/input\";\nimport { Card as ShadCard } from \"@/components/ui/card\";\n\nconst ClientProfile = () => {\n  const { clientId } = useParams();\n  const [client, setClient] = useState(null);\n  const [projects, setProjects] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [showForm, setShowForm] = useState(false);\n  const [formData, setFormData] = useState({\n    project_name: \"\",\n    description: \"\",\n    start_date: \"\",\n    end_date: \"\",\n    budget: \"\",\n    client_id: clientId,\n  });\n\n  useEffect(() => {\n    const fetchClientData = async () => {\n      try {\n        const clientRes = await axios.get(`http://localhost:5005/api/client/${clientId}`);\n        const projectsRes = await axios.get(`http://localhost:5005/api/projects/${clientId}`);\n        setClient(clientRes.data);\n        setProjects(projectsRes.data);\n      } catch (err) {\n        setError(\"Failed to load client details or projects.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchClientData();\n  }, [clientId]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:5005/api/projects\", formData);\n      setProjects([...projects, response.data]);\n      setShowForm(false);\n    } catch (error) {\n      console.error(\"Error submitting form:\", error);\n    }\n  };\n\n  if (loading) return <CircularProgress sx={{ display: \"block\", margin: \"auto\" }} />;\n  if (error) return <Alert severity=\"error\">{error}</Alert>;\n\n  return (\n    <Container maxWidth=\"md\" sx={{ mt: 4 }}>\n      <Card sx={{ mb: 4, p: 3 }}>\n        <Typography variant=\"h4\" textAlign=\"center\">\n          {client?.client_name}'s Projects\n        </Typography>\n      </Card>\n      \n      <TableContainer component={Paper} sx={{ mb: 4 }}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell><b>Project Name</b></TableCell>\n              <TableCell><b>Description</b></TableCell>\n              <TableCell><b>Start Date</b></TableCell>\n              <TableCell><b>End Date</b></TableCell>\n              <TableCell><b>Budget</b></TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {projects.map((project) => (\n              <TableRow key={project._id}>\n                <TableCell>{project.project_name}</TableCell>\n                <TableCell>{project.description}</TableCell>\n                <TableCell>{new Date(project.start_date).toLocaleDateString()}</TableCell>\n                <TableCell>{new Date(project.end_date).toLocaleDateString()}</TableCell>\n                <TableCell>${project.budget}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <Button \n        variant=\"contained\" \n        color=\"primary\" \n        onClick={() => setShowForm(!showForm)}\n        sx={{ mb: 2 }}\n      >\n        {showForm ? \"Cancel\" : \"Add New Project\"}\n      </Button>\n\n      {showForm && (\n        <ShadCard className=\"p-4 shadow-md border\">\n          <Typography variant=\"h6\">Create a New Project</Typography>\n          <form onSubmit={handleSubmit}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Input placeholder=\"Project Name\" name=\"project_name\" onChange={handleChange} required />\n              </Grid>\n              <Grid item xs={12}>\n                <Input placeholder=\"Description\" name=\"description\" onChange={handleChange} required />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField fullWidth type=\"date\" name=\"start_date\" label=\"Start Date\" onChange={handleChange} />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField fullWidth type=\"date\" name=\"end_date\" label=\"End Date\" onChange={handleChange} />\n              </Grid>\n              <Grid item xs={12}>\n                <Input placeholder=\"Budget\" type=\"number\" name=\"budget\" onChange={handleChange} required />\n              </Grid>\n              <Grid item xs={12}>\n                <Button type=\"submit\" variant=\"contained\" color=\"success\" fullWidth>\n                  Create Project\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </ShadCard>\n      )}\n    </Container>\n  );\n};\n\nexport default ClientProfile;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}