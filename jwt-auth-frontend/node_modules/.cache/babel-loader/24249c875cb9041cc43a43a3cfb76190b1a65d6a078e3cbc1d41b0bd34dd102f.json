{"ast":null,"code":"var _jsxFileName = \"/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/AdminLogin.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import { jwtDecode } from \"jwt-decode\"; // Corrected import statement\n// import LoginForm from \"./LoginForm\";\n\n// const AdminLogin = () => {\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await axios.post(\"http://localhost:5005/api/login\", { email, password });\n//       const { token } = response.data;\n//       localStorage.setItem(\"jwtToken\", token);\n\n//       const decodedToken = jwtDecode(token); // Corrected usage of jwtDecode\n//       if (decodedToken.role === \"admin\") {\n//         window.location.href = \"/dashboard\";\n//       } else {\n//         setError(\"Unauthorized access.\");\n//       }\n//     } catch (err) {\n//       setError(err.response?.data?.message || \"Invalid credentials. Please try again.\");\n//     }\n//   };\n\n//   return (\n//     <LoginForm\n//       onSubmit={handleSubmit}\n//       onChange={(e, field) => (field === \"email\" ? setEmail(e.target.value) : setPassword(e.target.value))}\n//       email={email}\n//       password={password}\n//       error={error}\n//     />\n//   );\n// };\n\n// export default AdminLogin;\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\"; // Import navigate from react-router-dom\nimport jwtDecode from \"jwt-decode\"; // Corrected import statement\nimport LoginForm from \"./LoginForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminLogin = () => {\n  _s();\n  const navigate = useNavigate(); // Initialize navigate\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:5005/api/login\", {\n        email,\n        password\n      });\n      const {\n        token\n      } = response.data;\n      localStorage.setItem(\"jwtToken\", token);\n      const decodedToken = jwtDecode(token);\n      if (decodedToken.role === \"admin\") {\n        navigate(\"/dashboard\"); // Use navigate instead of window.location.href\n      } else {\n        setError(\"Unauthorized access.\");\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Invalid credentials. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(LoginForm, {\n    onSubmit: handleSubmit,\n    onChange: (e, field) => field === \"email\" ? setEmail(e.target.value) : setPassword(e.target.value),\n    email: email,\n    password: password,\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminLogin, \"I5nlxnySThrFynfg0b4CBLAO5h0=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminLogin;\nexport default AdminLogin;\nvar _c;\n$RefreshReg$(_c, \"AdminLogin\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jwtDecode","LoginForm","jsxDEV","_jsxDEV","AdminLogin","_s","navigate","email","setEmail","password","setPassword","error","setError","handleSubmit","e","preventDefault","response","post","token","data","localStorage","setItem","decodedToken","role","err","_err$response","_err$response$data","message","onSubmit","onChange","field","target","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/AdminLogin.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import { jwtDecode } from \"jwt-decode\"; // Corrected import statement\n// import LoginForm from \"./LoginForm\";\n\n// const AdminLogin = () => {\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await axios.post(\"http://localhost:5005/api/login\", { email, password });\n//       const { token } = response.data;\n//       localStorage.setItem(\"jwtToken\", token);\n\n//       const decodedToken = jwtDecode(token); // Corrected usage of jwtDecode\n//       if (decodedToken.role === \"admin\") {\n//         window.location.href = \"/dashboard\";\n//       } else {\n//         setError(\"Unauthorized access.\");\n//       }\n//     } catch (err) {\n//       setError(err.response?.data?.message || \"Invalid credentials. Please try again.\");\n//     }\n//   };\n\n//   return (\n//     <LoginForm\n//       onSubmit={handleSubmit}\n//       onChange={(e, field) => (field === \"email\" ? setEmail(e.target.value) : setPassword(e.target.value))}\n//       email={email}\n//       password={password}\n//       error={error}\n//     />\n//   );\n// };\n\n// export default AdminLogin;\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\"; // Import navigate from react-router-dom\nimport jwtDecode from \"jwt-decode\"; // Corrected import statement\nimport LoginForm from \"./LoginForm\";\n\nconst AdminLogin = () => {\n  const navigate = useNavigate(); // Initialize navigate\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:5005/api/login\", { email, password });\n      const { token } = response.data;\n      localStorage.setItem(\"jwtToken\", token);\n\n      const decodedToken = jwtDecode(token);\n      if (decodedToken.role === \"admin\") {\n        navigate(\"/dashboard\"); // Use navigate instead of window.location.href\n      } else {\n        setError(\"Unauthorized access.\");\n      }\n    } catch (err) {\n      setError(err.response?.data?.message || \"Invalid credentials. Please try again.\");\n    }\n  };\n\n  return (\n    <LoginForm\n      onSubmit={handleSubmit}\n      onChange={(e, field) => (field === \"email\" ? setEmail(e.target.value) : setPassword(e.target.value))}\n      email={email}\n      password={password}\n      error={error}\n    />\n  );\n};\n\nexport default AdminLogin;\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,OAAOC,SAAS,MAAM,YAAY,CAAC,CAAC;AACpC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC,CAAC,CAAC;EAChC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMgB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAAC,iCAAiC,EAAE;QAAEV,KAAK;QAAEE;MAAS,CAAC,CAAC;MACzF,MAAM;QAAES;MAAM,CAAC,GAAGF,QAAQ,CAACG,IAAI;MAC/BC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEH,KAAK,CAAC;MAEvC,MAAMI,YAAY,GAAGtB,SAAS,CAACkB,KAAK,CAAC;MACrC,IAAII,YAAY,CAACC,IAAI,KAAK,OAAO,EAAE;QACjCjB,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;MAC1B,CAAC,MAAM;QACLM,QAAQ,CAAC,sBAAsB,CAAC;MAClC;IACF,CAAC,CAAC,OAAOY,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZd,QAAQ,CAAC,EAAAa,aAAA,GAAAD,GAAG,CAACR,QAAQ,cAAAS,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcN,IAAI,cAAAO,kBAAA,uBAAlBA,kBAAA,CAAoBC,OAAO,KAAI,wCAAwC,CAAC;IACnF;EACF,CAAC;EAED,oBACExB,OAAA,CAACF,SAAS;IACR2B,QAAQ,EAAEf,YAAa;IACvBgB,QAAQ,EAAEA,CAACf,CAAC,EAAEgB,KAAK,KAAMA,KAAK,KAAK,OAAO,GAAGtB,QAAQ,CAACM,CAAC,CAACiB,MAAM,CAACC,KAAK,CAAC,GAAGtB,WAAW,CAACI,CAAC,CAACiB,MAAM,CAACC,KAAK,CAAG;IACrGzB,KAAK,EAAEA,KAAM;IACbE,QAAQ,EAAEA,QAAS;IACnBE,KAAK,EAAEA;EAAM;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEN,CAAC;AAAC/B,EAAA,CAjCID,UAAU;EAAA,QACGL,WAAW;AAAA;AAAAsC,EAAA,GADxBjC,UAAU;AAmChB,eAAeA,UAAU;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}