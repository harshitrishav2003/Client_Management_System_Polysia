{"ast":null,"code":"var _jsxFileName = \"/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\n// // import React from \"react\";\n// // import { isAuthenticated, logout } from \"../utils/auth\";\n\n// // const Dashboard = () => {\n// //   if (!isAuthenticated()) {\n// //     window.location.href = \"/login\";\n// //     return null;\n// //   }\n\n// //   return (\n// //     <div>\n// //       <h2>Welcome to the Dashboard!</h2>\n// //       <button onClick={logout}>Logout</button>\n// //     </div>\n// //   );\n// // };\n\n// // export default Dashboard;\n// import React, { useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom';\n// import axios from 'axios'; // Ensure axios is installed: `npm install axios`\n// import './Dashboard.css'; // Custom CSS for the dashboard\n\n// const Dashboard = () => {\n//   const [clients, setClients] = useState([]);\n//   const [search, setSearch] = useState('');\n//   const [filters, setFilters] = useState({\n//     region: '',\n//     industry: '',\n//     status: ''\n//   });\n//   const [sortOrder, setSortOrder] = useState('asc'); // 'asc' or 'desc'\n//   const [sortColumn, setSortColumn] = useState('client_name'); // Default column to sort\n//   const [authToken, setAuthToken] = useState(localStorage.getItem('token') || ''); // Get the token from localStorage\n\n//   // Fetch clients from backend when the component mounts or filters/sort change\n//   useEffect(() => {\n//     fetchClients();\n//   }, [filters, sortColumn, sortOrder]);\n\n//   const fetchClients = () => {\n//     const query = new URLSearchParams({\n//       search,\n//       region: filters.region,\n//       industry: filters.industry,\n//       status: filters.status,\n//       sortColumn,\n//       sortOrder\n//     });\n\n//     axios\n//       .get(`http://localhost:5005/api/users?${query.toString()}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`, // Pass token in Authorization header\n//         },\n//       })\n//       .then((response) => {\n//         setClients(response.data);\n//       })\n//       .catch((err) => {\n//         console.error('Error fetching clients:', err);\n//         // Handle error (e.g., logout if token is invalid)\n//       });\n//   };\n\n//   const handleSearch = (e) => {\n//     setSearch(e.target.value);\n//   };\n\n//   const handleFilterChange = (e) => {\n//     const { name, value } = e.target;\n//     setFilters({ ...filters, [name]: value });\n//   };\n\n//   const handleSort = (column) => {\n//     const newSortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n//     setSortOrder(newSortOrder);\n//     setSortColumn(column);\n//   };\n\n//   const exportData = (format) => {\n//     // Logic to export as excel, pdf, csv\n//     alert(`Exporting data as ${format}`);\n//   };\n\n//   return (\n//     <div className=\"dashboard\">\n//       <h1>Client Dashboard</h1>\n\n//       {/* Search Bar */}\n//       <input\n//         type=\"text\"\n//         placeholder=\"Search clients...\"\n//         value={search}\n//         onChange={handleSearch}\n//       />\n\n//       {/* Filter Options */}\n//       <select name=\"region\" onChange={handleFilterChange} value={filters.region}>\n//         <option value=\"\">All Regions</option>\n//         <option value=\"North America\">North America</option>\n//         <option value=\"Europe\">Europe</option>\n//         <option value=\"Asia\">Asia</option>\n//       </select>\n\n//       <select name=\"industry\" onChange={handleFilterChange} value={filters.industry}>\n//         <option value=\"\">All Industries</option>\n//         <option value=\"Finance\">Finance</option>\n//         <option value=\"Technology\">Technology</option>\n//         <option value=\"Healthcare\">Healthcare</option>\n//       </select>\n\n//       <select name=\"status\" onChange={handleFilterChange} value={filters.status}>\n//         <option value=\"\">All Statuses</option>\n//         <option value=\"Active\">Active</option>\n//         <option value=\"Inactive\">Inactive</option>\n//       </select>\n\n//       {/* Export Buttons */}\n//       <button onClick={() => exportData('excel')}>Export as Excel</button>\n//       <button onClick={() => exportData('pdf')}>Export as PDF</button>\n//       <button onClick={() => exportData('csv')}>Export as CSV</button>\n\n//       {/* Client Data Table */}\n//       <table>\n//         <thead>\n//           <tr>\n//             <th onClick={() => handleSort('client_name')}>Client Name</th>\n//             <th onClick={() => handleSort('industry')}>Industry</th>\n//             <th onClick={() => handleSort('status')}>Status</th>\n//             <th>Contact Person</th>\n//             <th>Location</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {clients.length > 0 ? (\n//             clients.map((client) => (\n//               <tr key={client._id}>\n//                 <td>\n//                   <Link to={`/client/${client._id}`}>{client.client_name}</Link>\n//                 </td>\n//                 <td>{client.industry}</td>\n//                 <td>{client.status}</td>\n//                 <td>{client.contact_person}</td>\n//                 <td>\n//                   {`${client.address.street}, ${client.address.city}, ${client.address.state}, ${client.address.postal_code}, ${client.address.country}`}\n//                 </td>\n//               </tr>\n//             ))\n//           ) : (\n//             <tr>\n//               <td colSpan=\"5\">No clients found</td>\n//             </tr>\n//           )}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [clients, setClients] = useState([]);\n  const [search, setSearch] = useState('');\n  const [filters, setFilters] = useState({\n    region: '',\n    industry: '',\n    status: ''\n  });\n  const [sortOrder, setSortOrder] = useState('asc');\n  const [sortColumn, setSortColumn] = useState('client_name');\n  const [authToken, setAuthToken] = useState(localStorage.getItem('token') || '');\n  const [editClient, setEditClient] = useState(null); // Track client being edited\n  const [isEditing, setIsEditing] = useState(false); // Toggle edit mode\n\n  useEffect(() => {\n    fetchClients();\n  }, [filters, sortColumn, sortOrder]);\n  const fetchClients = () => {\n    const query = new URLSearchParams({\n      search,\n      region: filters.region,\n      industry: filters.industry,\n      status: filters.status,\n      sortColumn,\n      sortOrder\n    });\n    axios.get(`http://localhost:5005/api/users?${query.toString()}`, {\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    }).then(response => setClients(response.data)).catch(err => console.error('Error fetching clients:', err));\n  };\n  const handleSearch = e => setSearch(e.target.value);\n  const handleFilterChange = e => setFilters({\n    ...filters,\n    [e.target.name]: e.target.value\n  });\n  const handleSort = column => setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n  const handleDelete = clientId => {\n    axios.delete(`http://localhost:5005/api/users/${clientId}`, {\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    }).then(() => fetchClients()) // Refresh clients list after deletion\n    .catch(err => console.error('Error deleting client:', err));\n  };\n  const handleEdit = client => {\n    setEditClient(client); // Set the client to be edited\n    setIsEditing(true); // Enable edit mode\n  };\n  const handleEditChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditClient({\n      ...editClient,\n      [name]: value\n    }); // Update client details\n  };\n  const handleEditSubmit = () => {\n    axios.put(`http://localhost:5005/api/users/${editClient._id}`, editClient, {\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    }).then(() => {\n      setIsEditing(false); // Disable edit mode\n      setEditClient(null); // Clear edit client\n      fetchClients(); // Refresh clients list\n    }).catch(err => console.error('Error updating client:', err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Client Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search clients...\",\n      value: search,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"region\",\n      onChange: handleFilterChange,\n      value: filters.region,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"All Regions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"North America\",\n        children: \"North America\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Europe\",\n        children: \"Europe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Asia\",\n        children: \"Asia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"industry\",\n      onChange: handleFilterChange,\n      value: filters.industry,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"All Industries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Finance\",\n        children: \"Finance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Technology\",\n        children: \"Technology\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Healthcare\",\n        children: \"Healthcare\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"status\",\n      onChange: handleFilterChange,\n      value: filters.status,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"All Statuses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Active\",\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Inactive\",\n        children: \"Inactive\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('client_name'),\n            children: \"Client Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('industry'),\n            children: \"Industry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('status'),\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Contact Person\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: clients.map(client => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: client.client_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: client.industry\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: client.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: client.contact_person\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [client.address.city, \", \", client.address.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(client),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(client._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this)]\n        }, client._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Client\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"client_name\",\n        value: editClient.client_name,\n        onChange: handleEditChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"industry\",\n        value: editClient.industry,\n        onChange: handleEditChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"status\",\n        value: editClient.status,\n        onChange: handleEditChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEditSubmit,\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsEditing(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"EZAFIdmF7uivA7Ui+i02+EDKlH0=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Link","axios","jsxDEV","_jsxDEV","Dashboard","_s","clients","setClients","search","setSearch","filters","setFilters","region","industry","status","sortOrder","setSortOrder","sortColumn","setSortColumn","authToken","setAuthToken","localStorage","getItem","editClient","setEditClient","isEditing","setIsEditing","fetchClients","query","URLSearchParams","get","toString","headers","Authorization","then","response","data","catch","err","console","error","handleSearch","e","target","value","handleFilterChange","name","handleSort","column","handleDelete","clientId","delete","handleEdit","client","handleEditChange","handleEditSubmit","put","_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","map","client_name","contact_person","address","city","country","_c","$RefreshReg$"],"sources":["/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/Dashboard.js"],"sourcesContent":["// // import React from \"react\";\n// // import { isAuthenticated, logout } from \"../utils/auth\";\n\n// // const Dashboard = () => {\n// //   if (!isAuthenticated()) {\n// //     window.location.href = \"/login\";\n// //     return null;\n// //   }\n\n// //   return (\n// //     <div>\n// //       <h2>Welcome to the Dashboard!</h2>\n// //       <button onClick={logout}>Logout</button>\n// //     </div>\n// //   );\n// // };\n\n// // export default Dashboard;\n// import React, { useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom';\n// import axios from 'axios'; // Ensure axios is installed: `npm install axios`\n// import './Dashboard.css'; // Custom CSS for the dashboard\n\n// const Dashboard = () => {\n//   const [clients, setClients] = useState([]);\n//   const [search, setSearch] = useState('');\n//   const [filters, setFilters] = useState({\n//     region: '',\n//     industry: '',\n//     status: ''\n//   });\n//   const [sortOrder, setSortOrder] = useState('asc'); // 'asc' or 'desc'\n//   const [sortColumn, setSortColumn] = useState('client_name'); // Default column to sort\n//   const [authToken, setAuthToken] = useState(localStorage.getItem('token') || ''); // Get the token from localStorage\n\n//   // Fetch clients from backend when the component mounts or filters/sort change\n//   useEffect(() => {\n//     fetchClients();\n//   }, [filters, sortColumn, sortOrder]);\n\n//   const fetchClients = () => {\n//     const query = new URLSearchParams({\n//       search,\n//       region: filters.region,\n//       industry: filters.industry,\n//       status: filters.status,\n//       sortColumn,\n//       sortOrder\n//     });\n\n//     axios\n//       .get(`http://localhost:5005/api/users?${query.toString()}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`, // Pass token in Authorization header\n//         },\n//       })\n//       .then((response) => {\n//         setClients(response.data);\n//       })\n//       .catch((err) => {\n//         console.error('Error fetching clients:', err);\n//         // Handle error (e.g., logout if token is invalid)\n//       });\n//   };\n\n//   const handleSearch = (e) => {\n//     setSearch(e.target.value);\n//   };\n\n//   const handleFilterChange = (e) => {\n//     const { name, value } = e.target;\n//     setFilters({ ...filters, [name]: value });\n//   };\n\n//   const handleSort = (column) => {\n//     const newSortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n//     setSortOrder(newSortOrder);\n//     setSortColumn(column);\n//   };\n\n//   const exportData = (format) => {\n//     // Logic to export as excel, pdf, csv\n//     alert(`Exporting data as ${format}`);\n//   };\n\n//   return (\n//     <div className=\"dashboard\">\n//       <h1>Client Dashboard</h1>\n\n//       {/* Search Bar */}\n//       <input\n//         type=\"text\"\n//         placeholder=\"Search clients...\"\n//         value={search}\n//         onChange={handleSearch}\n//       />\n\n//       {/* Filter Options */}\n//       <select name=\"region\" onChange={handleFilterChange} value={filters.region}>\n//         <option value=\"\">All Regions</option>\n//         <option value=\"North America\">North America</option>\n//         <option value=\"Europe\">Europe</option>\n//         <option value=\"Asia\">Asia</option>\n//       </select>\n\n//       <select name=\"industry\" onChange={handleFilterChange} value={filters.industry}>\n//         <option value=\"\">All Industries</option>\n//         <option value=\"Finance\">Finance</option>\n//         <option value=\"Technology\">Technology</option>\n//         <option value=\"Healthcare\">Healthcare</option>\n//       </select>\n\n//       <select name=\"status\" onChange={handleFilterChange} value={filters.status}>\n//         <option value=\"\">All Statuses</option>\n//         <option value=\"Active\">Active</option>\n//         <option value=\"Inactive\">Inactive</option>\n//       </select>\n\n//       {/* Export Buttons */}\n//       <button onClick={() => exportData('excel')}>Export as Excel</button>\n//       <button onClick={() => exportData('pdf')}>Export as PDF</button>\n//       <button onClick={() => exportData('csv')}>Export as CSV</button>\n\n//       {/* Client Data Table */}\n//       <table>\n//         <thead>\n//           <tr>\n//             <th onClick={() => handleSort('client_name')}>Client Name</th>\n//             <th onClick={() => handleSort('industry')}>Industry</th>\n//             <th onClick={() => handleSort('status')}>Status</th>\n//             <th>Contact Person</th>\n//             <th>Location</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {clients.length > 0 ? (\n//             clients.map((client) => (\n//               <tr key={client._id}>\n//                 <td>\n//                   <Link to={`/client/${client._id}`}>{client.client_name}</Link>\n//                 </td>\n//                 <td>{client.industry}</td>\n//                 <td>{client.status}</td>\n//                 <td>{client.contact_person}</td>\n//                 <td>\n//                   {`${client.address.street}, ${client.address.city}, ${client.address.state}, ${client.address.postal_code}, ${client.address.country}`}\n//                 </td>\n//               </tr>\n//             ))\n//           ) : (\n//             <tr>\n//               <td colSpan=\"5\">No clients found</td>\n//             </tr>\n//           )}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './Dashboard.css';\n\nconst Dashboard = () => {\n  const [clients, setClients] = useState([]);\n  const [search, setSearch] = useState('');\n  const [filters, setFilters] = useState({ region: '', industry: '', status: '' });\n  const [sortOrder, setSortOrder] = useState('asc');\n  const [sortColumn, setSortColumn] = useState('client_name');\n  const [authToken, setAuthToken] = useState(localStorage.getItem('token') || '');\n\n  const [editClient, setEditClient] = useState(null); // Track client being edited\n  const [isEditing, setIsEditing] = useState(false); // Toggle edit mode\n\n  useEffect(() => {\n    fetchClients();\n  }, [filters, sortColumn, sortOrder]);\n\n  const fetchClients = () => {\n    const query = new URLSearchParams({\n      search,\n      region: filters.region,\n      industry: filters.industry,\n      status: filters.status,\n      sortColumn,\n      sortOrder,\n    });\n\n    axios\n      .get(`http://localhost:5005/api/users?${query.toString()}`, {\n        headers: { Authorization: `Bearer ${authToken}` },\n      })\n      .then((response) => setClients(response.data))\n      .catch((err) => console.error('Error fetching clients:', err));\n  };\n\n  const handleSearch = (e) => setSearch(e.target.value);\n  const handleFilterChange = (e) => setFilters({ ...filters, [e.target.name]: e.target.value });\n  const handleSort = (column) => setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n\n  const handleDelete = (clientId) => {\n    axios\n      .delete(`http://localhost:5005/api/users/${clientId}`, {\n        headers: { Authorization: `Bearer ${authToken}` },\n      })\n      .then(() => fetchClients()) // Refresh clients list after deletion\n      .catch((err) => console.error('Error deleting client:', err));\n  };\n\n  const handleEdit = (client) => {\n    setEditClient(client); // Set the client to be edited\n    setIsEditing(true); // Enable edit mode\n  };\n\n  const handleEditChange = (e) => {\n    const { name, value } = e.target;\n    setEditClient({ ...editClient, [name]: value }); // Update client details\n  };\n\n  const handleEditSubmit = () => {\n    axios\n      .put(`http://localhost:5005/api/users/${editClient._id}`, editClient, {\n        headers: { Authorization: `Bearer ${authToken}` },\n      })\n      .then(() => {\n        setIsEditing(false); // Disable edit mode\n        setEditClient(null); // Clear edit client\n        fetchClients(); // Refresh clients list\n      })\n      .catch((err) => console.error('Error updating client:', err));\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <h1>Client Dashboard</h1>\n\n      {/* Search and Filters */}\n      <input type=\"text\" placeholder=\"Search clients...\" value={search} onChange={handleSearch} />\n      <select name=\"region\" onChange={handleFilterChange} value={filters.region}>\n        <option value=\"\">All Regions</option>\n        <option value=\"North America\">North America</option>\n        <option value=\"Europe\">Europe</option>\n        <option value=\"Asia\">Asia</option>\n      </select>\n      <select name=\"industry\" onChange={handleFilterChange} value={filters.industry}>\n        <option value=\"\">All Industries</option>\n        <option value=\"Finance\">Finance</option>\n        <option value=\"Technology\">Technology</option>\n        <option value=\"Healthcare\">Healthcare</option>\n      </select>\n      <select name=\"status\" onChange={handleFilterChange} value={filters.status}>\n        <option value=\"\">All Statuses</option>\n        <option value=\"Active\">Active</option>\n        <option value=\"Inactive\">Inactive</option>\n      </select>\n\n      {/* Data Table */}\n      <table>\n        <thead>\n          <tr>\n            <th onClick={() => handleSort('client_name')}>Client Name</th>\n            <th onClick={() => handleSort('industry')}>Industry</th>\n            <th onClick={() => handleSort('status')}>Status</th>\n            <th>Contact Person</th>\n            <th>Location</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {clients.map((client) => (\n            <tr key={client._id}>\n              <td>{client.client_name}</td>\n              <td>{client.industry}</td>\n              <td>{client.status}</td>\n              <td>{client.contact_person}</td>\n              <td>{client.address.city}, {client.address.country}</td>\n              <td>\n                <button onClick={() => handleEdit(client)}>Edit</button>\n                <button onClick={() => handleDelete(client._id)}>Delete</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      {/* Edit Modal */}\n      {isEditing && (\n        <div className=\"edit-modal\">\n          <h3>Edit Client</h3>\n          <input\n            type=\"text\"\n            name=\"client_name\"\n            value={editClient.client_name}\n            onChange={handleEditChange}\n          />\n          <input\n            type=\"text\"\n            name=\"industry\"\n            value={editClient.industry}\n            onChange={handleEditChange}\n          />\n          <input\n            type=\"text\"\n            name=\"status\"\n            value={editClient.status}\n            onChange={handleEditChange}\n          />\n          <button onClick={handleEditSubmit}>Save Changes</button>\n          <button onClick={() => setIsEditing(false)}>Cancel</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC;IAAEc,MAAM,EAAE,EAAE;IAAEC,QAAQ,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAG,CAAC,CAAC;EAChF,MAAM,CAACC,SAAS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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}