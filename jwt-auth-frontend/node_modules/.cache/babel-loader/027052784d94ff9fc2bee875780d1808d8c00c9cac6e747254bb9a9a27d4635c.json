{"ast":null,"code":"var _jsxFileName = \"/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios'; // Ensure axios is installed: `npm install axios`\nimport './Dashboard.css'; // Custom CSS for the dashboard\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [clients, setClients] = useState([]);\n  const [search, setSearch] = useState('');\n  const [filters, setFilters] = useState({\n    region: '',\n    industry: '',\n    status: ''\n  });\n  const [sortOrder, setSortOrder] = useState('asc'); // 'asc' or 'desc'\n  const [sortColumn, setSortColumn] = useState('client_name'); // Default column to sort\n  const [authToken, setAuthToken] = useState(localStorage.getItem('token') || ''); // Get the token from localStorage\n  const [editingClient, setEditingClient] = useState(null);\n  const [error, setError] = useState('');\n  // Fetch clients from backend when the component mounts or filters/sort change\n  useEffect(() => {\n    fetchClients();\n  }, [filters, sortColumn, sortOrder]);\n  const fetchClients = () => {\n    const query = new URLSearchParams({\n      search,\n      region: filters.region,\n      industry: filters.industry,\n      status: filters.status,\n      sortColumn,\n      sortOrder\n    });\n    axios.get(`http://localhost:5005/api/users?${query.toString()}`, {\n      headers: {\n        Authorization: `Bearer ${authToken}` // Pass token in Authorization header\n      }\n    }).then(response => {\n      setClients(response.data);\n    }).catch(err => {\n      console.error('Error fetching clients:', err);\n      // Handle error (e.g., logout if token is invalid)\n    });\n  };\n  const handleSearch = e => {\n    setSearch(e.target.value);\n  };\n  const handleFilterChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFilters({\n      ...filters,\n      [name]: value\n    });\n  };\n  const handleSort = column => {\n    const newSortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n    setSortOrder(newSortOrder);\n    setSortColumn(column);\n  };\n  const handleEditClick = client => {\n    setEditingClient(client); // Set the client for editing\n  };\n  const handleEditChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditingClient({\n      ...editingClient,\n      [name]: value\n    });\n  };\n  const handleAddressChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditingClient({\n      ...editingClient,\n      address: {\n        ...editingClient.address,\n        [name]: value\n      }\n    });\n  };\n  const handleEditSubmit = async () => {\n    try {\n      await axios.put(`http://localhost:5005/api/users/${editingClient._id}`, editingClient, {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      });\n      // Update client list with the new details\n      setClients(clients.map(client => client._id === editingClient._id ? editingClient : client));\n      setEditingClient(null); // Close the editing form\n    } catch (err) {\n      console.error('Error updating client:', err);\n      setError('Failed to update client. Please try again.');\n    }\n  };\n  const handleDelete = clientId => {\n    // Make API call to delete client\n    axios.delete(`http://localhost:5005/api/users/${clientId}`, {\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    }).then(response => {\n      // Remove deleted client from the list\n      setClients(clients.filter(client => client._id !== clientId));\n      alert('Client deleted successfully');\n    }).catch(err => {\n      console.error('Error deleting client:', err);\n      alert('Failed to delete client');\n    });\n  };\n  const exportData = format => {\n    // Logic to export as excel, pdf, csv\n    alert(`Exporting data as ${format}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Client Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search clients...\",\n      value: search,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"region\",\n      onChange: handleFilterChange,\n      value: filters.region,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"All Regions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"North America\",\n        children: \"North America\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Europe\",\n        children: \"Europe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Asia\",\n        children: \"Asia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"industry\",\n      onChange: handleFilterChange,\n      value: filters.industry,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"All Industries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Finance\",\n        children: \"Finance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Technology\",\n        children: \"Technology\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Healthcare\",\n        children: \"Healthcare\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"status\",\n      onChange: handleFilterChange,\n      value: filters.status,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"All Statuses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Active\",\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Inactive\",\n        children: \"Inactive\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => exportData('excel'),\n      children: \"Export as Excel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => exportData('pdf'),\n      children: \"Export as PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => exportData('csv'),\n      children: \"Export as CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('client_name'),\n            children: \"Client Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('industry'),\n            children: \"Industry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('status'),\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Contact Person\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: clients.length > 0 ? clients.map(client => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/client/${client._id}`,\n              children: client.client_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: client.industry\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: client.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: client.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: client.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: client.contact_person\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: `${client.address.street}, ${client.address.city}, ${client.address.state}, ${client.address.postal_code}, ${client.address.country}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(client._id),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(client._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 17\n          }, this)]\n        }, client._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"6\",\n            children: \"No clients found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"+2G/JtYiQeX75NPXV8CctgWZDRw=\");\n_c = Dashboard;\nexport default Dashboard;\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './Dashboard.css';\n\n// const Dashboard = () => {\n//   const [clients, setClients] = useState([]);\n//   const [search, setSearch] = useState('');\n//   const [filters, setFilters] = useState({\n//     region: '',\n//     industry: '',\n//     status: '',\n//   });\n//   const [sortOrder, setSortOrder] = useState('asc');\n//   const [sortColumn, setSortColumn] = useState('client_name');\n//   const [authToken, setAuthToken] = useState(localStorage.getItem('token') || '');\n//   const [editingClient, setEditingClient] = useState(null); // Client being edited\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     fetchClients();\n//   }, [filters, sortColumn, sortOrder]);\n\n//   const fetchClients = () => {\n//     const query = new URLSearchParams({\n//       search,\n//       region: filters.region,\n//       industry: filters.industry,\n//       status: filters.status,\n//       sortColumn,\n//       sortOrder,\n//     });\n\n//     axios\n//       .get(`http://localhost:5005/api/users?${query.toString()}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then((response) => {\n//         setClients(response.data);\n//       })\n//       .catch((err) => {\n//         console.error('Error fetching clients:', err);\n//       });\n//   };\n\n//   const handleSearch = (e) => {\n//     setSearch(e.target.value);\n//   };\n\n//   const handleFilterChange = (e) => {\n//     const { name, value } = e.target;\n//     setFilters({ ...filters, [name]: value });\n//   };\n\n//   const handleSort = (column) => {\n//     const newSortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n//     setSortOrder(newSortOrder);\n//     setSortColumn(column);\n//   };\n\n//   const handleEditClick = (client) => {\n//     setEditingClient(client); // Set the client for editing\n//   };\n\n//   const handleEditChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditingClient({ ...editingClient, [name]: value });\n//   };\n\n//   const handleAddressChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditingClient({\n//       ...editingClient,\n//       address: {\n//         ...editingClient.address,\n//         [name]: value,\n//       },\n//     });\n//   };\n\n//   const handleEditSubmit = async () => {\n//     try {\n//       await axios.put(\n//         `http://localhost:5005/api/users/${editingClient._id}`,\n//         editingClient,\n//         {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         }\n//       );\n//       // Update client list with the new details\n//       setClients(\n//         clients.map((client) =>\n//           client._id === editingClient._id ? editingClient : client\n//         )\n//       );\n//       setEditingClient(null); // Close the editing form\n//     } catch (err) {\n//       console.error('Error updating client:', err);\n//       setError('Failed to update client. Please try again.');\n//     }\n//   };\n\n//   const handleDelete = (clientId) => {\n//     axios\n//       .delete(`http://localhost:5005/api/users/${clientId}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then(() => {\n//         setClients(clients.filter((client) => client._id !== clientId));\n//         alert('Client deleted successfully');\n//       })\n//       .catch((err) => {\n//         console.error('Error deleting client:', err);\n//       });\n//   };\n\n//   return (\n//     <div className=\"dashboard\">\n//       <h1>Client Dashboard</h1>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Search clients...\"\n//         value={search}\n//         onChange={handleSearch}\n//       />\n\n//       {/* Filter Options */}\n//       <select name=\"region\" onChange={handleFilterChange} value={filters.region}>\n//         <option value=\"\">All Regions</option>\n//         <option value=\"North America\">North America</option>\n//         <option value=\"Europe\">Europe</option>\n//         <option value=\"Asia\">Asia</option>\n//       </select>\n//       <select\n//         name=\"industry\"\n//         onChange={handleFilterChange}\n//         value={filters.industry}\n//       >\n//         <option value=\"\">All Industries</option>\n//         <option value=\"Finance\">Finance</option>\n//         <option value=\"Technology\">Technology</option>\n//         <option value=\"Healthcare\">Healthcare</option>\n//       </select>\n//       <select\n//         name=\"status\"\n//         onChange={handleFilterChange}\n//         value={filters.status}\n//       >\n//         <option value=\"\">All Statuses</option>\n//         <option value=\"Active\">Active</option>\n//         <option value=\"Inactive\">Inactive</option>\n//       </select>\n\n//       <table>\n//         <thead>\n//           <tr>\n//             <th onClick={() => handleSort('client_name')}>Client Name</th>\n//             <th onClick={() => handleSort('industry')}>Industry</th>\n//             <th onClick={() => handleSort('status')}>Status</th>\n//             <th>Email</th>\n//             <th>Phone</th>\n//             <th>Contact Person</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {clients.map((client) => (\n//             <tr key={client._id}>\n//               <td>{client.client_name}</td>\n//               <td>{client.industry}</td>\n//               <td>{client.status}</td>\n//               <td>{client.email}</td>\n//               <td>{client.phone}</td>\n//               <td>{client.contact_person}</td>\n//               <td>\n//                 <button onClick={() => handleEditClick(client)}>Edit</button>\n//                 <button onClick={() => handleDelete(client._id)}>Delete</button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n\n//       {editingClient && (\n//         <div className=\"edit-modal\">\n//           <h3>Edit Client</h3>\n//           <input\n//             type=\"text\"\n//             name=\"client_name\"\n//             value={editingClient.client_name}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"contact_person\"\n//             value={editingClient.contact_person}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"email\"\n//             value={editingClient.email}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"phone\"\n//             value={editingClient.phone}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"industry\"\n//             value={editingClient.industry}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <h3>Address</h3>\n//           <input\n//             type=\"text\"\n//             name=\"street\"\n//             value={editingClient.address?.street}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"city\"\n//             value={editingClient.address?.city}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"state\"\n//             value={editingClient.address?.state}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"postal_code\"\n//             value={editingClient.address?.postal_code}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"country\"\n//             value={editingClient.address?.country}\n//             onChange={handleAddressChange}\n//           />\n//           <button onClick={handleEditSubmit}>Save</button>\n//           <button onClick={() => setEditingClient(null)}>Cancel</button>\n//           {error && <p>{error}</p>}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Link","axios","jsxDEV","_jsxDEV","Dashboard","_s","clients","setClients","search","setSearch","filters","setFilters","region","industry","status","sortOrder","setSortOrder","sortColumn","setSortColumn","authToken","setAuthToken","localStorage","getItem","editingClient","setEditingClient","error","setError","fetchClients","query","URLSearchParams","get","toString","headers","Authorization","then","response","data","catch","err","console","handleSearch","e","target","value","handleFilterChange","name","handleSort","column","newSortOrder","handleEditClick","client","handleEditChange","handleAddressChange","address","handleEditSubmit","put","_id","map","handleDelete","clientId","delete","filter","alert","exportData","format","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","length","to","client_name","email","phone","contact_person","street","city","state","postal_code","country","handleEdit","colSpan","_c","$RefreshReg$"],"sources":["/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/Dashboard.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios'; // Ensure axios is installed: `npm install axios`\nimport './Dashboard.css'; // Custom CSS for the dashboard\n\nconst Dashboard = () => {\n  const [clients, setClients] = useState([]);\n  const [search, setSearch] = useState('');\n  const [filters, setFilters] = useState({\n    region: '',\n    industry: '',\n    status: ''\n  });\n  const [sortOrder, setSortOrder] = useState('asc'); // 'asc' or 'desc'\n  const [sortColumn, setSortColumn] = useState('client_name'); // Default column to sort\n  const [authToken, setAuthToken] = useState(localStorage.getItem('token') || ''); // Get the token from localStorage\n  const [editingClient, setEditingClient] = useState(null);\n  const [error, setError] = useState('')\n  // Fetch clients from backend when the component mounts or filters/sort change\n  useEffect(() => {\n    fetchClients();\n  }, [filters, sortColumn, sortOrder]);\n\n  const fetchClients = () => {\n    const query = new URLSearchParams({\n      search,\n      region: filters.region,\n      industry: filters.industry,\n      status: filters.status,\n      sortColumn,\n      sortOrder\n    });\n\n    axios\n      .get(`http://localhost:5005/api/users?${query.toString()}`, {\n        headers: {\n          Authorization: `Bearer ${authToken}`, // Pass token in Authorization header\n        },\n      })\n      .then((response) => {\n        setClients(response.data);\n      })\n      .catch((err) => {\n        console.error('Error fetching clients:', err);\n        // Handle error (e.g., logout if token is invalid)\n      });\n  };\n\n  const handleSearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const handleFilterChange = (e) => {\n    const { name, value } = e.target;\n    setFilters({ ...filters, [name]: value });\n  };\n\n  const handleSort = (column) => {\n    const newSortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n    setSortOrder(newSortOrder);\n    setSortColumn(column);\n  };\n\n  const handleEditClick = (client) => {\n    setEditingClient(client); // Set the client for editing\n  };\n\n  const handleEditChange = (e) => {\n    const { name, value } = e.target;\n    setEditingClient({ ...editingClient, [name]: value });\n  };\n\n  const handleAddressChange = (e) => {\n    const { name, value } = e.target;\n    setEditingClient({\n      ...editingClient,\n      address: {\n        ...editingClient.address,\n        [name]: value,\n      },\n    });\n  };\n\n  const handleEditSubmit = async () => {\n    try {\n      await axios.put(\n        `http://localhost:5005/api/users/${editingClient._id}`,\n        editingClient,\n        {\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n          },\n        }\n      );\n      // Update client list with the new details\n      setClients(\n        clients.map((client) =>\n          client._id === editingClient._id ? editingClient : client\n        )\n      );\n      setEditingClient(null); // Close the editing form\n    } catch (err) {\n      console.error('Error updating client:', err);\n      setError('Failed to update client. Please try again.');\n    }\n  };\n\n\n  const handleDelete = (clientId) => {\n    // Make API call to delete client\n    axios\n      .delete(`http://localhost:5005/api/users/${clientId}`, {\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n        },\n      })\n      .then((response) => {\n        // Remove deleted client from the list\n        setClients(clients.filter((client) => client._id !== clientId));\n        alert('Client deleted successfully');\n      })\n      .catch((err) => {\n        console.error('Error deleting client:', err);\n        alert('Failed to delete client');\n      });\n  };\n\n  const exportData = (format) => {\n    // Logic to export as excel, pdf, csv\n    alert(`Exporting data as ${format}`);\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <h1>Client Dashboard</h1>\n\n      {/* Search Bar */}\n      <input\n        type=\"text\"\n        placeholder=\"Search clients...\"\n        value={search}\n        onChange={handleSearch}\n      />\n\n      {/* Filter Options */}\n      <select name=\"region\" onChange={handleFilterChange} value={filters.region}>\n        <option value=\"\">All Regions</option>\n        <option value=\"North America\">North America</option>\n        <option value=\"Europe\">Europe</option>\n        <option value=\"Asia\">Asia</option>\n      </select>\n\n      <select name=\"industry\" onChange={handleFilterChange} value={filters.industry}>\n        <option value=\"\">All Industries</option>\n        <option value=\"Finance\">Finance</option>\n        <option value=\"Technology\">Technology</option>\n        <option value=\"Healthcare\">Healthcare</option>\n      </select>\n\n      <select name=\"status\" onChange={handleFilterChange} value={filters.status}>\n        <option value=\"\">All Statuses</option>\n        <option value=\"Active\">Active</option>\n        <option value=\"Inactive\">Inactive</option>\n      </select>\n\n      {/* Export Buttons */}\n      <button onClick={() => exportData('excel')}>Export as Excel</button>\n      <button onClick={() => exportData('pdf')}>Export as PDF</button>\n      <button onClick={() => exportData('csv')}>Export as CSV</button>\n\n      {/* Client Data Table */}\n      <table>\n        <thead>\n          <tr>\n            <th onClick={() => handleSort('client_name')}>Client Name</th>\n            <th onClick={() => handleSort('industry')}>Industry</th>\n            <th onClick={() => handleSort('status')}>Status</th>\n            <th>Email</th>\n            <th>Phone</th>\n            <th>Contact Person</th>\n            <th>Location</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {clients.length > 0 ? (\n            clients.map((client) => (\n              <tr key={client._id}>\n                <td>\n                  <Link to={`/client/${client._id}`}>{client.client_name}</Link>\n                </td>\n                <td>{client.industry}</td>\n                <td>{client.status}</td>\n                <td>{client.email}</td>\n                <td>{client.phone}</td>\n                <td>{client.contact_person}</td>\n                <td>\n                  {`${client.address.street}, ${client.address.city}, ${client.address.state}, ${client.address.postal_code}, ${client.address.country}`}\n                </td>\n                <td>\n                  <button onClick={() => handleEdit(client._id)}>Edit</button>\n                  <button onClick={() => handleDelete(client._id)}>Delete</button>\n                </td>\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td colSpan=\"6\">No clients found</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Dashboard;\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './Dashboard.css';\n\n// const Dashboard = () => {\n//   const [clients, setClients] = useState([]);\n//   const [search, setSearch] = useState('');\n//   const [filters, setFilters] = useState({\n//     region: '',\n//     industry: '',\n//     status: '',\n//   });\n//   const [sortOrder, setSortOrder] = useState('asc');\n//   const [sortColumn, setSortColumn] = useState('client_name');\n//   const [authToken, setAuthToken] = useState(localStorage.getItem('token') || '');\n//   const [editingClient, setEditingClient] = useState(null); // Client being edited\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     fetchClients();\n//   }, [filters, sortColumn, sortOrder]);\n\n//   const fetchClients = () => {\n//     const query = new URLSearchParams({\n//       search,\n//       region: filters.region,\n//       industry: filters.industry,\n//       status: filters.status,\n//       sortColumn,\n//       sortOrder,\n//     });\n\n//     axios\n//       .get(`http://localhost:5005/api/users?${query.toString()}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then((response) => {\n//         setClients(response.data);\n//       })\n//       .catch((err) => {\n//         console.error('Error fetching clients:', err);\n//       });\n//   };\n\n//   const handleSearch = (e) => {\n//     setSearch(e.target.value);\n//   };\n\n//   const handleFilterChange = (e) => {\n//     const { name, value } = e.target;\n//     setFilters({ ...filters, [name]: value });\n//   };\n\n//   const handleSort = (column) => {\n//     const newSortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n//     setSortOrder(newSortOrder);\n//     setSortColumn(column);\n//   };\n\n//   const handleEditClick = (client) => {\n//     setEditingClient(client); // Set the client for editing\n//   };\n\n//   const handleEditChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditingClient({ ...editingClient, [name]: value });\n//   };\n\n//   const handleAddressChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditingClient({\n//       ...editingClient,\n//       address: {\n//         ...editingClient.address,\n//         [name]: value,\n//       },\n//     });\n//   };\n\n//   const handleEditSubmit = async () => {\n//     try {\n//       await axios.put(\n//         `http://localhost:5005/api/users/${editingClient._id}`,\n//         editingClient,\n//         {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         }\n//       );\n//       // Update client list with the new details\n//       setClients(\n//         clients.map((client) =>\n//           client._id === editingClient._id ? editingClient : client\n//         )\n//       );\n//       setEditingClient(null); // Close the editing form\n//     } catch (err) {\n//       console.error('Error updating client:', err);\n//       setError('Failed to update client. Please try again.');\n//     }\n//   };\n\n//   const handleDelete = (clientId) => {\n//     axios\n//       .delete(`http://localhost:5005/api/users/${clientId}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then(() => {\n//         setClients(clients.filter((client) => client._id !== clientId));\n//         alert('Client deleted successfully');\n//       })\n//       .catch((err) => {\n//         console.error('Error deleting client:', err);\n//       });\n//   };\n\n//   return (\n//     <div className=\"dashboard\">\n//       <h1>Client Dashboard</h1>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Search clients...\"\n//         value={search}\n//         onChange={handleSearch}\n//       />\n\n//       {/* Filter Options */}\n//       <select name=\"region\" onChange={handleFilterChange} value={filters.region}>\n//         <option value=\"\">All Regions</option>\n//         <option value=\"North America\">North America</option>\n//         <option value=\"Europe\">Europe</option>\n//         <option value=\"Asia\">Asia</option>\n//       </select>\n//       <select\n//         name=\"industry\"\n//         onChange={handleFilterChange}\n//         value={filters.industry}\n//       >\n//         <option value=\"\">All Industries</option>\n//         <option value=\"Finance\">Finance</option>\n//         <option value=\"Technology\">Technology</option>\n//         <option value=\"Healthcare\">Healthcare</option>\n//       </select>\n//       <select\n//         name=\"status\"\n//         onChange={handleFilterChange}\n//         value={filters.status}\n//       >\n//         <option value=\"\">All Statuses</option>\n//         <option value=\"Active\">Active</option>\n//         <option value=\"Inactive\">Inactive</option>\n//       </select>\n\n//       <table>\n//         <thead>\n//           <tr>\n//             <th onClick={() => handleSort('client_name')}>Client Name</th>\n//             <th onClick={() => handleSort('industry')}>Industry</th>\n//             <th onClick={() => handleSort('status')}>Status</th>\n//             <th>Email</th>\n//             <th>Phone</th>\n//             <th>Contact Person</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {clients.map((client) => (\n//             <tr key={client._id}>\n//               <td>{client.client_name}</td>\n//               <td>{client.industry}</td>\n//               <td>{client.status}</td>\n//               <td>{client.email}</td>\n//               <td>{client.phone}</td>\n//               <td>{client.contact_person}</td>\n//               <td>\n//                 <button onClick={() => handleEditClick(client)}>Edit</button>\n//                 <button onClick={() => handleDelete(client._id)}>Delete</button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n\n//       {editingClient && (\n//         <div className=\"edit-modal\">\n//           <h3>Edit Client</h3>\n//           <input\n//             type=\"text\"\n//             name=\"client_name\"\n//             value={editingClient.client_name}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"contact_person\"\n//             value={editingClient.contact_person}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"email\"\n//             value={editingClient.email}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"phone\"\n//             value={editingClient.phone}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"industry\"\n//             value={editingClient.industry}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <h3>Address</h3>\n//           <input\n//             type=\"text\"\n//             name=\"street\"\n//             value={editingClient.address?.street}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"city\"\n//             value={editingClient.address?.city}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"state\"\n//             value={editingClient.address?.state}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"postal_code\"\n//             value={editingClient.address?.postal_code}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"country\"\n//             value={editingClient.address?.country}\n//             onChange={handleAddressChange}\n//           />\n//           <button onClick={handleEditSubmit}>Save</button>\n//           <button onClick={() => setEditingClient(null)}>Cancel</button>\n//           {error && <p>{error}</p>}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\n"],"mappings":"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;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAoF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}