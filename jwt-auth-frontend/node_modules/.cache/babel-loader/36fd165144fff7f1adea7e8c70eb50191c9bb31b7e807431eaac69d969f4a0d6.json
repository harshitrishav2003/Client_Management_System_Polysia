{"ast":null,"code":"var _jsxFileName = \"/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './Dashboard.css';\n// import PendingUsers from \"../components/PendingUser\";\n// import { Link } from 'react-router-dom';\n\n// const Dashboard = () => {\n//   const [clients, setClients] = useState([]);\n//   const [search, setSearch] = useState('');\n//   const [filters, setFilters] = useState({\n//     region: '',\n//     industry: '',\n//     status: '',\n//   });\n//   const [sortOrder, setSortOrder] = useState('asc');\n//   const [sortColumn, setSortColumn] = useState('client_name');\n//   const [authToken, setAuthToken] = useState(localStorage.getItem('token') || '');\n//   const [editingClient, setEditingClient] = useState(null); // Client being edited\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     fetchClients();\n//   }, [filters, sortColumn, sortOrder]);\n\n//   const fetchClients = () => {\n//     const query = new URLSearchParams({\n//       search,\n//       region: filters.region,\n//       industry: filters.industry,\n//       status: filters.status,\n//       sortColumn,\n//       sortOrder,\n//     });\n\n//     axios\n//       .get(`http://localhost:5005/api/users?${query.toString()}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then((response) => {\n//         setClients(response.data);\n//       })\n//       .catch((err) => {\n//         console.error('Error fetching clients:', err);\n//       });\n//   };\n\n//   const handleSearch = (e) => {\n//     setSearch(e.target.value);\n//   };\n\n//   const handleFilterChange = (e) => {\n//     const { name, value } = e.target;\n//     setFilters({ ...filters, [name]: value });\n//   };\n\n//   const handleSort = (column) => {\n//     const newSortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n//     setSortOrder(newSortOrder);\n//     setSortColumn(column);\n//   };\n\n//   const handleEditClick = (client) => {\n//     setEditingClient(client); // Set the client for editing\n//   };\n\n//   const handleEditChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditingClient({ ...editingClient, [name]: value });\n//   };\n\n//   const handleAddressChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditingClient({\n//       ...editingClient,\n//       address: {\n//         ...editingClient.address,\n//         [name]: value,\n//       },\n//     });\n//   };\n\n//   const handleEditSubmit = async () => {\n//     try {\n//       await axios.put(\n//         `http://localhost:5005/api/users/${editingClient._id}`,\n//         editingClient,\n//         {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         }\n//       );\n//       // Update client list with the new details\n//       setClients(\n//         clients.map((client) =>\n//           client._id === editingClient._id ? editingClient : client\n//         )\n//       );\n//       setEditingClient(null); // Close the editing form\n//     } catch (err) {\n//       console.error('Error updating client:', err);\n//       setError('Failed to update client. Please try again.');\n//     }\n//   };\n\n//   const handleDelete = (clientId) => {\n//     axios\n//       .delete(`http://localhost:5005/api/users/${clientId}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then(() => {\n//         setClients(clients.filter((client) => client._id !== clientId));\n//         alert('Client deleted successfully');\n//       })\n//       .catch((err) => {\n//         console.error('Error deleting client:', err);\n//       });\n//   };\n\n//   return (\n//     <div className=\"dashboard\">\n//       {/* <h1 className='Dash'>Client Dashboard</h1> */}\n//       <PendingUsers />\n//       <h1 className='Dash'>Clients</h1>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Search clients...\"\n//         value={search}\n//         onChange={handleSearch}\n//       />\n\n//       {/* Filter Options */}\n//       <select name=\"region\" onChange={handleFilterChange} value={filters.region}>\n//         <option value=\"\">All Regions</option>\n//         <option value=\"North America\">North America</option>\n//         <option value=\"Europe\">Europe</option>\n//         <option value=\"Asia\">Asia</option>\n//       </select>\n//       <select\n//         name=\"industry\"\n//         onChange={handleFilterChange}\n//         value={filters.industry}\n//       >\n//         <option value=\"\">All Industries</option>\n//         <option value=\"Finance\">Finance</option>\n//         <option value=\"Technology\">Technology</option>\n//         <option value=\"Healthcare\">Healthcare</option>\n//       </select>\n//       <select\n//         name=\"status\"\n//         onChange={handleFilterChange}\n//         value={filters.status}\n//       >\n//         <option value=\"\">All Statuses</option>\n//         <option value=\"Active\">Active</option>\n//         <option value=\"Inactive\">Inactive</option>\n//       </select>\n\n//       <table>\n//         <thead>\n//           <tr>\n//             <th onClick={() => handleSort('client_name')}>Client Name</th>\n//             <th onClick={() => handleSort('status')}>Status</th>\n//             <th onClick={() => handleSort('industry')}>Industry</th>\n\n//             <th>Email</th>\n//             <th>Phone</th>\n//             <th>Contact Person</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {clients.map((client) => (\n//             <tr key={client._id}>\n//                 <td>\n//                   <Link to={`/client/${client._id}`}>{client.client_name}</Link>\n//                 </td>\n\n//             <td>{client.status}</td>\n//               <td>{client.industry}</td>\n//               <td>{client.email}</td>\n//               <td>{client.phone}</td>\n//               <td>{client.contact_person}</td>\n//               <td>\n//                 <button onClick={() => handleEditClick(client)}>Edit</button>\n//                 <button onClick={() => handleDelete(client._id)}>Delete</button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n\n//       {editingClient && (\n//         <div className=\"edit-modal\">\n//           <h3>Edit Client</h3>\n//           <input\n//             type=\"text\"\n//             name=\"client_name\"\n//             value={editingClient.client_name}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"contact_person\"\n//             value={editingClient.contact_person}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"email\"\n//             value={editingClient.email}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"phone\"\n//             value={editingClient.phone}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"industry\"\n//             value={editingClient.industry}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <h3>Address</h3>\n//           <input\n//             type=\"text\"\n//             name=\"street\"\n//             value={editingClient.address?.street}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"city\"\n//             value={editingClient.address?.city}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"state\"\n//             value={editingClient.address?.state}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"postal_code\"\n//             value={editingClient.address?.postal_code}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"country\"\n//             value={editingClient.address?.country}\n//             onChange={handleAddressChange}\n//           />\n//           <button onClick={handleEditSubmit}>Save</button>\n//           <button onClick={() => setEditingClient(null)}>Cancel</button>\n//           {error && <p>{error}</p>}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Box, Typography, TextField, Select, MenuItem, Button, Dialog, DialogActions, DialogContent, DialogTitle, Snackbar } from '@mui/material';\nimport { DataGrid } from '@mui/x-data-grid';\nimport Sidebar from '../components/Sidebar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [clients, setClients] = useState([]);\n  const [search, setSearch] = useState('');\n  const [filters, setFilters] = useState({\n    region: '',\n    industry: '',\n    status: ''\n  });\n  const [sortModel, setSortModel] = useState([{\n    field: 'client_name',\n    sort: 'asc'\n  }]);\n  const [authToken] = useState(localStorage.getItem('token') || '');\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [editingClient, setEditingClient] = useState(null);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  useEffect(() => {\n    fetchClients();\n  }, [filters, sortModel]);\n  const fetchClients = () => {\n    axios.get(`http://localhost:5005/api/users`, {\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    }).then(response => setClients(response.data)).catch(err => console.error('Error fetching clients:', err));\n  };\n  const handleEditClick = client => {\n    setEditingClient(client);\n    setEditDialogOpen(true);\n  };\n  const handleEditChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditingClient(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleEditSubmit = () => {\n    axios.put(`http://localhost:5005/api/users/${editingClient._id}`, editingClient, {\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    }).then(() => {\n      fetchClients();\n      setEditDialogOpen(false);\n      setSnackbarOpen(true);\n    }).catch(err => console.error('Error updating client:', err));\n  };\n  const handleDelete = clientId => {\n    axios.delete(`http://localhost:5005/api/users/${clientId}`, {\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      }\n    }).then(() => fetchClients()).catch(err => console.error('Error deleting client:', err));\n  };\n  const columns = [{\n    field: 'client_name',\n    headerName: 'Client Name',\n    flex: 1\n  }, {\n    field: 'status',\n    headerName: 'Status',\n    flex: 1\n  }, {\n    field: 'industry',\n    headerName: 'Industry',\n    flex: 1\n  }, {\n    field: 'email',\n    headerName: 'Email',\n    flex: 1\n  }, {\n    field: 'phone',\n    headerName: 'Phone',\n    flex: 1\n  }, {\n    field: 'actions',\n    headerName: 'Actions',\n    sortable: false,\n    renderCell: params => /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        onClick: () => handleEditClick(params.row),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        color: \"error\",\n        onClick: () => handleDelete(params.row._id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 9\n    }, this),\n    flex: 1\n  }];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1,\n        p: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Client Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          gap: 2,\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Search\",\n          variant: \"outlined\",\n          size: \"small\",\n          value: search,\n          onChange: e => setSearch(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          name: \"region\",\n          value: filters.region,\n          onChange: e => setFilters({\n            ...filters,\n            region: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"\",\n            children: \"All Regions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"North America\",\n            children: \"North America\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Europe\",\n            children: \"Europe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          name: \"industry\",\n          value: filters.industry,\n          onChange: e => setFilters({\n            ...filters,\n            industry: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"\",\n            children: \"All Industries\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Finance\",\n            children: \"Finance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Technology\",\n            children: \"Technology\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: clients,\n        columns: columns,\n        pageSize: 5,\n        sortingMode: \"server\",\n        sortModel: sortModel,\n        onSortModelChange: setSortModel,\n        autoHeight: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: editDialogOpen,\n      onClose: () => setEditDialogOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Edit Client\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"client_name\",\n          label: \"Client Name\",\n          fullWidth: true,\n          margin: \"dense\",\n          value: (editingClient === null || editingClient === void 0 ? void 0 : editingClient.client_name) || '',\n          onChange: handleEditChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"email\",\n          label: \"Email\",\n          fullWidth: true,\n          margin: \"dense\",\n          value: (editingClient === null || editingClient === void 0 ? void 0 : editingClient.email) || '',\n          onChange: handleEditChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setEditDialogOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleEditSubmit,\n          color: \"primary\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbarOpen,\n      autoHideDuration: 3000,\n      message: \"Client updated successfully\",\n      onClose: () => setSnackbarOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 366,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"R4H1EY60sj2x61HRnOUuLopMY2c=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","Box","Typography","TextField","Select","MenuItem","Button","Dialog","DialogActions","DialogContent","DialogTitle","Snackbar","DataGrid","Sidebar","jsxDEV","_jsxDEV","Dashboard","_s","clients","setClients","search","setSearch","filters","setFilters","region","industry","status","sortModel","setSortModel","field","sort","authToken","localStorage","getItem","editDialogOpen","setEditDialogOpen","editingClient","setEditingClient","snackbarOpen","setSnackbarOpen","fetchClients","get","headers","Authorization","then","response","data","catch","err","console","error","handleEditClick","client","handleEditChange","e","name","value","target","prev","handleEditSubmit","put","_id","handleDelete","clientId","delete","columns","headerName","flex","sortable","renderCell","params","children","size","onClick","row","fileName","_jsxFileName","lineNumber","columnNumber","color","sx","display","height","flexGrow","p","variant","gutterBottom","gap","mb","label","onChange","rows","pageSize","sortingMode","onSortModelChange","autoHeight","open","onClose","fullWidth","margin","client_name","email","autoHideDuration","message","_c","$RefreshReg$"],"sources":["/Users/harshitrishav/Demo/jwt-auth-frontend/src/components/Dashboard.js"],"sourcesContent":["\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './Dashboard.css';\n// import PendingUsers from \"../components/PendingUser\";\n// import { Link } from 'react-router-dom';\n\n// const Dashboard = () => {\n//   const [clients, setClients] = useState([]);\n//   const [search, setSearch] = useState('');\n//   const [filters, setFilters] = useState({\n//     region: '',\n//     industry: '',\n//     status: '',\n//   });\n//   const [sortOrder, setSortOrder] = useState('asc');\n//   const [sortColumn, setSortColumn] = useState('client_name');\n//   const [authToken, setAuthToken] = useState(localStorage.getItem('token') || '');\n//   const [editingClient, setEditingClient] = useState(null); // Client being edited\n//   const [error, setError] = useState('');\n\n//   useEffect(() => {\n//     fetchClients();\n//   }, [filters, sortColumn, sortOrder]);\n\n//   const fetchClients = () => {\n//     const query = new URLSearchParams({\n//       search,\n//       region: filters.region,\n//       industry: filters.industry,\n//       status: filters.status,\n//       sortColumn,\n//       sortOrder,\n//     });\n\n//     axios\n//       .get(`http://localhost:5005/api/users?${query.toString()}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then((response) => {\n//         setClients(response.data);\n//       })\n//       .catch((err) => {\n//         console.error('Error fetching clients:', err);\n//       });\n//   };\n\n//   const handleSearch = (e) => {\n//     setSearch(e.target.value);\n//   };\n\n//   const handleFilterChange = (e) => {\n//     const { name, value } = e.target;\n//     setFilters({ ...filters, [name]: value });\n//   };\n\n//   const handleSort = (column) => {\n//     const newSortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n//     setSortOrder(newSortOrder);\n//     setSortColumn(column);\n//   };\n\n//   const handleEditClick = (client) => {\n//     setEditingClient(client); // Set the client for editing\n//   };\n\n//   const handleEditChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditingClient({ ...editingClient, [name]: value });\n//   };\n\n//   const handleAddressChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditingClient({\n//       ...editingClient,\n//       address: {\n//         ...editingClient.address,\n//         [name]: value,\n//       },\n//     });\n//   };\n\n//   const handleEditSubmit = async () => {\n//     try {\n//       await axios.put(\n//         `http://localhost:5005/api/users/${editingClient._id}`,\n//         editingClient,\n//         {\n//           headers: {\n//             Authorization: `Bearer ${authToken}`,\n//           },\n//         }\n//       );\n//       // Update client list with the new details\n//       setClients(\n//         clients.map((client) =>\n//           client._id === editingClient._id ? editingClient : client\n//         )\n//       );\n//       setEditingClient(null); // Close the editing form\n//     } catch (err) {\n//       console.error('Error updating client:', err);\n//       setError('Failed to update client. Please try again.');\n//     }\n//   };\n\n//   const handleDelete = (clientId) => {\n//     axios\n//       .delete(`http://localhost:5005/api/users/${clientId}`, {\n//         headers: {\n//           Authorization: `Bearer ${authToken}`,\n//         },\n//       })\n//       .then(() => {\n//         setClients(clients.filter((client) => client._id !== clientId));\n//         alert('Client deleted successfully');\n//       })\n//       .catch((err) => {\n//         console.error('Error deleting client:', err);\n//       });\n//   };\n\n//   return (\n//     <div className=\"dashboard\">\n//       {/* <h1 className='Dash'>Client Dashboard</h1> */}\n//       <PendingUsers />\n//       <h1 className='Dash'>Clients</h1>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Search clients...\"\n//         value={search}\n//         onChange={handleSearch}\n//       />\n\n//       {/* Filter Options */}\n//       <select name=\"region\" onChange={handleFilterChange} value={filters.region}>\n//         <option value=\"\">All Regions</option>\n//         <option value=\"North America\">North America</option>\n//         <option value=\"Europe\">Europe</option>\n//         <option value=\"Asia\">Asia</option>\n//       </select>\n//       <select\n//         name=\"industry\"\n//         onChange={handleFilterChange}\n//         value={filters.industry}\n//       >\n//         <option value=\"\">All Industries</option>\n//         <option value=\"Finance\">Finance</option>\n//         <option value=\"Technology\">Technology</option>\n//         <option value=\"Healthcare\">Healthcare</option>\n//       </select>\n//       <select\n//         name=\"status\"\n//         onChange={handleFilterChange}\n//         value={filters.status}\n//       >\n//         <option value=\"\">All Statuses</option>\n//         <option value=\"Active\">Active</option>\n//         <option value=\"Inactive\">Inactive</option>\n//       </select>\n\n//       <table>\n//         <thead>\n//           <tr>\n//             <th onClick={() => handleSort('client_name')}>Client Name</th>\n//             <th onClick={() => handleSort('status')}>Status</th>\n//             <th onClick={() => handleSort('industry')}>Industry</th>\n            \n//             <th>Email</th>\n//             <th>Phone</th>\n//             <th>Contact Person</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {clients.map((client) => (\n//             <tr key={client._id}>\n//                 <td>\n//                   <Link to={`/client/${client._id}`}>{client.client_name}</Link>\n//                 </td>\n              \n              \n//             <td>{client.status}</td>\n//               <td>{client.industry}</td>\n//               <td>{client.email}</td>\n//               <td>{client.phone}</td>\n//               <td>{client.contact_person}</td>\n//               <td>\n//                 <button onClick={() => handleEditClick(client)}>Edit</button>\n//                 <button onClick={() => handleDelete(client._id)}>Delete</button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n\n//       {editingClient && (\n//         <div className=\"edit-modal\">\n//           <h3>Edit Client</h3>\n//           <input\n//             type=\"text\"\n//             name=\"client_name\"\n//             value={editingClient.client_name}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"contact_person\"\n//             value={editingClient.contact_person}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"email\"\n//             value={editingClient.email}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"phone\"\n//             value={editingClient.phone}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"industry\"\n//             value={editingClient.industry}\n//             onChange={handleEditChange}\n//             required\n//           />\n//           <h3>Address</h3>\n//           <input\n//             type=\"text\"\n//             name=\"street\"\n//             value={editingClient.address?.street}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"city\"\n//             value={editingClient.address?.city}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"state\"\n//             value={editingClient.address?.state}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"postal_code\"\n//             value={editingClient.address?.postal_code}\n//             onChange={handleAddressChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"country\"\n//             value={editingClient.address?.country}\n//             onChange={handleAddressChange}\n//           />\n//           <button onClick={handleEditSubmit}>Save</button>\n//           <button onClick={() => setEditingClient(null)}>Cancel</button>\n//           {error && <p>{error}</p>}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {\n  Box,\n  Typography,\n  TextField,\n  Select,\n  MenuItem,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Snackbar,\n} from '@mui/material';\nimport { DataGrid } from '@mui/x-data-grid';\nimport Sidebar from '../components/Sidebar';\n\nconst Dashboard = () => {\n  const [clients, setClients] = useState([]);\n  const [search, setSearch] = useState('');\n  const [filters, setFilters] = useState({ region: '', industry: '', status: '' });\n  const [sortModel, setSortModel] = useState([{ field: 'client_name', sort: 'asc' }]);\n  const [authToken] = useState(localStorage.getItem('token') || '');\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [editingClient, setEditingClient] = useState(null);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n\n  useEffect(() => {\n    fetchClients();\n  }, [filters, sortModel]);\n\n  const fetchClients = () => {\n    axios.get(`http://localhost:5005/api/users`, {\n      headers: { Authorization: `Bearer ${authToken}` },\n    })\n      .then(response => setClients(response.data))\n      .catch(err => console.error('Error fetching clients:', err));\n  };\n\n  const handleEditClick = (client) => {\n    setEditingClient(client);\n    setEditDialogOpen(true);\n  };\n\n  const handleEditChange = (e) => {\n    const { name, value } = e.target;\n    setEditingClient(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleEditSubmit = () => {\n    axios.put(`http://localhost:5005/api/users/${editingClient._id}`, editingClient, {\n      headers: { Authorization: `Bearer ${authToken}` },\n    }).then(() => {\n      fetchClients();\n      setEditDialogOpen(false);\n      setSnackbarOpen(true);\n    }).catch(err => console.error('Error updating client:', err));\n  };\n\n  const handleDelete = (clientId) => {\n    axios.delete(`http://localhost:5005/api/users/${clientId}`, {\n      headers: { Authorization: `Bearer ${authToken}` },\n    }).then(() => fetchClients())\n      .catch(err => console.error('Error deleting client:', err));\n  };\n\n  const columns = [\n    { field: 'client_name', headerName: 'Client Name', flex: 1 },\n    { field: 'status', headerName: 'Status', flex: 1 },\n    { field: 'industry', headerName: 'Industry', flex: 1 },\n    { field: 'email', headerName: 'Email', flex: 1 },\n    { field: 'phone', headerName: 'Phone', flex: 1 },\n    {\n      field: 'actions',\n      headerName: 'Actions',\n      sortable: false,\n      renderCell: (params) => (\n        <Box>\n          <Button size=\"small\" onClick={() => handleEditClick(params.row)}>Edit</Button>\n          <Button size=\"small\" color=\"error\" onClick={() => handleDelete(params.row._id)}>Delete</Button>\n        </Box>\n      ),\n      flex: 1,\n    },\n  ];\n\n  return (\n    <Box sx={{ display: 'flex', height: '100vh' }}>\n      <Sidebar />\n      <Box sx={{ flexGrow: 1, p: 3 }}>\n        <Typography variant=\"h4\" gutterBottom>\n          Client Dashboard\n        </Typography>\n        <Box sx={{ display: 'flex', gap: 2, mb: 2 }}>\n          <TextField label=\"Search\" variant=\"outlined\" size=\"small\" value={search} onChange={(e) => setSearch(e.target.value)} />\n          <Select name=\"region\" value={filters.region} onChange={(e) => setFilters({ ...filters, region: e.target.value })}>\n            <MenuItem value=\"\">All Regions</MenuItem>\n            <MenuItem value=\"North America\">North America</MenuItem>\n            <MenuItem value=\"Europe\">Europe</MenuItem>\n          </Select>\n          <Select name=\"industry\" value={filters.industry} onChange={(e) => setFilters({ ...filters, industry: e.target.value })}>\n            <MenuItem value=\"\">All Industries</MenuItem>\n            <MenuItem value=\"Finance\">Finance</MenuItem>\n            <MenuItem value=\"Technology\">Technology</MenuItem>\n          </Select>\n        </Box>\n        <DataGrid rows={clients} columns={columns} pageSize={5} sortingMode=\"server\" sortModel={sortModel} onSortModelChange={setSortModel} autoHeight />\n      </Box>\n      {/* Edit Dialog */}\n      <Dialog open={editDialogOpen} onClose={() => setEditDialogOpen(false)}>\n        <DialogTitle>Edit Client</DialogTitle>\n        <DialogContent>\n          <TextField name=\"client_name\" label=\"Client Name\" fullWidth margin=\"dense\" value={editingClient?.client_name || ''} onChange={handleEditChange} />\n          <TextField name=\"email\" label=\"Email\" fullWidth margin=\"dense\" value={editingClient?.email || ''} onChange={handleEditChange} />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setEditDialogOpen(false)}>Cancel</Button>\n          <Button onClick={handleEditSubmit} color=\"primary\">Save</Button>\n        </DialogActions>\n      </Dialog>\n      {/* Snackbar Notification */}\n      <Snackbar open={snackbarOpen} autoHideDuration={3000} message=\"Client updated successfully\" onClose={() => setSnackbarOpen(false)} />\n    </Box>\n  );\n};\n\nexport default Dashboard;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}